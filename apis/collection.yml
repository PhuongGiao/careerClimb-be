openapi: 3.0.0
info:
  title: BOOKINGSTUDIO_BACKEND
  version: 1.0.0
servers:
  - url: http://localhost:3003
tags:
  - name: Partner
  - name: BookingUser
  - name: Province
  - name: Studio Post
  - name: Booking
  - name: Room
  - name: Export Data
  - name: Post(Dạo)
  - name: Rating And Report
paths:
  /api/register-partner:
    get:
      tags:
        - Partner
      summary: Get All Partner
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '3'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register-partner/24:
    get:
      tags:
        - Partner
      summary: Get Partner By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register-partner/update/24:
    patch:
      tags:
        - Partner
      summary: Update Partner By Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                PartnerName: Hang Đôi Studio
                RepresentativeName: Hoàng Đức Thắng
                Phone: '0967445997'
                OtherPhone: '0777445997'
                Email: hangdoistudio@gmail.com
                ReEmail: hangdoistudio@gmail.com
                BusinessRegistrationLicenseNumber: 123
                Address: 522 Nguyễn Hữu Thọ, p.Khuê Trung, q.Cẩm Lệ, Tp. Đà Nẵng
                BankBranchName: ACB bank - Chi nhánh Hòa Khánh
                BankAccount: '2412037'
                BankAccountOwnerName: HOANG DUC THANG
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register-partner/filter:
    post:
      tags:
        - Partner
      summary: Filter Partner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                PartnerName: studio
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/booking-user:
    get:
      tags:
        - BookingUser
      summary: Get All Booking User
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '0'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/booking-user/5:
    get:
      tags:
        - BookingUser
      summary: Get Booking User By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - BookingUser
      summary: Update Booking User & Block acount send stutus:false
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/province:
    get:
      tags:
        - Province
      summary: Get All Province
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/studio-post:
    get:
      tags:
        - Studio Post
      summary: Get All Studio Post
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Studio Post
      summary: filterStudioPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: ''
                CreateDate:
                  startDate: '2021-11-30T17:39:08.081Z'
                  endDate: '2022-12-30T17:39:08.081Z'
                updateDate:
                  startDate: '2021-11-30 17:40:05.103428'
                  endDate: '2022-12-30 17:40:05.103428'
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/studio-post/5:
    patch:
      tags:
        - Studio Post
      summary: updateById
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                IsDeleted: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Studio Post
      summary: getDetailById
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/booking:
    get:
      tags:
        - Booking
      summary: Get All Booking
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Booking
      summary: Filter Booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                OrderDate:
                  OrderByDateFrom: '2022-01-12T00:00:00.000Z'
                  OrderByDateTo: '2022-02-12T00:00:00.000Z'
                IsPayDeposit: false
                PaymentType: null
                IsDeleted: false
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/booking/5:
    get:
      tags:
        - Booking
      summary: Get Booking By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Booking
      summary: Update Booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                OrderByTime: true
                OrderByTimeFrom: '2022-01-12T00:00:00.000Z'
                OrderByTimeTo: '2022-01-12T00:00:00.000Z'
                OrderByDateFrom: '2022-01-12T00:00:00.000Z'
                OrderByDateTo: '2022-01-12T00:00:00.000Z'
                PaymentType: null
                OrderNote: null
                BookingUserName: Anh Anh Em Em
                BookingPhone: '0914481315'
                BookingStatus: 1
                BookingEmail: null
                StudioRoomId: 3
                PromoCodeId: null
                CreationTime: '2022-01-10T17:09:24.173Z'
                CreatorUserId: 1
                LastModificationTime: '2022-01-10T17:11:38.351Z'
                LastModifierUserId: null
                IsDeleted: false
                DeleterUserId: null
                DeletionTime: null
                EvidenceImage: null
                IsPayDeposit: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/room:
    get:
      tags:
        - Room
      summary: Get All Room
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/filter:
    get:
      tags:
        - Export Data
      summary: Filter
      parameters:
        - name: option
          in: query
          schema:
            type: integer
          example: '1'
        - name: ProvinceId
          in: query
          schema:
            type: integer
          example: '1'
        - name: isDelete
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: CreateDate
          in: query
          schema:
            type: number
          example: >-
            {"startDate": "2021-11-30T17:39:08.081Z","endDate":
            "2022-12-30T17:39:08.081Z"}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post-post/:
    post:
      tags:
        - Post(Dạo)
      summary: Upload post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                Tags:
                  type: string
                  example: studio,nguoimau
                Description:
                  type: string
                  example: >+
                    Lorem Ipsum is simply dummy text of the printing and
                    typesetting industry. Lorem Ipsum has been the industry's
                    standard dummy text ever since the 1500s, when an unknown
                    printer took a galley of type and scrambled it to make a
                    type specimen book. It has survived not only five centuries,
                    but also the leap into electronic typesetting, remaining
                    essentially unchanged. It was popularised in the 1960s with
                    the release of Letraset sheets containing Lorem Ipsum
                    passages, and more recently with desktop publishing software
                    like Aldus PageMaker including versions of Lorem Ipsum.

      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post-post:
    get:
      tags:
        - Post(Dạo)
      summary: Get post
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: tags
          in: query
          schema:
            type: string
          example: studio,makeup,nguoimau
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /image/f5f8027b-7ae8-4351-a3a2-966e2724e2fb:
    get:
      tags:
        - Post(Dạo)
      summary: URL Image link
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post-post/5:
    get:
      tags:
        - Post(Dạo)
      summary: Get Post By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Post(Dạo)
      summary: DeletPost
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/rating&report:
    get:
      tags:
        - Rating And Report
      summary: Get All
      parameters:
        - name: rating
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
