{"version":3,"sources":["_metronic/layout/core/DefaultLayoutConfig.ts","_metronic/layout/core/LayoutSetup.ts","_metronic/layout/core/LayoutProvider.tsx","_metronic/layout/core/PageData.tsx","_metronic/layout/core/MetronicSplashScreen.tsx","setup/URL/index.tsx","app/modules/auth/redux/AuthCRUD.ts","app/modules/auth/components/ForgotPassword.tsx","app/modules/auth/redux/UserInfoAPI.ts","app/modules/auth/redux/AuthRedux.ts","app/modules/auth/components/Login.tsx","_metronic/helpers/AssetHelpers.ts","_metronic/helpers/RouterHelpers.ts","_metronic/helpers/components/KTSVG.tsx","_metronic/helpers/crud-helper/models.ts","app/modules/auth/AuthPage.tsx","app/modules/auth/Logout.tsx","app/modules/auth/redux/AuthInit.tsx","setup/redux/RootReducer.ts","setup/redux/Store.ts","_metronic/i18n/Metronici18n.tsx","_metronic/assets/ts/components/_CookieComponent.ts","_metronic/assets/ts/_utils/_ElementStyleUtil.ts","_metronic/assets/ts/_utils/_DataUtil.ts","_metronic/assets/ts/_utils/_TypesHelpers.ts","_metronic/assets/ts/_utils/_DOMEventHandlerUtil.ts","_metronic/assets/ts/_utils/ElementAnimateUtil.ts","_metronic/assets/ts/_utils/DomHelpers.ts","_metronic/assets/ts/_utils/EventHandlerUtil.ts","_metronic/assets/ts/components/_DrawerComponent.ts","_metronic/assets/ts/components/_FeedbackComponent.ts","_metronic/assets/ts/components/_ImageInputComponent.ts","_metronic/assets/ts/components/_ScrollComponent.ts","_metronic/assets/ts/components/_ScrollTopComponent.ts","_metronic/assets/ts/components/_StepperComponent.ts","_metronic/assets/ts/components/_StickyComponent.ts","_metronic/assets/ts/components/_ToggleComponent.ts","_metronic/assets/ts/components/_PasswordMeterComponent.ts","_metronic/assets/ts/components/_SwapperComponent.ts","_metronic/assets/ts/components/MenuComponent.ts","_metronic/assets/ts/components/SearchComponent.ts","_metronic/partials/layout/quick-links/QuicLinks.tsx","_metronic/partials/layout/header-menus/HeaderUserMenu.tsx","_metronic/partials/layout/header-menus/HeaderNotificationsMenu.tsx","app/components/ChatTimeAgo/ChatTimeAgo.tsx","_metronic/partials/layout/drawer-messenger/ConnectSocketIo.tsx","app/components/TypingAnimation/TypingAnimation.tsx","_metronic/partials/layout/drawer-messenger/ChatContent.tsx","_metronic/partials/layout/drawer-messenger/ChatUser.tsx","_metronic/partials/layout/drawer-messenger/DrawerMessenger.tsx","_metronic/partials/modals/create-app/Main.tsx","_metronic/layout/components/header/Topbar.tsx","_metronic/layout/components/header/MasterHeader.tsx","_metronic/layout/components/aside/AsideMenuItemWithSub.tsx","_metronic/layout/components/aside/AsideMenuItem.tsx","_metronic/layout/components/aside/AsideMenuMain.tsx","app/components/SmoothScroll/SmoothScroll.tsx","_metronic/layout/components/aside/AsideMenu.tsx","_metronic/layout/components/aside/MasterAside.tsx","_metronic/partials/layout/drawer-messenger/ChatPageAdmin.tsx","_metronic/layout/MasterLayout.tsx","_metronic/partials/widgets/statistics/StatisticsWidget5.tsx","_metronic/partials/widgets/tables/TablesWidget5.tsx","_metronic/partials/widgets/stats/StatsWidget3.tsx","app/pages/dashboard/DashboardWrapper.tsx","app/routing/PrivateRoutes.tsx","_metronic/i18n/i18nProvider.tsx","_metronic/layout/MasterInit.tsx","app/App.tsx","app/routing/AppRoutes.tsx","setup/axios/SetupAxios.ts","index.tsx"],"names":["DefaultLayoutConfig","main","type","primaryColor","darkSkinEnabled","loader","display","scrolltop","header","width","left","fixed","desktop","tabletAndMobile","menuIcon","theme","textColor","megaMenu","aside","menu","minimized","minimize","hoverable","content","layout","underBackground","toolbar","tabletAndMobileMode","layouts","toolbar1","height","heightAndTabletMobileMode","toolbar2","toolbar3","toolbar4","toolbar5","footer","pageTitle","breadCrumbs","description","direction","responsive","responsiveBreakpoint","responsiveTarget","LAYOUT_CONFIG_KEY","process","getLayout","ls","localStorage","getItem","JSON","parse","er","console","error","getEmptyHTMLAttributes","asideMenu","Map","headerMobile","headerMenu","headerContainer","getEmptyCSSVariables","body","LayoutSetup","classes","asideToggle","toolbarContainer","contentContainer","footerContainer","sidebar","attributes","Object","assign","cssVariables","config","Array","from","document","forEach","attr","removeAttribute","name","setAttribute","backgroundImage","style","class","classList","add","push","typeOptions","bodyStyles","this","set","initLayout","initHeader","initPageTitle","initToolbar","initContent","initAside","initFooter","initAsideMenu","fieldsToUpdate","updatedConfig","initCSSClasses","initCSSVariables","initHTMLAttributes","isLoaded","initConfig","setItem","stringify","setLayout","bootstrap","updatePartialConfig","LayoutContext","createContext","disableSplashScreen","splashScreen","getElementById","setProperty","LayoutProvider","children","useState","setConfig","setClasses","setAttributes","setCSSVariables","value","_themeConfig","enableSplashScreen","cl","remove","setTimeout","useEffect","Provider","useLayout","useContext","PageDataContext","setPageTitle","_title","setPageBreadcrumbs","_breadcrumbs","setPageDescription","_description","PageDataProvider","pageDescription","pageBreadcrumbs","usePageData","PageTitle","breadcrumbs","toString","MetronicSplashScreenContext","undefined","LayoutSplashScreen","visible","setCount","prev","URL_BOOKING_STUDIO","URL_BOOKING_STUDIO_IMG","API_URL","GET_USER_BY_ACCESSTOKEN_URL","REQUEST_PASSWORD_URL","getUserByToken","token","axios","post","api_token","initialValues","email","forgotPasswordSchema","Yup","shape","min","max","required","ForgotPassword","loading","setLoading","hasErrors","setHasErrors","formik","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","then","data","result","catch","className","noValidate","id","handleSubmit","placeholder","autoComplete","getFieldProps","clsx","touched","errors","role","to","disabled","isSubmitting","isValid","PostType","AuthorizationClient","baseUrl","instance","jsonParseReviver","create","login","cancelToken","url_","replace","options_","method","url","headers","request","_error","isAxiosError","response","_response","processLoginAdmin","status","_headers","k","hasOwnProperty","result200","resultData200","LoginAdminResponse","fromJS","Promise","resolve","throwException","processLogin","UserResponse","facebookuser","processRegisterOrLoginFacebook","googleuser","processRegisterOrLoginGoogle","appleuser","processRegisterOrLoginApple","input","processRegisterPartner","RegisterPartner","EntityOfInteger","property","_data","Error","usertype","username","phone","companyname","fullname","experience","website","init","LoginAdminRequest","password","accessToken","expireDate","createddate","updateddate","updatedby","imageurl","facebookid","googleemail","facebooktoken","facebookfirstname","facebooklastname","facebookemail","facebookpicture","googlename","googlepicture","appleUserIdentifier","appleGivenName","appleFamilyName","appleEmail","Date","toISOString","FullAuditedEntity","isDeleted","deleterUserId","deletionTime","lastModificationTime","lastModifierUserId","creationTime","creatorUserId","partnerName","representativeName","otherPhone","reEmail","businessRegistrationLicenseNumber","address","bankBranchName","bankAccount","bankAccountOwnerName","autoGeneratedPassword","businessType","personalIdentity","ApiException","message","isApiException","obj","saga","actionTypes","initialAuthState","user","reducer","persistReducer","storage","key","whitelist","state","action","payload","actions","register","logout","requestUser","fulfillUser","setUser","takeLatest","loginSaga","put","registerSaga","userRequested","getToken","auth","select","loginSchema","Login","props","navigate","useNavigate","dispatch","useDispatch","a","inputEmailAdmin","inputPasswordAdmin","adminLogin","loginAdmin","authActions","first_name","last_name","log","color","fontWeight","marginBottom","background","toAbsoluteUrl","pathname","checkIsActive","current","split","getCurrentUrl","indexOf","KTSVG","path","svgClassName","src","AuthLayout","backgroundColor","href","alt","fontSize","paddingBottom","fontFamily","letterSpacing","top","AuthPage","element","index","Logout","location","reload","connector","connect","isAuthorized","useSelector","shallowEqual","didRequest","useRef","rootSaga","rootReducer","combineReducers","all","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","devTools","enhancers","reduxBatch","persistor","persistStore","run","I18N_CONFIG_KEY","REACT_APP_I18N_CONFIG_KEY","initialState","selectedLang","I18nContext","MetronicI18nProvider","lang","getConfig","CookieComponent","matches","cookie","match","RegExp","decodeURIComponent","cookieOptions","options","expires","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","ElementStyleUtil","important","attributeName","getPropertyValue","attibuteName","removeProperty","DataUtil","instanceData","get","newMap","delete","has","val","v","getObjectPropertyValueByKey","map","entries","getUniqueIdWithPrefix","prefix","Math","floor","random","getTime","stringSnakeToCamel","str","m","toUpperCase","DOMEventHandlerUtil","selector","eventName","callBack","eventId","e","targets","querySelectorAll","target","i","length","call","parentElement","addEventListener","funcFromStore","removeEventListener","calee","currentTarget","ElementAnimateUtil","duration","update","complete","easings","t","b","c","d","change","start","window","performance","now","requestAnimationFrame","loop","timestamp","time","animationName","animateClasses","cssClass","one","offset","targetPos","getElementOffset","scrollPos","pageYOffset","documentElement","scrollTop","animate","scrollTo","getCSS","el","styleProp","defaultView","ownerDocument","toLowerCase","getComputedStyle","getCSSVariableValue","variableName","hex","trim","getElementActualCss","prop","cache","css","getAttribute","cssText","offsetWidth","offsetHeight","parseFloat","attributeValue","getElementIndex","parentNode","getElementMatches","p","Element","prototype","f","webkitMatchesSelector","tagName","getClientRects","rect","getBoundingClientRect","win","pageXOffset","getScrollTop","scrollingElement","getViewPort","innerWidth","innerHeight","isVisibleElement","throttle","timer","func","delay","getElementChild","childNodes","child","nodeType","getElementChildren","slide","dir","speed","callback","calcHeight","getElementActualHeight","calcPaddingTop","calcPaddingBottom","parseInt","paddingTop","overflow","getBreakpoint","breakpoint","getAttributeValueByBreakpoint","incomingAttr","jsonStr","join","matched","substring","toJSON","resultKey","resultBreakpoint","EventHandlerUtil","metas","handlerId","meta","getEventMetasByName","setEventMetasByName","handerId","fired","getEventsMetaByHandlerId","setEventMetaByNameAndHandlerId","handler","setFiredByNameAndHandlerId","addEvent","removeEvent","on","DrawerStore","instanceId","drawerComponentObj","defaultDrawerOptions","overlay","baseClass","overlayClass","DrawerComponent","_element","overlayElement","toggleElement","instanceUid","shown","lastWidth","closeElement","_handlers","togglers","_getOption","closers","preventDefault","_toggle","_hide","_update","String","hasBaseClass","contains","bodyCanvasAttr","optionName","option","trigger","_show","_deleteOverlay","_createOverlay","createElement","elementZIndex","overlayZindex","append","overlayClassOption","removeChild","_getDirection","_getWidth","toggle","show","hide","isShown","goElement","off","event","item","drawer","getInstance","hasInstace","elementId","hideAll","getAllInstances","dr","updateAll","handleDismiss","closest","createInstances","initGlobalHandlers","reinitialization","defaultImageInputOptions","defaultImageInputQueires","componentName","instanseQuery","inputQuery","wrapperQuery","cancelQuery","removeQuery","hiddenQuery","ImageInputComponent","_options","_queries","inputElement","wrapperElement","cancelElement","removeElement","hiddenElement","queries","uid","_change","files","reader","FileReader","onload","readAsDataURL","_cancel","_remove","querySelector","handlers","ImageInput","elements","createInsance","defaultScrollOptions","saveState","ScrollComponent","getOption","hasAttribute","getHeightType","getAutoHeight","dependencies","wrappers","len","borderTop","borderBottom","setupHeight","getHeight","heightType","setupState","pos","setupScrollHandler","scrollHandler","cookieId","destroyScrollHandler","resetHeight","heghtType","Function","getElement","scroll","resize","createInstance","defaultScrollTopOptions","ScrollTopComponent","_scroll","_go","go","goTop","defaultStepperOptions","startIndex","animation","animationSpeed","animationNextClass","animationPreviousClass","StepperComponent","steps","btnNext","btnPrev","btnSubmit","totatStepsNumber","passedStepIndex","currentStepIndex","_goTo","refreshUI","initHandlers","stepDirection","_getStepDirection","getStepContent","getLastStepIndex","getTotalStepsNumber","isLastStep","isFirstStep","animateClass","isBetweenStep","goto","goNext","getNextStepIndex","goPrev","getPrevStepIndex","goFirst","goLast","getCurrentStepIndex","getPassedStepIndex","destroy","stepper","defaultStickyOptions","reverse","animationClass","StickyComponent","instanceName","eventTriggerState","lastScrollTop","offsetNum","st","enable","disable","dataStickyAttr","attrValue","zindex","widthTarget","targetElement","offsetLeft","sticky","defaultToggleOptions","ToggleComponent","attribute","_isEnabled","_disable","_enable","isEnabled","elementTargetAttr","elementToggleAttr","defaultPasswordMeterOptions","minLength","checkUppercase","checkLowercase","checkDigit","checkChar","scoreHighlightClass","defaultPasswordMeterQueires","visibilityQuery","highlightQuery","PasswordMeterComponent","visibilityElement","highlightElement","score","checkSteps","reset","highlight","check","visitbility","visibleIcon","hiddenIcon","focus","test","count","items","slice","total","checkScore","getCheckScore","getScore","checkLength","checkLowerCase","passwordMeter","SwapperStore","defaultSwapperOptions","mode","defaultSwapperQueires","attrQuery","SwapperComponent","parentSelector","prepend","place","defaultMenuOptions","dropdown","hoverTimeout","accordion","slideSpeed","expand","MenuComponent","triggerElement","_setTriggerElement","_isTriggerElement","_getItemOption","_getItemElement","itemElement","sub","subItem","_getItemParentElement","parentItem","_getItemParentElements","parent","parents","buffer","unshift","_getDropdownPopperConfig","placementOption","placement","offsetValue","strategy","modifiers","flipVariations","_getItemChildElement","_getItemChildElements","_getItemSubElement","_getCss","_getItemSubType","_isItemSubShown","_isItemDropdownPermanent","_isItemParentShown","s","getElementParents","_isItemSubElement","_hasItemSub","_getItemLinkElement","_getItemToggleElement","_showDropdown","hideDropdowns","parentZindex","bufferNode","position","isNaN","getHighestZindex","initDropdownPopper","appendChild","reference","attach","popper","createPopper","_hideDropdown","referenceNode","insertBefore","nextSibling","insertAfterElement","destroyDropdownPopper","_showAccordion","_hideAccordions","subElement","_hideAccordion","itemsToHide","itemToHide","_reset","removeClass","_destroy","_mouseout","timeout","_mouseover","clearTimeout","_dismiss","itemSubType","_link","_click","click","link","dismiss","mouseover","mouseout","getItemTriggerType","getItemSubType","getItemLinkElement","getItemToggleElement","getItemSubElement","getItemParentElements","isItemSubShown","isItemParentShown","getTriggerElement","isItemDropdownPermanent","hideAccordions","elementMenu","menuData","subMenu","skip","updateDropdowns","forceUpdate","menuItem","menuInstance","menuItems","menuObj","stopPropagation","defaultSearchOptions","keypress","enter","showOnFocus","defaultSearchQueires","SearchComponent","contentElement","formElement","spinnerElement","clearElement","submitElement","toolbarElement","resultsElement","suggestionElement","emptyElement","processing","menuObject","_getElement","getResponsiveFormMode","blur","charCode","keyCode","search","clear","responsiveFormMode","isProcessing","getQuery","getMenu","getFormElement","context","Search","HeaderUserMenu","onClick","Notification","createdAt","feedID","order","HeaderNotificationsMenu","zIndex","boxShadow","NotiItem","marginRight","format","socket","io","TypingAnimation","number","ChatContent","React","memo","userchat","messageList","setMessageList","isTyping","setIsTyping","typingTimeOutRef","promise","Axios","err","ChatList","setMessage","messageEndRef","scrollToBottom","scrollIntoView","behavior","onEnterPress","shiftKey","stringMoment","moment","thisMoment","modify","messageContent","ConversationId","Content","Chatting","Admin","emit","list","typing","Chatter","PartnerName","followButtonClassName","initialScrollBehavior","sort","itm","concat","bottom","marginLeft","rows","onKeyDown","onChange","title","ChatUser","userInfo","toggleState","toggleClick","isRead","setIsRead","isOnline","setIsOnline","initMountState","newestMessage","CustomerId","PartnerId","lastMessage","setLastMessage","userId","room","userIds","includes","DrawerMessenger","setToggleState","searchTerm","setSearchTerm","conversation","setConversation","newConversation","findIndex","splice","border","filter","chat","borderRight","appName","label","category","framework","dbName","dbType","nameOnCard","cardNumber","cardExpiryMonth","cardExpiryYear","cardCvv","toolbarButtonMarginClass","Topbar","paddingRight","MasterHeader","dateString","setDateString","date","month","getMonth","day","getDate","year","getFullYear","dateOfWeek","getDay","AsideMenuItemWithSub","icon","fontIcon","hasBullet","isActive","useLocation","paddingLeft","AsideMenuItem","active","AsideMenuMain","intl","useIntl","formatMessage","SmoothScroll","Scrollbar","AsideMenu","asideMenuCSSClasses","scrollRef","setScroll","ref","MasterAside","ChatPageAdmin","countUnRead","setCountUnRead","pre","transform","MasterLayout","marginTop","TablesWidget5","DashboardPage","DashboardWrapper","PrivateRoutes","ProfilePage","lazy","AdminManage","NotiPage","SettingPage","SuspensedView","baseColor","TopBarProgress","barColors","barThickness","shadowBlur","fallback","allMessages","de","en","es","fr","ja","zh","I18nProvider","locale","messages","MasterInit","isFirstRun","App","head","getElementsByTagName","rel","AppRoutes","basename","defaults","Accept","interceptors","use","getState","Authorization","reject","_redux","Chart","registerables","queryClient","QueryClient","ReactDOM","render","client"],"mappings":"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","file":"static/js/main.574b98a2.chunk.js","sourcesContent":["import {ILayout} from './LayoutModels'\n\nexport const DefaultLayoutConfig: ILayout = {\n  main: {\n    type: 'default',\n    primaryColor: '#009EF7',\n    darkSkinEnabled: true,\n  },\n  loader: {\n    display: true,\n    type: 'default', // Set default|spinner-message|spinner-logo to hide or show page loader\n  },\n  scrolltop: {\n    display: true,\n  },\n  header: {\n    display: true, // Set true|false to show or hide Header\n    width: 'fluid', // Set fixed|fluid to change width type\n    left: 'menu',\n    fixed: {\n      desktop: true, // Set true|false to set fixed Header for desktop mode\n      tabletAndMobile: true, // Set true|false to set fixed Header for tablet and mobile modes\n    },\n    menuIcon: 'svg',\n    theme: '#fff',\n    textColor: '#000'\n  },\n  megaMenu: {\n    display: true, // Set true|false to show or hide Mega Menu\n  },\n  aside: {\n    display: true,\n    theme: '#fff',\n    textColor: 'rgb(63,66,84)',\n    menu: 'main',\n    fixed: true,\n    minimized: false,\n    minimize: true,\n    hoverable: true,\n    menuIcon: 'svg',\n  },\n  content: {\n    width: 'fixed', // Set fixed|fluid to change width\n    layout: 'default',\n    theme: \"white\",\n    underBackground: \"light\"\n  },\n  toolbar: {\n    display: true, // Display toolbar\n    width: 'fluid', // Set fixed|fluid to change width type,\n    fixed: {\n      desktop: true,\n      tabletAndMobileMode: true,\n    },\n    layout: 'toolbar1',\n    layouts: {\n      toolbar1: {\n        height: '55px',\n        heightAndTabletMobileMode: '55px',\n      },\n      toolbar2: {\n        height: '75px',\n        heightAndTabletMobileMode: '65px',\n      },\n      toolbar3: {\n        height: '55px',\n        heightAndTabletMobileMode: '55px',\n      },\n      toolbar4: {\n        height: '65px',\n        heightAndTabletMobileMode: '65px',\n      },\n      toolbar5: {\n        height: '75px',\n        heightAndTabletMobileMode: '65px',\n      },\n    },\n  },\n  footer: {\n    width: 'fluid', // Set fixed|fluid to change width type\n  },\n  pageTitle: {\n    display: true,\n    breadCrumbs: true,\n    description: false,\n    layout: 'default',\n    direction: 'row',\n    responsive: true,\n    responsiveBreakpoint: 'lg',\n    responsiveTarget: '#kt_toolbar_container',\n  },\n  theme: 'default',\n}\n","import {\n  IAside,\n  IContent,\n  IFooter,\n  IHeader,\n  IToolbar,\n  ILayout,\n  ILayoutCSSClasses,\n  ILayoutHTMLAttributes,\n  ILayoutCSSVariables,\n  IPageTitle,\n} from './LayoutModels'\nimport {DefaultLayoutConfig} from './DefaultLayoutConfig'\n\nconst LAYOUT_CONFIG_KEY = process.env.REACT_APP_BASE_LAYOUT_CONFIG_KEY || 'LayoutConfig'\n\nexport function getLayout(): ILayout {\n  const ls = localStorage.getItem(LAYOUT_CONFIG_KEY)\n  if (ls) {\n    try {\n      return JSON.parse(ls) as ILayout\n    } catch (er) {\n      console.error(er)\n    }\n  }\n  return DefaultLayoutConfig\n}\n\nfunction setLayout(config: ILayout): void {\n  try {\n    localStorage.setItem(LAYOUT_CONFIG_KEY, JSON.stringify(config))\n  } catch (er) {\n    console.error(er)\n  }\n}\n\nexport function getEmptyCssClasses() {\n  return {\n    header: [],\n    headerContainer: [],\n    headerMobile: [],\n    headerMenu: [],\n    aside: [],\n    asideMenu: [],\n    asideToggle: [],\n    toolbar: [],\n    toolbarContainer: [],\n    content: [],\n    contentContainer: [],\n    footerContainer: [],\n    sidebar: [],\n    pageTitle: [],\n  }\n}\n\nexport function getEmptyHTMLAttributes() {\n  return {\n    asideMenu: new Map(),\n    headerMobile: new Map(),\n    headerMenu: new Map(),\n    headerContainer: new Map(),\n    pageTitle: new Map(),\n  }\n}\n\nexport function getEmptyCSSVariables() {\n  return {\n    body: new Map(),\n  }\n}\n\nexport class LayoutSetup {\n  public static isLoaded: boolean = false\n  public static config: ILayout = getLayout()\n  public static classes: ILayoutCSSClasses = getEmptyCssClasses()\n  public static attributes: ILayoutHTMLAttributes = getEmptyHTMLAttributes()\n  public static cssVariables: ILayoutCSSVariables = getEmptyCSSVariables()\n\n  private static initCSSClasses(): void {\n    LayoutSetup.classes = getEmptyCssClasses()\n  }\n\n  private static initHTMLAttributes(): void {\n    LayoutSetup.attributes = Object.assign({}, getEmptyHTMLAttributes())\n  }\n\n  private static initCSSVariables(): void {\n    LayoutSetup.cssVariables = getEmptyCSSVariables()\n  }\n\n  private static initLayout(config: ILayout): void {\n    Array.from(document.body.attributes).forEach((attr) => {\n      document.body.removeAttribute(attr.name)\n    })\n    document.body.setAttribute('style', '')\n    document.body.setAttribute('id', 'kt_body')\n    if (config.main?.body?.backgroundImage) {\n      document.body.style.backgroundImage = `url('${config.main.body.backgroundImage}')`\n    }\n\n    if (config.main?.body?.class) {\n      document.body.classList.add(config.main.body.class)\n    }\n\n    // if (config.loader.display) {\n    //   document.body.classList.add('page-loading')\n    //   document.body.classList.add('page-loading-enabled')\n    // }\n  }\n\n  private static initHeader(config: IHeader): void {\n    LayoutSetup.classes.headerContainer.push(\n      config.width === 'fluid' ? 'container-fluid' : 'container'\n    )\n\n    if (config.fixed.desktop) {\n      document.body.classList.add('header-fixed')\n    }\n\n    if (config.fixed.tabletAndMobile) {\n      document.body.classList.add('header-tablet-and-mobile-fixed')\n    }\n\n     // Enable header\n    //  document.body.classList.add('header-enabled')\n    //  LayoutSetup.classes.headerBackgroundColor.push(stylesCss.headerBackgroundColor)\n  }\n\n  private static initToolbar(config: IToolbar): void {\n    if (!config.display) {\n      return\n    }\n\n    document.body.classList.add('toolbar-enabled')\n    LayoutSetup.classes.toolbarContainer.push(\n      config.width === 'fluid' ? 'container-fluid' : 'container'\n    )\n\n    if (config.fixed.desktop) {\n      document.body.classList.add('toolbar-fixed')\n    }\n\n    if (config.fixed.tabletAndMobileMode) {\n      document.body.classList.add('toolbar-tablet-and-mobile-fixed')\n    }\n\n    // Height setup\n    const type = config.layout\n    const typeOptions = config.layouts[type]\n    if (typeOptions) {\n      let bodyStyles: string = ''\n      if (typeOptions.height) {\n        bodyStyles += ` --kt-toolbar-height: ${typeOptions.height};`\n      }\n\n      if (typeOptions.heightAndTabletMobileMode) {\n        bodyStyles += ` --kt-toolbar-height-tablet-and-mobile: ${typeOptions.heightAndTabletMobileMode};`\n      }\n      document.body.setAttribute('style', bodyStyles)\n    }\n  }\n\n  private static initPageTitle(config: IPageTitle): void {\n    if (!config.display) {\n      return\n    }\n\n    if (config.direction === 'column') {\n      this.classes.pageTitle.push('flex-column')\n      this.classes.pageTitle.push('align-items-start')\n    } else {\n      this.classes.pageTitle.push('align-items-center')\n      this.classes.pageTitle.push('flex-wrap')\n    }\n    this.classes.pageTitle.push('me-3')\n\n    if (config.responsive) {\n      this.classes.pageTitle.push('mb-5')\n      this.classes.pageTitle.push('mb-lg-0')\n\n      LayoutSetup.attributes.pageTitle.set('data-kt-swapper', true)\n      LayoutSetup.attributes.pageTitle.set('data-kt-swapper-mode', 'prepend')\n      LayoutSetup.attributes.pageTitle.set(\n        'data-kt-swapper-parent',\n        `{ default: '#kt_content_container', '${config.responsiveBreakpoint}': '${config.responsiveTarget}'}`\n      )\n    }\n  }\n\n  private static initContent(config: IContent): void {\n    LayoutSetup.classes.contentContainer.push(\n      config.width === 'fluid' ? 'container-fluid' : 'container'\n    )\n    LayoutSetup.classes.content.push(``)\n    // if (Theme::getOption('layout', 'content/container-class')) {\n    // \tTheme::addHtmlClass('content-container', Theme::getOption('layout', 'content/container-class'));\n    // }\n  }\n\n  private static initAside(config: IAside): void {\n    // Check if aside is displayed\n    if (!config.display) {\n      return\n    }\n\n    // Enable Aside\n    // document.body.classList.add('aside-enabled')\n    LayoutSetup.classes.aside.push(`bg-light`)\n\n    // Fixed Aside\n    if (config.fixed) {\n      document.body.classList.add('aside-fixed')\n    }\n\n    // Default minimized\n    if (config.minimized) {\n      document.body.setAttribute('data-kt-aside-minimize', 'on')\n    }\n\n    // Hoverable on minimize\n    if (config.hoverable) {\n      LayoutSetup.classes.aside.push('aside-hoverable')\n    }\n  }\n\n  private static initAsideMenu(config: IAside): void {\n    // if (Theme::getOption('layout', 'aside/menu') === 'documentation') {\n    // \tself::$menu = new Menu( Theme::getOption('menu', 'documentation'), Theme::getPagePath() );\n    // } else {\n    // \tself::$menu = new Menu( Theme::getOption('menu', 'main'), Theme::getPagePath() );\n    // }\n    // if (Theme::getOption('layout', 'aside/menu-icons-display') === false) {\n    // \tself::$menu->displayIcons(false);\n    // }\n    // self::$menu->setIconType(Theme::getOption('layout', 'aside/menu-icon'));\n  }\n\n  // private static initSidebar(sidebarConfig: ISidebarConfig): void {\n  //   // / Set Sidebar enabled class\n  //   if (sidebarConfig.display) {\n  //     document.body.classList.add('sidebar-enabled')\n  //   } else {\n  //     return\n  //   }\n\n  //   // Set Sidebar shown status\n  //   if (sidebarConfig.shown) {\n  //     document.body.setAttribute('data-sidebar', 'on')\n  //   }\n\n  //   // Set Sidebar background color class\n  //   ThemeSetup.classes.sidebar.push(sidebarConfig.bgColor)\n  // }\n\n  private static initFooter(config: IFooter): void {\n    LayoutSetup.classes.footerContainer.push(`container${config.width === 'fluid' ? '-fluid' : ''}`)\n  }\n\n  private static initConfig(config: ILayout): void {\n    if (config.main?.darkSkinEnabled) {\n      document.body.classList.add('dark-skin')\n    }\n\n    // Init layout\n    LayoutSetup.initLayout(config)\n    if (config.main?.type !== 'default') {\n      return\n    }\n\n    LayoutSetup.initHeader(config.header)\n    LayoutSetup.initPageTitle(config.pageTitle as IPageTitle)\n    LayoutSetup.initToolbar(config.toolbar)\n    LayoutSetup.initContent(config.content)\n    LayoutSetup.initAside(config.aside)\n    LayoutSetup.initFooter(config.footer)\n    LayoutSetup.initAsideMenu(config.aside)\n  }\n\n  public static updatePartialConfig(fieldsToUpdate: Partial<ILayout>): ILayout {\n    const config = LayoutSetup.config\n    const updatedConfig = {...config, ...fieldsToUpdate}\n    LayoutSetup.initCSSClasses()\n    LayoutSetup.initCSSVariables()\n    LayoutSetup.initHTMLAttributes()\n    LayoutSetup.isLoaded = false\n    LayoutSetup.config = updatedConfig\n    LayoutSetup.initConfig(Object.assign({}, updatedConfig))\n    LayoutSetup.isLoaded = true // remove loading there\n    return updatedConfig\n  }\n\n  public static setConfig(config: ILayout): void {\n    setLayout(config)\n  }\n\n  public static bootstrap = (() => {\n    LayoutSetup.updatePartialConfig(LayoutSetup.config)\n  })()\n}\n","import React, {createContext, useContext, useState, useEffect} from 'react'\nimport {DefaultLayoutConfig} from './DefaultLayoutConfig'\nimport {\n  getEmptyCssClasses,\n  getEmptyCSSVariables,\n  getEmptyHTMLAttributes,\n  LayoutSetup,\n} from './LayoutSetup'\nimport {\n  ILayout,\n  ILayoutCSSVariables,\n  ILayoutCSSClasses,\n  ILayoutHTMLAttributes,\n} from './LayoutModels'\n\nexport interface LayoutContextModel {\n  config: ILayout\n  classes: ILayoutCSSClasses\n  attributes: ILayoutHTMLAttributes\n  cssVariables: ILayoutCSSVariables\n  setLayout: (config: LayoutSetup) => void\n}\n\nconst LayoutContext = createContext<LayoutContextModel>({\n  config: DefaultLayoutConfig,\n  classes: getEmptyCssClasses(),\n  attributes: getEmptyHTMLAttributes(),\n  cssVariables: getEmptyCSSVariables(),\n  setLayout: (config: LayoutSetup) => {},\n})\n\nconst enableSplashScreen = () => {\n  const splashScreen = document.getElementById('splash-screen')\n  if (splashScreen) {\n    splashScreen.style.setProperty('display', 'flex')\n  }\n}\n\nconst disableSplashScreen = () => {\n  const splashScreen = document.getElementById('splash-screen')\n  if (splashScreen) {\n    splashScreen.style.setProperty('display', 'none')\n  }\n}\n\nconst LayoutProvider: React.FC = ({children}) => {\n  const [config, setConfig] = useState(LayoutSetup.config)\n  const [classes, setClasses] = useState(LayoutSetup.classes)\n  const [attributes, setAttributes] = useState(LayoutSetup.attributes)\n  const [cssVariables, setCSSVariables] = useState(LayoutSetup.cssVariables)\n  const setLayout = (_themeConfig: Partial<ILayout>) => {\n    enableSplashScreen()\n    const bodyClasses = Array.from(document.body.classList)\n    bodyClasses.forEach((cl) => document.body.classList.remove(cl))\n    LayoutSetup.updatePartialConfig(_themeConfig)\n    setConfig(Object.assign({}, LayoutSetup.config))\n    setClasses(LayoutSetup.classes)\n    setAttributes(LayoutSetup.attributes)\n    setCSSVariables(LayoutSetup.cssVariables)\n    setTimeout(() => {\n      disableSplashScreen()\n    }, 500)\n  }\n  const value: LayoutContextModel = {\n    config,\n    classes,\n    attributes,\n    cssVariables,\n    setLayout,\n  }\n\n  useEffect(() => {\n    disableSplashScreen()\n  }, [])\n\n  return <LayoutContext.Provider value={value}>{children}</LayoutContext.Provider>\n}\n\nexport {LayoutContext, LayoutProvider}\n\nexport function useLayout() {\n  return useContext(LayoutContext)\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {FC, createContext, useContext, useEffect, useState} from 'react'\n\nexport interface PageLink {\n  title: string\n  path: string\n  isActive: boolean\n  isSeparator?: boolean\n}\n\nexport interface PageDataContextModel {\n  pageTitle?: string\n  setPageTitle: (_title: string) => void\n  pageDescription?: string\n  setPageDescription: (_description: string) => void\n  pageBreadcrumbs?: Array<PageLink>\n  setPageBreadcrumbs: (_breadcrumbs: Array<PageLink>) => void\n  backgroundHeader?: string\n}\n\nconst PageDataContext = createContext<PageDataContextModel>({\n  setPageTitle: (_title: string) => {},\n  setPageBreadcrumbs: (_breadcrumbs: Array<PageLink>) => {},\n  setPageDescription: (_description: string) => {},\n})\n\nconst PageDataProvider: React.FC = ({children}) => {\n  const [pageTitle, setPageTitle] = useState<string>('')\n  const [pageDescription, setPageDescription] = useState<string>('')\n  const [pageBreadcrumbs, setPageBreadcrumbs] = useState<Array<PageLink>>([])\n  const value: PageDataContextModel = {\n    pageTitle,\n    setPageTitle,\n    pageDescription,\n    setPageDescription,\n    pageBreadcrumbs,\n    setPageBreadcrumbs,\n  }\n  return <PageDataContext.Provider value={value}>{children}</PageDataContext.Provider>\n}\n\nfunction usePageData() {\n  return useContext(PageDataContext)\n}\n\ntype Props = {\n  description?: string\n  breadcrumbs?: Array<PageLink>\n}\n\nconst PageTitle: FC<Props> = ({children, description, breadcrumbs}) => {\n  const {setPageTitle, setPageDescription, setPageBreadcrumbs} = usePageData()\n  useEffect(() => {\n    if (children) {\n      setPageTitle(children.toString())\n    }\n    return () => {\n      setPageTitle('')\n    }\n  }, [children])\n\n  useEffect(() => {\n    if (description) {\n      setPageDescription(description)\n    }\n    return () => {\n      setPageDescription('')\n    }\n  }, [description])\n\n  useEffect(() => {\n    if (breadcrumbs) {\n      setPageBreadcrumbs(breadcrumbs)\n    }\n    return () => {\n      setPageBreadcrumbs([])\n    }\n  }, [breadcrumbs])\n\n  return <></>\n}\n\nconst PageDescription: React.FC = ({children}) => {\n  const {setPageDescription} = usePageData()\n  useEffect(() => {\n    if (children) {\n      setPageDescription(children.toString())\n    }\n    return () => {\n      setPageDescription('')\n    }\n  }, [children])\n  return <></>\n}\n\nexport {PageDescription, PageTitle, PageDataProvider, usePageData}\n","import React, {\n  FC,\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  SetStateAction,\n  Dispatch,\n} from 'react'\n\nconst MetronicSplashScreenContext = createContext<Dispatch<SetStateAction<number>> | undefined>(\n  undefined\n)\n\nconst MetronicSplashScreenProvider: FC = ({children}) => {\n  const [count, setCount] = useState(0)\n  let visible = count > 0\n\n  useEffect(() => {\n    const splashScreen = document.getElementById('splash-screen')\n\n    // Show SplashScreen\n    if (splashScreen && visible) {\n      splashScreen.classList.remove('hidden')\n\n      return () => {\n        splashScreen.classList.add('hidden')\n      }\n    }\n\n    // Hide SplashScreen\n    let timeout: number\n    if (splashScreen && !visible) {\n      timeout = window.setTimeout(() => {\n        splashScreen.classList.add('hidden')\n      }, 3000)\n    }\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [visible])\n\n  return (\n    <MetronicSplashScreenContext.Provider value={setCount}>\n      {children}\n    </MetronicSplashScreenContext.Provider>\n  )\n}\n\nconst LayoutSplashScreen: FC<{visible?: boolean}> = ({visible = true}) => {\n  // Everything are ready - remove splashscreen\n  const setCount = useContext(MetronicSplashScreenContext)\n\n  useEffect(() => {\n    if (!visible) {\n      return\n    }\n\n    if (setCount) {\n      setCount((prev) => {\n        return prev + 1\n      })\n    }\n\n    return () => {\n      if (setCount) {\n        setCount((prev) => {\n          return prev - 1\n        })\n      }\n    }\n  }, [setCount, visible])\n\n  return null\n}\n\nexport {MetronicSplashScreenProvider, LayoutSplashScreen}\n","export const  URL_BOOKING_STUDIO = process.env.REACT_APP_API_URL\nexport const URL_BOOKING_STUDIO_IMG = process.env.REACT_APP_API_URL_IMG ","import axios from 'axios'\nimport {UserModel} from '../models/UserModel'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${API_URL}/verify_token`\nexport const LOGIN_URL = `${API_URL}/login`\nexport const REGISTER_URL = `${API_URL}/register`\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`\n\n// Server should return AuthModel\nexport function login(email: string, password: string) {\n  return axios.post(LOGIN_URL, {\n    email,\n    password,\n  })\n}\n\n// Server should return AuthModel\nexport function register(email: string, firstname: string, lastname: string, password: string, password_confirmation: string) {\n  return axios.post(REGISTER_URL, {\n    email,\n    first_name: firstname,\n    last_name: lastname,\n    password,\n    password_confirmation\n  })\n}\n\n// Server should return object => { result: boolean } (Is Email in DB)\nexport function requestPassword(email: string) {\n  return axios.post<{result: boolean}>(REQUEST_PASSWORD_URL, {\n    email\n  })\n}\n\nexport function getUserByToken(token:string) {\n  return axios.post<UserModel>(GET_USER_BY_ACCESSTOKEN_URL, {\n    api_token:token\n  })\n}\n","import React, {useState} from 'react'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\nimport {Link} from 'react-router-dom'\nimport {useFormik} from 'formik'\nimport {requestPassword} from '../redux/AuthCRUD'\n\nconst initialValues = {\n  email: 'superadmin@admin.com',\n}\n\nconst forgotPasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Wrong email format')\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Email is required'),\n})\n\nexport function ForgotPassword() {\n  const [loading, setLoading] = useState(false)\n  const [hasErrors, setHasErrors] = useState<boolean | undefined>(undefined)\n  const formik = useFormik({\n    initialValues,\n    validationSchema: forgotPasswordSchema,\n    onSubmit: (values, {setStatus, setSubmitting}) => {\n      setLoading(true)\n      setHasErrors(undefined)\n      setTimeout(() => {\n        requestPassword(values.email)\n          .then(({data: {result}}) => {\n            setHasErrors(false)\n            setLoading(false)\n          })\n          .catch(() => {\n            setHasErrors(true)\n            setLoading(false)\n            setSubmitting(false)\n            setStatus('The login detail is incorrect')\n          })\n      }, 1000)\n    },\n  })\n\n  return (\n    <>\n      <form\n        className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\n        noValidate\n        id='kt_login_password_reset_form'\n        onSubmit={formik.handleSubmit}\n      >\n        <div className='text-center mb-10'>\n          {/* begin::Title */}\n          <h1 className='text-dark mb-3'>Forgot Password ?</h1>\n          {/* end::Title */}\n\n          {/* begin::Link */}\n          <div className='text-gray-400 fw-bold fs-4'>Enter your email to reset your password.</div>\n          {/* end::Link */}\n        </div>\n\n        {/* begin::Title */}\n        {hasErrors === true && (\n          <div className='mb-lg-15 alert alert-danger'>\n            <div className='alert-text font-weight-bold'>\n              Sorry, looks like there are some errors detected, please try again.\n            </div>\n          </div>\n        )}\n\n        {hasErrors === false && (\n          <div className='mb-10 bg-light-info p-8 rounded'>\n            <div className='text-info'>Sent password reset. Please check your email</div>\n          </div>\n        )}\n        {/* end::Title */}\n\n        {/* begin::Form group */}\n        <div className='fv-row mb-10'>\n          <label className='form-label fw-bolder text-gray-900 fs-6'>Email</label>\n          <input\n            type='email'\n            placeholder=''\n            autoComplete='off'\n            {...formik.getFieldProps('email')}\n            className={clsx(\n              'form-control form-control-lg form-control-solid',\n              {'is-invalid': formik.touched.email && formik.errors.email},\n              {\n                'is-valid': formik.touched.email && !formik.errors.email,\n              }\n            )}\n          />\n          {formik.touched.email && formik.errors.email && (\n            <div className='fv-plugins-message-container'>\n              <div className='fv-help-block'>\n                <span role='alert'>{formik.errors.email}</span>\n              </div>\n            </div>\n          )}\n        </div>\n        {/* end::Form group */}\n\n        {/* begin::Form group */}\n        <div className='d-flex flex-wrap justify-content-center pb-lg-0'>\n          <button\n            type='submit'\n            id='kt_password_reset_submit'\n            className='btn btn-lg btn-primary fw-bolder me-4'\n          >\n            <span className='indicator-label'>Submit</span>\n            {loading && (\n              <span className='indicator-progress'>\n                Please wait...\n                <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n              </span>\n            )}\n          </button>\n          <Link to='/auth/login'>\n            <button\n              type='button'\n              id='kt_login_password_reset_form_cancel_button'\n              className='btn btn-lg btn-light-primary fw-bolder'\n              disabled={formik.isSubmitting || !formik.isValid}\n            >\n              Cancel\n            </button>\n          </Link>{' '}\n        </div>\n        {/* end::Form group */}\n      </form>\n    </>\n  )\n}\n","//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n\n/* tslint:disable */\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\n\nimport axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse, CancelToken } from 'axios';\n\nexport interface IAddressClient {\n    getProvincesAll(): Promise<Province[]>;\n    getProvinces(id: number | undefined): Promise<Province>;\n    getDistrictByProvinceId(provinceId: number | undefined): Promise<District[]>;\n    getDistrict(id: number | undefined): Promise<District>;\n    getWardAll(): Promise<Ward[]>;\n    getWardByDistrictId(id: number | undefined): Promise<Ward[]>;\n    getWard(id: number | undefined): Promise<Ward>;\n}\n\nexport class AddressClient implements IAddressClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getProvincesAll(  cancelToken?: CancelToken | undefined): Promise<Province[]> {\n        let url_ = this.baseUrl + \"/api/Address/GetProvinces\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetProvincesAll(_response);\n        });\n    }\n\n    protected processGetProvincesAll(response: AxiosResponse): Promise<Province[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Province.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Province[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Province[]>(null as any);\n    }\n\n    getProvinces(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<Province> {\n        let url_ = this.baseUrl + \"/api/Address/GetProvincesById?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetProvinces(_response);\n        });\n    }\n\n    protected processGetProvinces(response: AxiosResponse): Promise<Province> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Province.fromJS(resultData200);\n            return Promise.resolve<Province>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Province>(null as any);\n    }\n\n    getDistrictByProvinceId(provinceId: number | undefined , cancelToken?: CancelToken | undefined): Promise<District[]> {\n        let url_ = this.baseUrl + \"/api/Address/GetDistrictByProvinceId?\";\n        if (provinceId === null)\n            throw new Error(\"The parameter 'provinceId' cannot be null.\");\n        else if (provinceId !== undefined)\n            url_ += \"provinceId=\" + encodeURIComponent(\"\" + provinceId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetDistrictByProvinceId(_response);\n        });\n    }\n\n    protected processGetDistrictByProvinceId(response: AxiosResponse): Promise<District[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(District.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<District[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<District[]>(null as any);\n    }\n\n    getDistrict(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<District> {\n        let url_ = this.baseUrl + \"/api/Address/GetDistrictById?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetDistrict(_response);\n        });\n    }\n\n    protected processGetDistrict(response: AxiosResponse): Promise<District> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = District.fromJS(resultData200);\n            return Promise.resolve<District>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<District>(null as any);\n    }\n\n    getWardAll(  cancelToken?: CancelToken | undefined): Promise<Ward[]> {\n        let url_ = this.baseUrl + \"/api/Address/GetAllWard\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetWardAll(_response);\n        });\n    }\n\n    protected processGetWardAll(response: AxiosResponse): Promise<Ward[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Ward.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Ward[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Ward[]>(null as any);\n    }\n\n    getWardByDistrictId(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<Ward[]> {\n        let url_ = this.baseUrl + \"/api/Address/GetWardByDistrictId?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetWardByDistrictId(_response);\n        });\n    }\n\n    protected processGetWardByDistrictId(response: AxiosResponse): Promise<Ward[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Ward.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Ward[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Ward[]>(null as any);\n    }\n\n    getWard(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<Ward> {\n        let url_ = this.baseUrl + \"/api/Address/GetWardById?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetWard(_response);\n        });\n    }\n\n    protected processGetWard(response: AxiosResponse): Promise<Ward> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Ward.fromJS(resultData200);\n            return Promise.resolve<Ward>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Ward>(null as any);\n    }\n}\n\nexport interface IAlbumClient {\n    getAlbumAll(): Promise<Album[]>;\n    postAlbum(album: Album): Promise<Album>;\n    getAlbum(id: number): Promise<Album>;\n    putAlbum(id: number, album: Album): Promise<Album>;\n    deleteAlbum(id: number): Promise<Album>;\n}\n\nexport class AlbumClient implements IAlbumClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getAlbumAll(  cancelToken?: CancelToken | undefined): Promise<Album[]> {\n        let url_ = this.baseUrl + \"/api/Album\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetAlbumAll(_response);\n        });\n    }\n\n    protected processGetAlbumAll(response: AxiosResponse): Promise<Album[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Album.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Album[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Album[]>(null as any);\n    }\n\n    postAlbum(album: Album , cancelToken?: CancelToken | undefined): Promise<Album> {\n        let url_ = this.baseUrl + \"/api/Album\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(album);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostAlbum(_response);\n        });\n    }\n\n    protected processPostAlbum(response: AxiosResponse): Promise<Album> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Album.fromJS(resultData200);\n            return Promise.resolve<Album>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Album>(null as any);\n    }\n\n    getAlbum(id: number , cancelToken?: CancelToken | undefined): Promise<Album> {\n        let url_ = this.baseUrl + \"/api/Album/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetAlbum(_response);\n        });\n    }\n\n    protected processGetAlbum(response: AxiosResponse): Promise<Album> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Album.fromJS(resultData200);\n            return Promise.resolve<Album>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Album>(null as any);\n    }\n\n    putAlbum(id: number, album: Album , cancelToken?: CancelToken | undefined): Promise<Album> {\n        let url_ = this.baseUrl + \"/api/Album/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(album);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutAlbum(_response);\n        });\n    }\n\n    protected processPutAlbum(response: AxiosResponse): Promise<Album> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Album.fromJS(resultData200);\n            return Promise.resolve<Album>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Album>(null as any);\n    }\n\n    deleteAlbum(id: number , cancelToken?: CancelToken | undefined): Promise<Album> {\n        let url_ = this.baseUrl + \"/api/Album/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeleteAlbum(_response);\n        });\n    }\n\n    protected processDeleteAlbum(response: AxiosResponse): Promise<Album> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Album.fromJS(resultData200);\n            return Promise.resolve<Album>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Album>(null as any);\n    }\n}\n\nexport interface IAuthorizationClient {\n    loginAdmin(login: LoginAdminRequest): Promise<LoginAdminResponse>;\n    login(login: LoginRequest): Promise<UserResponse>;\n    registerOrLoginFacebook(facebookuser: FacebookRequest): Promise<UserResponse>;\n    registerOrLoginGoogle(googleuser: GoogleRequest): Promise<UserResponse>;\n    registerOrLoginApple(appleuser: AppleLoginRequest): Promise<UserResponse>;\n    registerPartner(input: RegisterPartner): Promise<RegisterPartner>;\n}\n\nexport class AuthorizationClient implements IAuthorizationClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    loginAdmin(login: LoginAdminRequest , cancelToken?: CancelToken | undefined): Promise<LoginAdminResponse> {\n        let url_ = this.baseUrl + \"/api/Authorization\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(login);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processLoginAdmin(_response);\n        });\n    }\n\n    protected processLoginAdmin(response: AxiosResponse): Promise<LoginAdminResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = LoginAdminResponse.fromJS(resultData200);\n            return Promise.resolve<LoginAdminResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<LoginAdminResponse>(null as any);\n    }\n\n    login(login: LoginRequest , cancelToken?: CancelToken | undefined): Promise<UserResponse> {\n        let url_ = this.baseUrl + \"/api/Authorization/LoginMobile\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(login);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processLogin(_response);\n        });\n    }\n\n    protected processLogin(response: AxiosResponse): Promise<UserResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserResponse.fromJS(resultData200);\n            return Promise.resolve<UserResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserResponse>(null as any);\n    }\n\n    registerOrLoginFacebook(facebookuser: FacebookRequest , cancelToken?: CancelToken | undefined): Promise<UserResponse> {\n        let url_ = this.baseUrl + \"/api/Authorization/RegisterOrLoginFacebook\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(facebookuser);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processRegisterOrLoginFacebook(_response);\n        });\n    }\n\n    protected processRegisterOrLoginFacebook(response: AxiosResponse): Promise<UserResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserResponse.fromJS(resultData200);\n            return Promise.resolve<UserResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserResponse>(null as any);\n    }\n\n    registerOrLoginGoogle(googleuser: GoogleRequest , cancelToken?: CancelToken | undefined): Promise<UserResponse> {\n        let url_ = this.baseUrl + \"/api/Authorization/RegisterOrLoginGoogle\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(googleuser);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processRegisterOrLoginGoogle(_response);\n        });\n    }\n\n    protected processRegisterOrLoginGoogle(response: AxiosResponse): Promise<UserResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserResponse.fromJS(resultData200);\n            return Promise.resolve<UserResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserResponse>(null as any);\n    }\n\n    registerOrLoginApple(appleuser: AppleLoginRequest , cancelToken?: CancelToken | undefined): Promise<UserResponse> {\n        let url_ = this.baseUrl + \"/api/Authorization/RegisterOrLoginApple\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(appleuser);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processRegisterOrLoginApple(_response);\n        });\n    }\n\n    protected processRegisterOrLoginApple(response: AxiosResponse): Promise<UserResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserResponse.fromJS(resultData200);\n            return Promise.resolve<UserResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserResponse>(null as any);\n    }\n\n    registerPartner(input: RegisterPartner , cancelToken?: CancelToken | undefined): Promise<RegisterPartner> {\n        let url_ = this.baseUrl + \"/api/Authorization/RegisterPartner\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(input);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processRegisterPartner(_response);\n        });\n    }\n\n    protected processRegisterPartner(response: AxiosResponse): Promise<RegisterPartner> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = RegisterPartner.fromJS(resultData200);\n            return Promise.resolve<RegisterPartner>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<RegisterPartner>(null as any);\n    }\n}\n\nexport interface IChatClient {\n    getChatMessages(userId: number | undefined, chat: Chatcontact): Promise<Chatmessage[]>;\n    getChatContacts(userId: number | undefined): Promise<Chatcontact[]>;\n    getChatContactByUserId(user1: number | undefined, user2: number | undefined): Promise<Chatcontact>;\n    sendChatMessage(message: Chatmessage): Promise<boolean>;\n}\n\nexport class ChatClient implements IChatClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getChatMessages(userId: number | undefined, chat: Chatcontact , cancelToken?: CancelToken | undefined): Promise<Chatmessage[]> {\n        let url_ = this.baseUrl + \"/api/Chat/GetChatMessages?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(chat);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetChatMessages(_response);\n        });\n    }\n\n    protected processGetChatMessages(response: AxiosResponse): Promise<Chatmessage[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Chatmessage.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Chatmessage[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Chatmessage[]>(null as any);\n    }\n\n    getChatContacts(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<Chatcontact[]> {\n        let url_ = this.baseUrl + \"/api/Chat/GetChatContacts?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetChatContacts(_response);\n        });\n    }\n\n    protected processGetChatContacts(response: AxiosResponse): Promise<Chatcontact[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Chatcontact.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Chatcontact[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Chatcontact[]>(null as any);\n    }\n\n    getChatContactByUserId(user1: number | undefined, user2: number | undefined , cancelToken?: CancelToken | undefined): Promise<Chatcontact> {\n        let url_ = this.baseUrl + \"/api/Chat/GetChatContactByUserId?\";\n        if (user1 === null)\n            throw new Error(\"The parameter 'user1' cannot be null.\");\n        else if (user1 !== undefined)\n            url_ += \"user1=\" + encodeURIComponent(\"\" + user1) + \"&\";\n        if (user2 === null)\n            throw new Error(\"The parameter 'user2' cannot be null.\");\n        else if (user2 !== undefined)\n            url_ += \"user2=\" + encodeURIComponent(\"\" + user2) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetChatContactByUserId(_response);\n        });\n    }\n\n    protected processGetChatContactByUserId(response: AxiosResponse): Promise<Chatcontact> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Chatcontact.fromJS(resultData200);\n            return Promise.resolve<Chatcontact>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Chatcontact>(null as any);\n    }\n\n    sendChatMessage(message: Chatmessage , cancelToken?: CancelToken | undefined): Promise<boolean> {\n        let url_ = this.baseUrl + \"/api/Chat/SendChatMessages\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(message);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processSendChatMessage(_response);\n        });\n    }\n\n    protected processSendChatMessage(response: AxiosResponse): Promise<boolean> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<boolean>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<boolean>(null as any);\n    }\n}\n\nexport interface IClothesClient {\n    getClothesById(id: number | undefined): Promise<ClothesPost>;\n}\n\nexport class ClothesClient implements IClothesClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getClothesById(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<ClothesPost> {\n        let url_ = this.baseUrl + \"/api/Clothes?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetClothesById(_response);\n        });\n    }\n\n    protected processGetClothesById(response: AxiosResponse): Promise<ClothesPost> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = ClothesPost.fromJS(resultData200);\n            return Promise.resolve<ClothesPost>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<ClothesPost>(null as any);\n    }\n}\n\nexport interface INotificationTokenClient {\n    getNotificationTokenAll(): Promise<NotificationToken[]>;\n    postNotificationToken(notificationToken: NotificationToken): Promise<NotificationToken>;\n    getNotificationToken(id: number): Promise<NotificationToken>;\n    putNotificationToken(id: number, notificationToken: NotificationToken): Promise<FileResponse>;\n    deleteNotificationToken(id: number): Promise<NotificationToken>;\n    unSubscribeRemoteNotification(userId: number | undefined): Promise<boolean>;\n}\n\nexport class NotificationTokenClient implements INotificationTokenClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getNotificationTokenAll(  cancelToken?: CancelToken | undefined): Promise<NotificationToken[]> {\n        let url_ = this.baseUrl + \"/api/NotificationToken\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetNotificationTokenAll(_response);\n        });\n    }\n\n    protected processGetNotificationTokenAll(response: AxiosResponse): Promise<NotificationToken[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(NotificationToken.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<NotificationToken[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<NotificationToken[]>(null as any);\n    }\n\n    postNotificationToken(notificationToken: NotificationToken , cancelToken?: CancelToken | undefined): Promise<NotificationToken> {\n        let url_ = this.baseUrl + \"/api/NotificationToken\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(notificationToken);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostNotificationToken(_response);\n        });\n    }\n\n    protected processPostNotificationToken(response: AxiosResponse): Promise<NotificationToken> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = NotificationToken.fromJS(resultData200);\n            return Promise.resolve<NotificationToken>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<NotificationToken>(null as any);\n    }\n\n    getNotificationToken(id: number , cancelToken?: CancelToken | undefined): Promise<NotificationToken> {\n        let url_ = this.baseUrl + \"/api/NotificationToken/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetNotificationToken(_response);\n        });\n    }\n\n    protected processGetNotificationToken(response: AxiosResponse): Promise<NotificationToken> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = NotificationToken.fromJS(resultData200);\n            return Promise.resolve<NotificationToken>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<NotificationToken>(null as any);\n    }\n\n    putNotificationToken(id: number, notificationToken: NotificationToken , cancelToken?: CancelToken | undefined): Promise<FileResponse> {\n        let url_ = this.baseUrl + \"/api/NotificationToken/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(notificationToken);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            responseType: \"blob\",\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/octet-stream\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutNotificationToken(_response);\n        });\n    }\n\n    protected processPutNotificationToken(response: AxiosResponse): Promise<FileResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200 || status === 206) {\n            const contentDisposition = response.headers ? response.headers[\"content-disposition\"] : undefined;\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\n            return Promise.resolve({ fileName: fileName, status: status, data: new Blob([response.data], { type: response.headers[\"content-type\"] }), headers: _headers });\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileResponse>(null as any);\n    }\n\n    deleteNotificationToken(id: number , cancelToken?: CancelToken | undefined): Promise<NotificationToken> {\n        let url_ = this.baseUrl + \"/api/NotificationToken/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeleteNotificationToken(_response);\n        });\n    }\n\n    protected processDeleteNotificationToken(response: AxiosResponse): Promise<NotificationToken> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = NotificationToken.fromJS(resultData200);\n            return Promise.resolve<NotificationToken>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<NotificationToken>(null as any);\n    }\n\n    unSubscribeRemoteNotification(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<boolean> {\n        let url_ = this.baseUrl + \"/api/NotificationToken/UnSubscribeRemoteNotification?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"UserId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUnSubscribeRemoteNotification(_response);\n        });\n    }\n\n    protected processUnSubscribeRemoteNotification(response: AxiosResponse): Promise<boolean> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<boolean>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<boolean>(null as any);\n    }\n}\n\nexport interface IFileClient {\n    uploadFile(folder: string | null | undefined, content: FileRequest): Promise<FileUploadResponse>;\n    uploadImages(folder: string | null | undefined, content: string[]): Promise<Filegroup>;\n    uploadVideos(folder: string | null | undefined, content: VideoRequest[]): Promise<Filegroup>;\n    uploadFileFolder(folder: string | null | undefined, name: string | null | undefined, content: string): Promise<string>;\n    uploadRaw(folder: string | null | undefined, name: string | null | undefined, files: any[] | null | undefined): Promise<string>;\n    uploadUpdate(folder: string | null | undefined, name: string | null | undefined, files: any[] | null | undefined): Promise<string>;\n    getListFolder(): Promise<string[]>;\n    getListFiles(folderName: string | null | undefined): Promise<string[]>;\n    downloadFile(folder: string | null | undefined, fileName: string | null | undefined): Promise<FileResponse>;\n    delete(folder: string | null | undefined, filename: string | null): Promise<void>;\n}\n\nexport class FileClient implements IFileClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    uploadFile(folder: string | null | undefined, content: FileRequest , cancelToken?: CancelToken | undefined): Promise<FileUploadResponse> {\n        let url_ = this.baseUrl + \"/api/File/UploadFileString?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(content);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadFile(_response);\n        });\n    }\n\n    protected processUploadFile(response: AxiosResponse): Promise<FileUploadResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = FileUploadResponse.fromJS(resultData200);\n            return Promise.resolve<FileUploadResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileUploadResponse>(null as any);\n    }\n\n    uploadImages(folder: string | null | undefined, content: string[] , cancelToken?: CancelToken | undefined): Promise<Filegroup> {\n        let url_ = this.baseUrl + \"/api/File/UploadImages?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(content);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadImages(_response);\n        });\n    }\n\n    protected processUploadImages(response: AxiosResponse): Promise<Filegroup> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Filegroup.fromJS(resultData200);\n            return Promise.resolve<Filegroup>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Filegroup>(null as any);\n    }\n\n    uploadVideos(folder: string | null | undefined, content: VideoRequest[] , cancelToken?: CancelToken | undefined): Promise<Filegroup> {\n        let url_ = this.baseUrl + \"/api/File/UploadVideos?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(content);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadVideos(_response);\n        });\n    }\n\n    protected processUploadVideos(response: AxiosResponse): Promise<Filegroup> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Filegroup.fromJS(resultData200);\n            return Promise.resolve<Filegroup>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Filegroup>(null as any);\n    }\n\n    uploadFileFolder(folder: string | null | undefined, name: string | null | undefined, content: string , cancelToken?: CancelToken | undefined): Promise<string> {\n        let url_ = this.baseUrl + \"/api/File/UploadFileFolder?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        if (name !== undefined && name !== null)\n            url_ += \"name=\" + encodeURIComponent(\"\" + name) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(content);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadFileFolder(_response);\n        });\n    }\n\n    protected processUploadFileFolder(response: AxiosResponse): Promise<string> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<string>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<string>(null as any);\n    }\n\n    uploadRaw(folder: string | null | undefined, name: string | null | undefined, files: any[] | null | undefined , cancelToken?: CancelToken | undefined): Promise<string> {\n        let url_ = this.baseUrl + \"/api/File/UploadFileRaw?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        if (name !== undefined && name !== null)\n            url_ += \"name=\" + encodeURIComponent(\"\" + name) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = new FormData();\n        if (files !== null && files !== undefined)\n            files.forEach(item_ => content_.append(\"files\", item_.toString()));\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadRaw(_response);\n        });\n    }\n\n    protected processUploadRaw(response: AxiosResponse): Promise<string> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<string>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<string>(null as any);\n    }\n\n    uploadUpdate(folder: string | null | undefined, name: string | null | undefined, files: any[] | null | undefined , cancelToken?: CancelToken | undefined): Promise<string> {\n        let url_ = this.baseUrl + \"/api/File/UploadUpdate?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        if (name !== undefined && name !== null)\n            url_ += \"name=\" + encodeURIComponent(\"\" + name) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = new FormData();\n        if (files !== null && files !== undefined)\n            files.forEach(item_ => content_.append(\"files\", item_.toString()));\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadUpdate(_response);\n        });\n    }\n\n    protected processUploadUpdate(response: AxiosResponse): Promise<string> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<string>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<string>(null as any);\n    }\n\n    getListFolder(  cancelToken?: CancelToken | undefined): Promise<string[]> {\n        let url_ = this.baseUrl + \"/api/File/GetListFolder\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetListFolder(_response);\n        });\n    }\n\n    protected processGetListFolder(response: AxiosResponse): Promise<string[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(item);\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<string[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<string[]>(null as any);\n    }\n\n    getListFiles(folderName: string | null | undefined , cancelToken?: CancelToken | undefined): Promise<string[]> {\n        let url_ = this.baseUrl + \"/api/File/GetListFiles?\";\n        if (folderName !== undefined && folderName !== null)\n            url_ += \"folderName=\" + encodeURIComponent(\"\" + folderName) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetListFiles(_response);\n        });\n    }\n\n    protected processGetListFiles(response: AxiosResponse): Promise<string[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(item);\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<string[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<string[]>(null as any);\n    }\n\n    downloadFile(folder: string | null | undefined, fileName: string | null | undefined , cancelToken?: CancelToken | undefined): Promise<FileResponse> {\n        let url_ = this.baseUrl + \"/api/File/api/File?\";\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        if (fileName !== undefined && fileName !== null)\n            url_ += \"fileName=\" + encodeURIComponent(\"\" + fileName) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            responseType: \"blob\",\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/octet-stream\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDownloadFile(_response);\n        });\n    }\n\n    protected processDownloadFile(response: AxiosResponse): Promise<FileResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200 || status === 206) {\n            const contentDisposition = response.headers ? response.headers[\"content-disposition\"] : undefined;\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\n            return Promise.resolve({ fileName: fileName, status: status, data: new Blob([response.data], { type: response.headers[\"content-type\"] }), headers: _headers });\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileResponse>(null as any);\n    }\n\n    delete(folder: string | null | undefined, filename: string | null , cancelToken?: CancelToken | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/api/File/{filename}?\";\n        if (filename === undefined || filename === null)\n            throw new Error(\"The parameter 'filename' must be defined.\");\n        url_ = url_.replace(\"{filename}\", encodeURIComponent(\"\" + filename));\n        if (folder !== undefined && folder !== null)\n            url_ += \"folder=\" + encodeURIComponent(\"\" + folder) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDelete(_response);\n        });\n    }\n\n    protected processDelete(response: AxiosResponse): Promise<void> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            return Promise.resolve<void>(null as any);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<void>(null as any);\n    }\n}\n\nexport interface IHomeClient {\n    getTopOrder(): Promise<SmallCollectionItemResponse[]>;\n    getHotDeal(): Promise<SmallCollectionItemResponse[]>;\n    getLoved(): Promise<MediumCollectionItemResponse[]>;\n    getInComingOrder(): Promise<InComingOrderResponse[]>;\n    getPosts(): Promise<PostResponse[]>;\n}\n\nexport class HomeClient implements IHomeClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getTopOrder(  cancelToken?: CancelToken | undefined): Promise<SmallCollectionItemResponse[]> {\n        let url_ = this.baseUrl + \"/api/Home/GetTopOrder\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetTopOrder(_response);\n        });\n    }\n\n    protected processGetTopOrder(response: AxiosResponse): Promise<SmallCollectionItemResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(SmallCollectionItemResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<SmallCollectionItemResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<SmallCollectionItemResponse[]>(null as any);\n    }\n\n    getHotDeal(  cancelToken?: CancelToken | undefined): Promise<SmallCollectionItemResponse[]> {\n        let url_ = this.baseUrl + \"/api/Home/GetHotDeal\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetHotDeal(_response);\n        });\n    }\n\n    protected processGetHotDeal(response: AxiosResponse): Promise<SmallCollectionItemResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(SmallCollectionItemResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<SmallCollectionItemResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<SmallCollectionItemResponse[]>(null as any);\n    }\n\n    getLoved(  cancelToken?: CancelToken | undefined): Promise<MediumCollectionItemResponse[]> {\n        let url_ = this.baseUrl + \"/api/Home/GetLoved\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetLoved(_response);\n        });\n    }\n\n    protected processGetLoved(response: AxiosResponse): Promise<MediumCollectionItemResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MediumCollectionItemResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<MediumCollectionItemResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<MediumCollectionItemResponse[]>(null as any);\n    }\n\n    getInComingOrder(  cancelToken?: CancelToken | undefined): Promise<InComingOrderResponse[]> {\n        let url_ = this.baseUrl + \"/api/Home/GetInComingOrder\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetInComingOrder(_response);\n        });\n    }\n\n    protected processGetInComingOrder(response: AxiosResponse): Promise<InComingOrderResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(InComingOrderResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<InComingOrderResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<InComingOrderResponse[]>(null as any);\n    }\n\n    getPosts(  cancelToken?: CancelToken | undefined): Promise<PostResponse[]> {\n        let url_ = this.baseUrl + \"/api/Home/GetPosts\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPosts(_response);\n        });\n    }\n\n    protected processGetPosts(response: AxiosResponse): Promise<PostResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PostResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PostResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PostResponse[]>(null as any);\n    }\n}\n\nexport interface IManifestClient {\n    getManifest(): Promise<Manifest>;\n}\n\nexport class ManifestClient implements IManifestClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getManifest(  cancelToken?: CancelToken | undefined): Promise<Manifest> {\n        let url_ = this.baseUrl + \"/api/Manifest/GetManifest\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetManifest(_response);\n        });\n    }\n\n    protected processGetManifest(response: AxiosResponse): Promise<Manifest> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Manifest.fromJS(resultData200);\n            return Promise.resolve<Manifest>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Manifest>(null as any);\n    }\n}\n\nexport interface INotificationClient {\n    getAllNotification(userId: number | undefined): Promise<Notification[]>;\n    hasNotification(userId: number | undefined): Promise<boolean>;\n    readNotification(id: number | undefined): Promise<Notification>;\n    sendGlobalNotification(title: string | null | undefined, message: string | null | undefined): Promise<boolean>;\n    getAllNotificationV2(userId: number | undefined): Promise<NotificationResponse[]>;\n}\n\nexport class NotificationClient implements INotificationClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getAllNotification(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<Notification[]> {\n        let url_ = this.baseUrl + \"/api/Notification/GetAllNotification?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetAllNotification(_response);\n        });\n    }\n\n    protected processGetAllNotification(response: AxiosResponse): Promise<Notification[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Notification.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Notification[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Notification[]>(null as any);\n    }\n\n    hasNotification(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<boolean> {\n        let url_ = this.baseUrl + \"/api/Notification/HasNotification?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processHasNotification(_response);\n        });\n    }\n\n    protected processHasNotification(response: AxiosResponse): Promise<boolean> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<boolean>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<boolean>(null as any);\n    }\n\n    readNotification(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<Notification> {\n        let url_ = this.baseUrl + \"/api/Notification?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processReadNotification(_response);\n        });\n    }\n\n    protected processReadNotification(response: AxiosResponse): Promise<Notification> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Notification.fromJS(resultData200);\n            return Promise.resolve<Notification>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Notification>(null as any);\n    }\n\n    sendGlobalNotification(title: string | null | undefined, message: string | null | undefined , cancelToken?: CancelToken | undefined): Promise<boolean> {\n        let url_ = this.baseUrl + \"/api/Notification/SendGlobalNotification?\";\n        if (title !== undefined && title !== null)\n            url_ += \"title=\" + encodeURIComponent(\"\" + title) + \"&\";\n        if (message !== undefined && message !== null)\n            url_ += \"message=\" + encodeURIComponent(\"\" + message) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processSendGlobalNotification(_response);\n        });\n    }\n\n    protected processSendGlobalNotification(response: AxiosResponse): Promise<boolean> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<boolean>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<boolean>(null as any);\n    }\n\n    getAllNotificationV2(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<NotificationResponse[]> {\n        let url_ = this.baseUrl + \"/api/Notification/GetAllNotificationV2?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetAllNotificationV2(_response);\n        });\n    }\n\n    protected processGetAllNotificationV2(response: AxiosResponse): Promise<NotificationResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(NotificationResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<NotificationResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<NotificationResponse[]>(null as any);\n    }\n}\n\nexport interface IPhotographerClient {\n    getPhotographerAll(): Promise<PhotographerPost[]>;\n    getPhotographer(id: number): Promise<PhotographerPost>;\n    getPhotographerServiceById(id: number | undefined): Promise<PhotographerServicePackage[]>;\n    getPhotographerPromoCodeById(id: number | undefined): Promise<PGPromoCode[]>;\n    getPhotographerPromoCodeByServiceId(id: number | undefined): Promise<PGPromoCode[]>;\n}\n\nexport class PhotographerClient implements IPhotographerClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getPhotographerAll(  cancelToken?: CancelToken | undefined): Promise<PhotographerPost[]> {\n        let url_ = this.baseUrl + \"/api/Photographer\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographerAll(_response);\n        });\n    }\n\n    protected processGetPhotographerAll(response: AxiosResponse): Promise<PhotographerPost[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PhotographerPost.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PhotographerPost[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PhotographerPost[]>(null as any);\n    }\n\n    getPhotographer(id: number , cancelToken?: CancelToken | undefined): Promise<PhotographerPost> {\n        let url_ = this.baseUrl + \"/api/Photographer/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographer(_response);\n        });\n    }\n\n    protected processGetPhotographer(response: AxiosResponse): Promise<PhotographerPost> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = PhotographerPost.fromJS(resultData200);\n            return Promise.resolve<PhotographerPost>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PhotographerPost>(null as any);\n    }\n\n    getPhotographerServiceById(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<PhotographerServicePackage[]> {\n        let url_ = this.baseUrl + \"/api/Photographer/GetPhotographerServiceById?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographerServiceById(_response);\n        });\n    }\n\n    protected processGetPhotographerServiceById(response: AxiosResponse): Promise<PhotographerServicePackage[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PhotographerServicePackage.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PhotographerServicePackage[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PhotographerServicePackage[]>(null as any);\n    }\n\n    getPhotographerPromoCodeById(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<PGPromoCode[]> {\n        let url_ = this.baseUrl + \"/api/Photographer/GetPhotographerPromoCodeById?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographerPromoCodeById(_response);\n        });\n    }\n\n    protected processGetPhotographerPromoCodeById(response: AxiosResponse): Promise<PGPromoCode[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PGPromoCode.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PGPromoCode[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PGPromoCode[]>(null as any);\n    }\n\n    getPhotographerPromoCodeByServiceId(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<PGPromoCode[]> {\n        let url_ = this.baseUrl + \"/api/Photographer/GetPhotographerPromoCodeByServiceId?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographerPromoCodeByServiceId(_response);\n        });\n    }\n\n    protected processGetPhotographerPromoCodeByServiceId(response: AxiosResponse): Promise<PGPromoCode[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PGPromoCode.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PGPromoCode[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PGPromoCode[]>(null as any);\n    }\n}\n\nexport interface IPhotographerOrderClient {\n    getPhotographerorderAll(): Promise<Photographerorder[]>;\n    postPhotographerorder(photographerorder: Photographerorder): Promise<Photographerorder>;\n    getPhotographerorder(id: number): Promise<Photographerorder>;\n    putPhotographerorder(id: number, photographerorder: Photographerorder): Promise<Photographerorder>;\n    deletePhotographerorder(id: number): Promise<Photographerorder>;\n    getMyBookingOrder(userId: number | undefined): Promise<Photographerorder[]>;\n    getMyPhotographerBookingOrder(userId: number | undefined): Promise<Photographerorder[]>;\n    updatePhotographerOrderStatus(photographerorder: Photographerorder): Promise<Photographerorder>;\n}\n\nexport class PhotographerOrderClient implements IPhotographerOrderClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getPhotographerorderAll(  cancelToken?: CancelToken | undefined): Promise<Photographerorder[]> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographerorderAll(_response);\n        });\n    }\n\n    protected processGetPhotographerorderAll(response: AxiosResponse): Promise<Photographerorder[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Photographerorder.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Photographerorder[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder[]>(null as any);\n    }\n\n    postPhotographerorder(photographerorder: Photographerorder , cancelToken?: CancelToken | undefined): Promise<Photographerorder> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(photographerorder);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostPhotographerorder(_response);\n        });\n    }\n\n    protected processPostPhotographerorder(response: AxiosResponse): Promise<Photographerorder> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Photographerorder.fromJS(resultData200);\n            return Promise.resolve<Photographerorder>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder>(null as any);\n    }\n\n    getPhotographerorder(id: number , cancelToken?: CancelToken | undefined): Promise<Photographerorder> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPhotographerorder(_response);\n        });\n    }\n\n    protected processGetPhotographerorder(response: AxiosResponse): Promise<Photographerorder> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Photographerorder.fromJS(resultData200);\n            return Promise.resolve<Photographerorder>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder>(null as any);\n    }\n\n    putPhotographerorder(id: number, photographerorder: Photographerorder , cancelToken?: CancelToken | undefined): Promise<Photographerorder> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(photographerorder);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutPhotographerorder(_response);\n        });\n    }\n\n    protected processPutPhotographerorder(response: AxiosResponse): Promise<Photographerorder> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Photographerorder.fromJS(resultData200);\n            return Promise.resolve<Photographerorder>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder>(null as any);\n    }\n\n    deletePhotographerorder(id: number , cancelToken?: CancelToken | undefined): Promise<Photographerorder> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeletePhotographerorder(_response);\n        });\n    }\n\n    protected processDeletePhotographerorder(response: AxiosResponse): Promise<Photographerorder> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Photographerorder.fromJS(resultData200);\n            return Promise.resolve<Photographerorder>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder>(null as any);\n    }\n\n    getMyBookingOrder(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<Photographerorder[]> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder/GetMyBookingOrder?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetMyBookingOrder(_response);\n        });\n    }\n\n    protected processGetMyBookingOrder(response: AxiosResponse): Promise<Photographerorder[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Photographerorder.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Photographerorder[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder[]>(null as any);\n    }\n\n    getMyPhotographerBookingOrder(userId: number | undefined , cancelToken?: CancelToken | undefined): Promise<Photographerorder[]> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder/GetMyPhotographerBookingOrder?\";\n        if (userId === null)\n            throw new Error(\"The parameter 'userId' cannot be null.\");\n        else if (userId !== undefined)\n            url_ += \"userId=\" + encodeURIComponent(\"\" + userId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetMyPhotographerBookingOrder(_response);\n        });\n    }\n\n    protected processGetMyPhotographerBookingOrder(response: AxiosResponse): Promise<Photographerorder[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Photographerorder.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Photographerorder[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder[]>(null as any);\n    }\n\n    updatePhotographerOrderStatus(photographerorder: Photographerorder , cancelToken?: CancelToken | undefined): Promise<Photographerorder> {\n        let url_ = this.baseUrl + \"/api/PhotographerOrder/UpdatePhotographerOrderStatus\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(photographerorder);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUpdatePhotographerOrderStatus(_response);\n        });\n    }\n\n    protected processUpdatePhotographerOrderStatus(response: AxiosResponse): Promise<Photographerorder> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Photographerorder.fromJS(resultData200);\n            return Promise.resolve<Photographerorder>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Photographerorder>(null as any);\n    }\n}\n\nexport interface IPriceTypeClient {\n    getPricetypeAll(): Promise<Pricetype[]>;\n    postPricetype(pricetype: Pricetype): Promise<Pricetype>;\n    getPricetype(id: number): Promise<Pricetype>;\n    putPricetype(id: number, pricetype: Pricetype): Promise<Pricetype>;\n    deletePricetype(id: number): Promise<Pricetype>;\n}\n\nexport class PriceTypeClient implements IPriceTypeClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getPricetypeAll(  cancelToken?: CancelToken | undefined): Promise<Pricetype[]> {\n        let url_ = this.baseUrl + \"/api/PriceType\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPricetypeAll(_response);\n        });\n    }\n\n    protected processGetPricetypeAll(response: AxiosResponse): Promise<Pricetype[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Pricetype.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Pricetype[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Pricetype[]>(null as any);\n    }\n\n    postPricetype(pricetype: Pricetype , cancelToken?: CancelToken | undefined): Promise<Pricetype> {\n        let url_ = this.baseUrl + \"/api/PriceType\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(pricetype);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostPricetype(_response);\n        });\n    }\n\n    protected processPostPricetype(response: AxiosResponse): Promise<Pricetype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Pricetype.fromJS(resultData200);\n            return Promise.resolve<Pricetype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Pricetype>(null as any);\n    }\n\n    getPricetype(id: number , cancelToken?: CancelToken | undefined): Promise<Pricetype> {\n        let url_ = this.baseUrl + \"/api/PriceType/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetPricetype(_response);\n        });\n    }\n\n    protected processGetPricetype(response: AxiosResponse): Promise<Pricetype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Pricetype.fromJS(resultData200);\n            return Promise.resolve<Pricetype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Pricetype>(null as any);\n    }\n\n    putPricetype(id: number, pricetype: Pricetype , cancelToken?: CancelToken | undefined): Promise<Pricetype> {\n        let url_ = this.baseUrl + \"/api/PriceType/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(pricetype);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutPricetype(_response);\n        });\n    }\n\n    protected processPutPricetype(response: AxiosResponse): Promise<Pricetype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Pricetype.fromJS(resultData200);\n            return Promise.resolve<Pricetype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Pricetype>(null as any);\n    }\n\n    deletePricetype(id: number , cancelToken?: CancelToken | undefined): Promise<Pricetype> {\n        let url_ = this.baseUrl + \"/api/PriceType/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeletePricetype(_response);\n        });\n    }\n\n    protected processDeletePricetype(response: AxiosResponse): Promise<Pricetype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Pricetype.fromJS(resultData200);\n            return Promise.resolve<Pricetype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Pricetype>(null as any);\n    }\n}\n\nexport interface IProfileClient {\n    updateUserInfo(user: User): Promise<User>;\n    getTotalInformation(user: User): Promise<User>;\n    getTotalInfor(id: number | undefined): Promise<User>;\n}\n\nexport class ProfileClient implements IProfileClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    updateUserInfo(user: User , cancelToken?: CancelToken | undefined): Promise<User> {\n        let url_ = this.baseUrl + \"/api/Profile/UpdateUserInfo\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(user);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUpdateUserInfo(_response);\n        });\n    }\n\n    protected processUpdateUserInfo(response: AxiosResponse): Promise<User> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = User.fromJS(resultData200);\n            return Promise.resolve<User>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<User>(null as any);\n    }\n\n    getTotalInformation(user: User , cancelToken?: CancelToken | undefined): Promise<User> {\n        let url_ = this.baseUrl + \"/api/Profile\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(user);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetTotalInformation(_response);\n        });\n    }\n\n    protected processGetTotalInformation(response: AxiosResponse): Promise<User> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = User.fromJS(resultData200);\n            return Promise.resolve<User>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<User>(null as any);\n    }\n\n    getTotalInfor(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<User> {\n        let url_ = this.baseUrl + \"/api/Profile/GetTotalInfor?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetTotalInfor(_response);\n        });\n    }\n\n    protected processGetTotalInfor(response: AxiosResponse): Promise<User> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = User.fromJS(resultData200);\n            return Promise.resolve<User>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<User>(null as any);\n    }\n}\n\nexport interface IResourcesClient {\n    getResources(): Promise<ResourceDataResponse[]>;\n}\n\nexport class ResourcesClient implements IResourcesClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getResources(  cancelToken?: CancelToken | undefined): Promise<ResourceDataResponse[]> {\n        let url_ = this.baseUrl + \"/api/Resources\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetResources(_response);\n        });\n    }\n\n    protected processGetResources(response: AxiosResponse): Promise<ResourceDataResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(ResourceDataResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<ResourceDataResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<ResourceDataResponse[]>(null as any);\n    }\n}\n\nexport interface ISearchClient {\n    search(request: SearchRequest): Promise<MediumCollectionItemResponse[]>;\n}\n\nexport class SearchClient implements ISearchClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    search(request: SearchRequest , cancelToken?: CancelToken | undefined): Promise<MediumCollectionItemResponse[]> {\n        let url_ = this.baseUrl + \"/api/Search/Search\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(request);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processSearch(_response);\n        });\n    }\n\n    protected processSearch(response: AxiosResponse): Promise<MediumCollectionItemResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MediumCollectionItemResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<MediumCollectionItemResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<MediumCollectionItemResponse[]>(null as any);\n    }\n}\n\nexport interface IServicepackClient {\n    getServicepackAll(): Promise<Servicepack[]>;\n    postServicepack(servicepack: Servicepack): Promise<Servicepack>;\n    getServicepack(id: number): Promise<Servicepack>;\n    putServicepack(id: number, servicepack: Servicepack): Promise<Servicepack>;\n    deleteServicepack(id: number): Promise<Servicepack>;\n}\n\nexport class ServicepackClient implements IServicepackClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getServicepackAll(  cancelToken?: CancelToken | undefined): Promise<Servicepack[]> {\n        let url_ = this.baseUrl + \"/api/Servicepack\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetServicepackAll(_response);\n        });\n    }\n\n    protected processGetServicepackAll(response: AxiosResponse): Promise<Servicepack[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Servicepack.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Servicepack[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepack[]>(null as any);\n    }\n\n    postServicepack(servicepack: Servicepack , cancelToken?: CancelToken | undefined): Promise<Servicepack> {\n        let url_ = this.baseUrl + \"/api/Servicepack\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(servicepack);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostServicepack(_response);\n        });\n    }\n\n    protected processPostServicepack(response: AxiosResponse): Promise<Servicepack> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepack.fromJS(resultData200);\n            return Promise.resolve<Servicepack>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepack>(null as any);\n    }\n\n    getServicepack(id: number , cancelToken?: CancelToken | undefined): Promise<Servicepack> {\n        let url_ = this.baseUrl + \"/api/Servicepack/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetServicepack(_response);\n        });\n    }\n\n    protected processGetServicepack(response: AxiosResponse): Promise<Servicepack> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepack.fromJS(resultData200);\n            return Promise.resolve<Servicepack>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepack>(null as any);\n    }\n\n    putServicepack(id: number, servicepack: Servicepack , cancelToken?: CancelToken | undefined): Promise<Servicepack> {\n        let url_ = this.baseUrl + \"/api/Servicepack/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(servicepack);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutServicepack(_response);\n        });\n    }\n\n    protected processPutServicepack(response: AxiosResponse): Promise<Servicepack> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepack.fromJS(resultData200);\n            return Promise.resolve<Servicepack>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepack>(null as any);\n    }\n\n    deleteServicepack(id: number , cancelToken?: CancelToken | undefined): Promise<Servicepack> {\n        let url_ = this.baseUrl + \"/api/Servicepack/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeleteServicepack(_response);\n        });\n    }\n\n    protected processDeleteServicepack(response: AxiosResponse): Promise<Servicepack> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepack.fromJS(resultData200);\n            return Promise.resolve<Servicepack>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepack>(null as any);\n    }\n}\n\nexport interface IServicepackpriceClient {\n    getServicepackpriceAll(): Promise<Servicepackprice[]>;\n    postServicepackprice(servicepackprice: Servicepackprice): Promise<Servicepackprice>;\n    getServicepackprice(id: number): Promise<Servicepackprice>;\n    putServicepackprice(id: number, servicepackprice: Servicepackprice): Promise<Servicepackprice>;\n    deleteServicepackprice(id: number): Promise<Servicepackprice>;\n}\n\nexport class ServicepackpriceClient implements IServicepackpriceClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getServicepackpriceAll(  cancelToken?: CancelToken | undefined): Promise<Servicepackprice[]> {\n        let url_ = this.baseUrl + \"/api/Servicepackprice\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetServicepackpriceAll(_response);\n        });\n    }\n\n    protected processGetServicepackpriceAll(response: AxiosResponse): Promise<Servicepackprice[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Servicepackprice.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Servicepackprice[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepackprice[]>(null as any);\n    }\n\n    postServicepackprice(servicepackprice: Servicepackprice , cancelToken?: CancelToken | undefined): Promise<Servicepackprice> {\n        let url_ = this.baseUrl + \"/api/Servicepackprice\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(servicepackprice);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostServicepackprice(_response);\n        });\n    }\n\n    protected processPostServicepackprice(response: AxiosResponse): Promise<Servicepackprice> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepackprice.fromJS(resultData200);\n            return Promise.resolve<Servicepackprice>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepackprice>(null as any);\n    }\n\n    getServicepackprice(id: number , cancelToken?: CancelToken | undefined): Promise<Servicepackprice> {\n        let url_ = this.baseUrl + \"/api/Servicepackprice/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetServicepackprice(_response);\n        });\n    }\n\n    protected processGetServicepackprice(response: AxiosResponse): Promise<Servicepackprice> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepackprice.fromJS(resultData200);\n            return Promise.resolve<Servicepackprice>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepackprice>(null as any);\n    }\n\n    putServicepackprice(id: number, servicepackprice: Servicepackprice , cancelToken?: CancelToken | undefined): Promise<Servicepackprice> {\n        let url_ = this.baseUrl + \"/api/Servicepackprice/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(servicepackprice);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutServicepackprice(_response);\n        });\n    }\n\n    protected processPutServicepackprice(response: AxiosResponse): Promise<Servicepackprice> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepackprice.fromJS(resultData200);\n            return Promise.resolve<Servicepackprice>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepackprice>(null as any);\n    }\n\n    deleteServicepackprice(id: number , cancelToken?: CancelToken | undefined): Promise<Servicepackprice> {\n        let url_ = this.baseUrl + \"/api/Servicepackprice/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeleteServicepackprice(_response);\n        });\n    }\n\n    protected processDeleteServicepackprice(response: AxiosResponse): Promise<Servicepackprice> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepackprice.fromJS(resultData200);\n            return Promise.resolve<Servicepackprice>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepackprice>(null as any);\n    }\n}\n\nexport interface IServicepaymenttypeClient {\n    getServicepaymenttypeAll(): Promise<Servicepaymenttype[]>;\n    postServicepaymenttype(servicepaymenttype: Servicepaymenttype): Promise<Servicepaymenttype>;\n    getServicepaymenttype(id: number): Promise<Servicepaymenttype>;\n    putServicepaymenttype(id: number, servicepaymenttype: Servicepaymenttype): Promise<Servicepaymenttype>;\n    deleteServicepaymenttype(id: number): Promise<Servicepaymenttype>;\n}\n\nexport class ServicepaymenttypeClient implements IServicepaymenttypeClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getServicepaymenttypeAll(  cancelToken?: CancelToken | undefined): Promise<Servicepaymenttype[]> {\n        let url_ = this.baseUrl + \"/api/Servicepaymenttype\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetServicepaymenttypeAll(_response);\n        });\n    }\n\n    protected processGetServicepaymenttypeAll(response: AxiosResponse): Promise<Servicepaymenttype[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Servicepaymenttype.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Servicepaymenttype[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepaymenttype[]>(null as any);\n    }\n\n    postServicepaymenttype(servicepaymenttype: Servicepaymenttype , cancelToken?: CancelToken | undefined): Promise<Servicepaymenttype> {\n        let url_ = this.baseUrl + \"/api/Servicepaymenttype\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(servicepaymenttype);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostServicepaymenttype(_response);\n        });\n    }\n\n    protected processPostServicepaymenttype(response: AxiosResponse): Promise<Servicepaymenttype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepaymenttype.fromJS(resultData200);\n            return Promise.resolve<Servicepaymenttype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepaymenttype>(null as any);\n    }\n\n    getServicepaymenttype(id: number , cancelToken?: CancelToken | undefined): Promise<Servicepaymenttype> {\n        let url_ = this.baseUrl + \"/api/Servicepaymenttype/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetServicepaymenttype(_response);\n        });\n    }\n\n    protected processGetServicepaymenttype(response: AxiosResponse): Promise<Servicepaymenttype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepaymenttype.fromJS(resultData200);\n            return Promise.resolve<Servicepaymenttype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepaymenttype>(null as any);\n    }\n\n    putServicepaymenttype(id: number, servicepaymenttype: Servicepaymenttype , cancelToken?: CancelToken | undefined): Promise<Servicepaymenttype> {\n        let url_ = this.baseUrl + \"/api/Servicepaymenttype/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(servicepaymenttype);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutServicepaymenttype(_response);\n        });\n    }\n\n    protected processPutServicepaymenttype(response: AxiosResponse): Promise<Servicepaymenttype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepaymenttype.fromJS(resultData200);\n            return Promise.resolve<Servicepaymenttype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepaymenttype>(null as any);\n    }\n\n    deleteServicepaymenttype(id: number , cancelToken?: CancelToken | undefined): Promise<Servicepaymenttype> {\n        let url_ = this.baseUrl + \"/api/Servicepaymenttype/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeleteServicepaymenttype(_response);\n        });\n    }\n\n    protected processDeleteServicepaymenttype(response: AxiosResponse): Promise<Servicepaymenttype> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Servicepaymenttype.fromJS(resultData200);\n            return Promise.resolve<Servicepaymenttype>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Servicepaymenttype>(null as any);\n    }\n}\n\nexport interface ISpecialdayClient {\n    getSpecialdayAll(): Promise<Specialday[]>;\n    postSpecialday(specialday: Specialday): Promise<Specialday>;\n    getSpecialday(id: number): Promise<Specialday>;\n    putSpecialday(id: number, specialday: Specialday): Promise<Specialday>;\n    deleteSpecialday(id: number): Promise<Specialday>;\n}\n\nexport class SpecialdayClient implements ISpecialdayClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getSpecialdayAll(  cancelToken?: CancelToken | undefined): Promise<Specialday[]> {\n        let url_ = this.baseUrl + \"/api/Specialday\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetSpecialdayAll(_response);\n        });\n    }\n\n    protected processGetSpecialdayAll(response: AxiosResponse): Promise<Specialday[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(Specialday.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<Specialday[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Specialday[]>(null as any);\n    }\n\n    postSpecialday(specialday: Specialday , cancelToken?: CancelToken | undefined): Promise<Specialday> {\n        let url_ = this.baseUrl + \"/api/Specialday\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(specialday);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPostSpecialday(_response);\n        });\n    }\n\n    protected processPostSpecialday(response: AxiosResponse): Promise<Specialday> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Specialday.fromJS(resultData200);\n            return Promise.resolve<Specialday>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Specialday>(null as any);\n    }\n\n    getSpecialday(id: number , cancelToken?: CancelToken | undefined): Promise<Specialday> {\n        let url_ = this.baseUrl + \"/api/Specialday/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetSpecialday(_response);\n        });\n    }\n\n    protected processGetSpecialday(response: AxiosResponse): Promise<Specialday> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Specialday.fromJS(resultData200);\n            return Promise.resolve<Specialday>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Specialday>(null as any);\n    }\n\n    putSpecialday(id: number, specialday: Specialday , cancelToken?: CancelToken | undefined): Promise<Specialday> {\n        let url_ = this.baseUrl + \"/api/Specialday/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(specialday);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"PUT\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processPutSpecialday(_response);\n        });\n    }\n\n    protected processPutSpecialday(response: AxiosResponse): Promise<Specialday> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Specialday.fromJS(resultData200);\n            return Promise.resolve<Specialday>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Specialday>(null as any);\n    }\n\n    deleteSpecialday(id: number , cancelToken?: CancelToken | undefined): Promise<Specialday> {\n        let url_ = this.baseUrl + \"/api/Specialday/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"DELETE\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processDeleteSpecialday(_response);\n        });\n    }\n\n    protected processDeleteSpecialday(response: AxiosResponse): Promise<Specialday> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = Specialday.fromJS(resultData200);\n            return Promise.resolve<Specialday>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<Specialday>(null as any);\n    }\n}\n\nexport interface IStaticFileClient {\n    getImage(id: string | undefined): Promise<FileResponse>;\n    getVideo(id: string | undefined): Promise<FileResponse>;\n    getResource(id: string | null | undefined): Promise<FileResponse>;\n    webHookStaticFile(): Promise<FileResponse>;\n}\n\nexport class StaticFileClient implements IStaticFileClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getImage(id: string | undefined , cancelToken?: CancelToken | undefined): Promise<FileResponse> {\n        let url_ = this.baseUrl + \"/api/StaticFile/GetImage?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            responseType: \"blob\",\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/octet-stream\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetImage(_response);\n        });\n    }\n\n    protected processGetImage(response: AxiosResponse): Promise<FileResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200 || status === 206) {\n            const contentDisposition = response.headers ? response.headers[\"content-disposition\"] : undefined;\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\n            return Promise.resolve({ fileName: fileName, status: status, data: new Blob([response.data], { type: response.headers[\"content-type\"] }), headers: _headers });\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileResponse>(null as any);\n    }\n\n    getVideo(id: string | undefined , cancelToken?: CancelToken | undefined): Promise<FileResponse> {\n        let url_ = this.baseUrl + \"/api/StaticFile/GetVideo?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            responseType: \"blob\",\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/octet-stream\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetVideo(_response);\n        });\n    }\n\n    protected processGetVideo(response: AxiosResponse): Promise<FileResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200 || status === 206) {\n            const contentDisposition = response.headers ? response.headers[\"content-disposition\"] : undefined;\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\n            return Promise.resolve({ fileName: fileName, status: status, data: new Blob([response.data], { type: response.headers[\"content-type\"] }), headers: _headers });\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileResponse>(null as any);\n    }\n\n    getResource(id: string | null | undefined , cancelToken?: CancelToken | undefined): Promise<FileResponse> {\n        let url_ = this.baseUrl + \"/api/StaticFile/GetResource?\";\n        if (id !== undefined && id !== null)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            responseType: \"blob\",\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/octet-stream\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetResource(_response);\n        });\n    }\n\n    protected processGetResource(response: AxiosResponse): Promise<FileResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200 || status === 206) {\n            const contentDisposition = response.headers ? response.headers[\"content-disposition\"] : undefined;\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\n            return Promise.resolve({ fileName: fileName, status: status, data: new Blob([response.data], { type: response.headers[\"content-type\"] }), headers: _headers });\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileResponse>(null as any);\n    }\n\n    webHookStaticFile(  cancelToken?: CancelToken | undefined): Promise<FileResponse> {\n        let url_ = this.baseUrl + \"/api/StaticFile/WebHookStaticFile\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            responseType: \"blob\",\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/octet-stream\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processWebHookStaticFile(_response);\n        });\n    }\n\n    protected processWebHookStaticFile(response: AxiosResponse): Promise<FileResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200 || status === 206) {\n            const contentDisposition = response.headers ? response.headers[\"content-disposition\"] : undefined;\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\n            return Promise.resolve({ fileName: fileName, status: status, data: new Blob([response.data], { type: response.headers[\"content-type\"] }), headers: _headers });\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<FileResponse>(null as any);\n    }\n}\n\nexport interface IStudioClient {\n    getStudioPostAll(): Promise<StudioPost[]>;\n    getStudioRating(studioId: number | undefined): Promise<StudioRatingResponse[]>;\n    getStudioPost(id: number): Promise<StudioPost>;\n    getStudioRoomsByStudioId(id: number | undefined): Promise<StudioRoom[]>;\n    getStudioPromoCodeByStudioId(id: number | undefined): Promise<PromoCode[]>;\n    getStudioPromoCodeByStudioRoomId(id: number | undefined): Promise<PromoCode[]>;\n    bookingStudioRoom(booking: StudioBooking): Promise<StudioBooking>;\n    uploadBookingEvidence(request: UploadEvidenceImageRequest): Promise<StudioBooking>;\n}\n\nexport class StudioClient implements IStudioClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    getStudioPostAll(  cancelToken?: CancelToken | undefined): Promise<StudioPost[]> {\n        let url_ = this.baseUrl + \"/api/Studio\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetStudioPostAll(_response);\n        });\n    }\n\n    protected processGetStudioPostAll(response: AxiosResponse): Promise<StudioPost[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(StudioPost.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<StudioPost[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<StudioPost[]>(null as any);\n    }\n\n    getStudioRating(studioId: number | undefined , cancelToken?: CancelToken | undefined): Promise<StudioRatingResponse[]> {\n        let url_ = this.baseUrl + \"/api/Studio?\";\n        if (studioId === null)\n            throw new Error(\"The parameter 'studioId' cannot be null.\");\n        else if (studioId !== undefined)\n            url_ += \"studioId=\" + encodeURIComponent(\"\" + studioId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetStudioRating(_response);\n        });\n    }\n\n    protected processGetStudioRating(response: AxiosResponse): Promise<StudioRatingResponse[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(StudioRatingResponse.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<StudioRatingResponse[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<StudioRatingResponse[]>(null as any);\n    }\n\n    getStudioPost(id: number , cancelToken?: CancelToken | undefined): Promise<StudioPost> {\n        let url_ = this.baseUrl + \"/api/Studio/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetStudioPost(_response);\n        });\n    }\n\n    protected processGetStudioPost(response: AxiosResponse): Promise<StudioPost> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = StudioPost.fromJS(resultData200);\n            return Promise.resolve<StudioPost>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<StudioPost>(null as any);\n    }\n\n    getStudioRoomsByStudioId(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<StudioRoom[]> {\n        let url_ = this.baseUrl + \"/api/Studio/GetStudioRoomsByStudioId?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetStudioRoomsByStudioId(_response);\n        });\n    }\n\n    protected processGetStudioRoomsByStudioId(response: AxiosResponse): Promise<StudioRoom[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(StudioRoom.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<StudioRoom[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<StudioRoom[]>(null as any);\n    }\n\n    getStudioPromoCodeByStudioId(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<PromoCode[]> {\n        let url_ = this.baseUrl + \"/api/Studio/GetStudioPromoCodeByStudioId?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetStudioPromoCodeByStudioId(_response);\n        });\n    }\n\n    protected processGetStudioPromoCodeByStudioId(response: AxiosResponse): Promise<PromoCode[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PromoCode.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PromoCode[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PromoCode[]>(null as any);\n    }\n\n    getStudioPromoCodeByStudioRoomId(id: number | undefined , cancelToken?: CancelToken | undefined): Promise<PromoCode[]> {\n        let url_ = this.baseUrl + \"/api/Studio/GetStudioPromoCodeByStudioRoomId?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processGetStudioPromoCodeByStudioRoomId(_response);\n        });\n    }\n\n    protected processGetStudioPromoCodeByStudioRoomId(response: AxiosResponse): Promise<PromoCode[]> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(PromoCode.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return Promise.resolve<PromoCode[]>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<PromoCode[]>(null as any);\n    }\n\n    bookingStudioRoom(booking: StudioBooking , cancelToken?: CancelToken | undefined): Promise<StudioBooking> {\n        let url_ = this.baseUrl + \"/api/Studio/BookingStudioRoom\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(booking);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processBookingStudioRoom(_response);\n        });\n    }\n\n    protected processBookingStudioRoom(response: AxiosResponse): Promise<StudioBooking> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = StudioBooking.fromJS(resultData200);\n            return Promise.resolve<StudioBooking>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<StudioBooking>(null as any);\n    }\n\n    uploadBookingEvidence(request: UploadEvidenceImageRequest , cancelToken?: CancelToken | undefined): Promise<StudioBooking> {\n        let url_ = this.baseUrl + \"/api/Studio/UploadBookingEvidence\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(request);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processUploadBookingEvidence(_response);\n        });\n    }\n\n    protected processUploadBookingEvidence(response: AxiosResponse): Promise<StudioBooking> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = StudioBooking.fromJS(resultData200);\n            return Promise.resolve<StudioBooking>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<StudioBooking>(null as any);\n    }\n}\n\nexport interface IUsersClient {\n    checkExistPhone(phone: string | null | undefined): Promise<boolean>;\n    register(user: UserRegisterRequest): Promise<UserResponse>;\n    loginExistPhone(phone: string | null | undefined): Promise<UserResponse>;\n    changePassword(user: UserChangePasswordRequest): Promise<UserChangePasswordResponse>;\n}\n\nexport class UsersClient implements IUsersClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    checkExistPhone(phone: string | null | undefined , cancelToken?: CancelToken | undefined): Promise<boolean> {\n        let url_ = this.baseUrl + \"/api/Users/CheckExistPhone?\";\n        if (phone !== undefined && phone !== null)\n            url_ += \"phone=\" + encodeURIComponent(\"\" + phone) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processCheckExistPhone(_response);\n        });\n    }\n\n    protected processCheckExistPhone(response: AxiosResponse): Promise<boolean> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<boolean>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<boolean>(null as any);\n    }\n\n    register(user: UserRegisterRequest , cancelToken?: CancelToken | undefined): Promise<UserResponse> {\n        let url_ = this.baseUrl + \"/api/Users/Register\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(user);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processRegister(_response);\n        });\n    }\n\n    protected processRegister(response: AxiosResponse): Promise<UserResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserResponse.fromJS(resultData200);\n            return Promise.resolve<UserResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserResponse>(null as any);\n    }\n\n    loginExistPhone(phone: string | null | undefined , cancelToken?: CancelToken | undefined): Promise<UserResponse> {\n        let url_ = this.baseUrl + \"/api/Users/LoginExistPhone?\";\n        if (phone !== undefined && phone !== null)\n            url_ += \"Phone=\" + encodeURIComponent(\"\" + phone) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processLoginExistPhone(_response);\n        });\n    }\n\n    protected processLoginExistPhone(response: AxiosResponse): Promise<UserResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserResponse.fromJS(resultData200);\n            return Promise.resolve<UserResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserResponse>(null as any);\n    }\n\n    changePassword(user: UserChangePasswordRequest , cancelToken?: CancelToken | undefined): Promise<UserChangePasswordResponse> {\n        let url_ = this.baseUrl + \"/api/Users/ChangePassword\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(user);\n\n        let options_: AxiosRequestConfig = {\n            data: content_,\n            method: \"POST\",\n            url: url_,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processChangePassword(_response);\n        });\n    }\n\n    protected processChangePassword(response: AxiosResponse): Promise<UserChangePasswordResponse> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n            result200 = UserChangePasswordResponse.fromJS(resultData200);\n            return Promise.resolve<UserChangePasswordResponse>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<UserChangePasswordResponse>(null as any);\n    }\n}\n\nexport interface IVerifyClient {\n    verifyLogin(): Promise<boolean>;\n}\n\nexport class VerifyClient implements IVerifyClient {\n    private instance: AxiosInstance;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, instance?: AxiosInstance) {\n\n        this.instance = instance ? instance : axios.create();\n\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://bookingstudio.vn\";\n\n    }\n\n    verifyLogin(  cancelToken?: CancelToken | undefined): Promise<boolean> {\n        let url_ = this.baseUrl + \"/api/Verify\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_: AxiosRequestConfig = {\n            method: \"GET\",\n            url: url_,\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            cancelToken\n        };\n\n        return this.instance.request(options_).catch((_error: any) => {\n            if (isAxiosError(_error) && _error.response) {\n                return _error.response;\n            } else {\n                throw _error;\n            }\n        }).then((_response: AxiosResponse) => {\n            return this.processVerifyLogin(_response);\n        });\n    }\n\n    protected processVerifyLogin(response: AxiosResponse): Promise<boolean> {\n        const status = response.status;\n        let _headers: any = {};\n        if (response.headers && typeof response.headers === \"object\") {\n            for (let k in response.headers) {\n                if (response.headers.hasOwnProperty(k)) {\n                    _headers[k] = response.headers[k];\n                }\n            }\n        }\n        if (status === 200) {\n            const _responseText = response.data;\n            let result200: any = null;\n            let resultData200  = _responseText;\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return Promise.resolve<boolean>(result200);\n\n        } else if (status !== 200 && status !== 204) {\n            const _responseText = response.data;\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }\n        return Promise.resolve<boolean>(null as any);\n    }\n}\n\nexport abstract class EntityOfInteger implements IEntityOfInteger {\n    id?: number;\n\n    constructor(data?: IEntityOfInteger) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n        }\n    }\n\n    static fromJS(data: any): EntityOfInteger {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'EntityOfInteger' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        return data;\n    }\n}\n\nexport interface IEntityOfInteger {\n    id?: number;\n}\n\nexport abstract class Entity extends EntityOfInteger implements IEntity {\n\n    constructor(data?: IEntity) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n    }\n\n    static fromJS(data: any): Entity {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'Entity' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IEntity extends IEntityOfInteger {\n}\n\nexport class Province extends Entity implements IProvince {\n    name?: string | undefined;\n    code?: string | undefined;\n\n    constructor(data?: IProvince) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.name = _data[\"Name\"];\n            this.code = _data[\"Code\"];\n        }\n    }\n\n    static fromJS(data: any): Province {\n        data = typeof data === 'object' ? data : {};\n        let result = new Province();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Name\"] = this.name;\n        data[\"Code\"] = this.code;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IProvince extends IEntity {\n    name?: string | undefined;\n    code?: string | undefined;\n}\n\nexport class District extends Entity implements IDistrict {\n    name?: string | undefined;\n    prefix?: string | undefined;\n    provinceId?: number;\n    provinceFk?: Province | undefined;\n\n    constructor(data?: IDistrict) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.name = _data[\"Name\"];\n            this.prefix = _data[\"Prefix\"];\n            this.provinceId = _data[\"ProvinceId\"];\n            this.provinceFk = _data[\"ProvinceFk\"] ? Province.fromJS(_data[\"ProvinceFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): District {\n        data = typeof data === 'object' ? data : {};\n        let result = new District();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Name\"] = this.name;\n        data[\"Prefix\"] = this.prefix;\n        data[\"ProvinceId\"] = this.provinceId;\n        data[\"ProvinceFk\"] = this.provinceFk ? this.provinceFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IDistrict extends IEntity {\n    name?: string | undefined;\n    prefix?: string | undefined;\n    provinceId?: number;\n    provinceFk?: Province | undefined;\n}\n\nexport class Ward extends Entity implements IWard {\n    name?: string | undefined;\n    prefix?: string | undefined;\n    districtId?: number | undefined;\n    districtFk?: District | undefined;\n    provinceId?: number | undefined;\n    provinceFk?: Province | undefined;\n\n    constructor(data?: IWard) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.name = _data[\"Name\"];\n            this.prefix = _data[\"Prefix\"];\n            this.districtId = _data[\"DistrictId\"];\n            this.districtFk = _data[\"DistrictFk\"] ? District.fromJS(_data[\"DistrictFk\"]) : <any>undefined;\n            this.provinceId = _data[\"ProvinceId\"];\n            this.provinceFk = _data[\"ProvinceFk\"] ? Province.fromJS(_data[\"ProvinceFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Ward {\n        data = typeof data === 'object' ? data : {};\n        let result = new Ward();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Name\"] = this.name;\n        data[\"Prefix\"] = this.prefix;\n        data[\"DistrictId\"] = this.districtId;\n        data[\"DistrictFk\"] = this.districtFk ? this.districtFk.toJSON() : <any>undefined;\n        data[\"ProvinceId\"] = this.provinceId;\n        data[\"ProvinceFk\"] = this.provinceFk ? this.provinceFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IWard extends IEntity {\n    name?: string | undefined;\n    prefix?: string | undefined;\n    districtId?: number | undefined;\n    districtFk?: District | undefined;\n    provinceId?: number | undefined;\n    provinceFk?: Province | undefined;\n}\n\nexport class Album implements IAlbum {\n    fileImages?: Uploadfile[] | undefined;\n    fileVideos?: Uploadfile[] | undefined;\n    id?: number;\n    owner?: number;\n    name?: string | undefined;\n    imagegroupid?: number | undefined;\n    videogroupid?: number | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n\n    constructor(data?: IAlbum) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"FileImages\"])) {\n                this.fileImages = [] as any;\n                for (let item of _data[\"FileImages\"])\n                    this.fileImages!.push(Uploadfile.fromJS(item));\n            }\n            if (Array.isArray(_data[\"FileVideos\"])) {\n                this.fileVideos = [] as any;\n                for (let item of _data[\"FileVideos\"])\n                    this.fileVideos!.push(Uploadfile.fromJS(item));\n            }\n            this.id = _data[\"Id\"];\n            this.owner = _data[\"Owner\"];\n            this.name = _data[\"Name\"];\n            this.imagegroupid = _data[\"Imagegroupid\"];\n            this.videogroupid = _data[\"Videogroupid\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Album {\n        data = typeof data === 'object' ? data : {};\n        let result = new Album();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.fileImages)) {\n            data[\"FileImages\"] = [];\n            for (let item of this.fileImages)\n                data[\"FileImages\"].push(item.toJSON());\n        }\n        if (Array.isArray(this.fileVideos)) {\n            data[\"FileVideos\"] = [];\n            for (let item of this.fileVideos)\n                data[\"FileVideos\"].push(item.toJSON());\n        }\n        data[\"Id\"] = this.id;\n        data[\"Owner\"] = this.owner;\n        data[\"Name\"] = this.name;\n        data[\"Imagegroupid\"] = this.imagegroupid;\n        data[\"Videogroupid\"] = this.videogroupid;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IAlbum {\n    fileImages?: Uploadfile[] | undefined;\n    fileVideos?: Uploadfile[] | undefined;\n    id?: number;\n    owner?: number;\n    name?: string | undefined;\n    imagegroupid?: number | undefined;\n    videogroupid?: number | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n}\n\nexport class Uploadfile implements IUploadfile {\n    id?: number;\n    path?: string | undefined;\n    thumnailpath?: string | undefined;\n    name?: string | undefined;\n    size?: number | undefined;\n    extension?: string | undefined;\n    filegroupid?: number;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n\n    constructor(data?: IUploadfile) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.path = _data[\"Path\"];\n            this.thumnailpath = _data[\"Thumnailpath\"];\n            this.name = _data[\"Name\"];\n            this.size = _data[\"Size\"];\n            this.extension = _data[\"Extension\"];\n            this.filegroupid = _data[\"Filegroupid\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Uploadfile {\n        data = typeof data === 'object' ? data : {};\n        let result = new Uploadfile();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Path\"] = this.path;\n        data[\"Thumnailpath\"] = this.thumnailpath;\n        data[\"Name\"] = this.name;\n        data[\"Size\"] = this.size;\n        data[\"Extension\"] = this.extension;\n        data[\"Filegroupid\"] = this.filegroupid;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IUploadfile {\n    id?: number;\n    path?: string | undefined;\n    thumnailpath?: string | undefined;\n    name?: string | undefined;\n    size?: number | undefined;\n    extension?: string | undefined;\n    filegroupid?: number;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n}\n\nexport class LoginAdminResponse implements ILoginAdminResponse {\n    id?: number;\n    token?: string | undefined;\n    usertype?: number;\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    companyname?: string | undefined;\n    fullname?: string | undefined;\n    experience?: string | undefined;\n    website?: string | undefined;\n\n    constructor(data?: ILoginAdminResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.token = _data[\"Token\"];\n            this.usertype = _data[\"Usertype\"];\n            this.email = _data[\"Email\"];\n            this.username = _data[\"Username\"];\n            this.phone = _data[\"Phone\"];\n            this.companyname = _data[\"Companyname\"];\n            this.fullname = _data[\"Fullname\"];\n            this.experience = _data[\"Experience\"];\n            this.website = _data[\"Website\"];\n        }\n    }\n\n    static fromJS(data: any): LoginAdminResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new LoginAdminResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Token\"] = this.token;\n        data[\"Usertype\"] = this.usertype;\n        data[\"Email\"] = this.email;\n        data[\"Username\"] = this.username;\n        data[\"Phone\"] = this.phone;\n        data[\"Companyname\"] = this.companyname;\n        data[\"Fullname\"] = this.fullname;\n        data[\"Experience\"] = this.experience;\n        data[\"Website\"] = this.website;\n        return data;\n    }\n}\n\nexport interface ILoginAdminResponse {\n    id?: number;\n    token?: string | undefined;\n    usertype?: number;\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    companyname?: string | undefined;\n    fullname?: string | undefined;\n    experience?: string | undefined;\n    website?: string | undefined;\n}\n\nexport class LoginAdminRequest implements ILoginAdminRequest {\n    username?: string | undefined;\n    password?: string | undefined;\n\n    constructor(data?: ILoginAdminRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.username = _data[\"Username\"];\n            this.password = _data[\"Password\"];\n        }\n    }\n\n    static fromJS(data: any): LoginAdminRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new LoginAdminRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Username\"] = this.username;\n        data[\"Password\"] = this.password;\n        return data;\n    }\n}\n\nexport interface ILoginAdminRequest {\n    username?: string | undefined;\n    password?: string | undefined;\n}\n\nexport class UserResponse implements IUserResponse {\n    accessToken?: string | undefined;\n    expireDate?: Date;\n    description?: string | undefined;\n    id?: number;\n    usertype?: number;\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    fullname?: string | undefined;\n    createddate?: Date;\n    updateddate?: Date;\n    status?: number | undefined;\n    updatedby?: number | undefined;\n    imageurl?: string | undefined;\n    facebookid?: string | undefined;\n    googleemail?: string | undefined;\n    facebooktoken?: string | undefined;\n    facebookfirstname?: string | undefined;\n    facebooklastname?: string | undefined;\n    facebookemail?: string | undefined;\n    facebookpicture?: string | undefined;\n    googlename?: string | undefined;\n    googlepicture?: string | undefined;\n    appleUserIdentifier?: string | undefined;\n    appleGivenName?: string | undefined;\n    appleFamilyName?: string | undefined;\n    appleEmail?: string | undefined;\n\n    constructor(data?: IUserResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.accessToken = _data[\"AccessToken\"];\n            this.expireDate = _data[\"ExpireDate\"] ? new Date(_data[\"ExpireDate\"].toString()) : <any>undefined;\n            this.description = _data[\"Description\"];\n            this.id = _data[\"Id\"];\n            this.usertype = _data[\"Usertype\"];\n            this.email = _data[\"Email\"];\n            this.username = _data[\"Username\"];\n            this.phone = _data[\"Phone\"];\n            this.fullname = _data[\"Fullname\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n            this.status = _data[\"Status\"];\n            this.updatedby = _data[\"Updatedby\"];\n            this.imageurl = _data[\"Imageurl\"];\n            this.facebookid = _data[\"Facebookid\"];\n            this.googleemail = _data[\"Googleemail\"];\n            this.facebooktoken = _data[\"Facebooktoken\"];\n            this.facebookfirstname = _data[\"Facebookfirstname\"];\n            this.facebooklastname = _data[\"Facebooklastname\"];\n            this.facebookemail = _data[\"Facebookemail\"];\n            this.facebookpicture = _data[\"Facebookpicture\"];\n            this.googlename = _data[\"Googlename\"];\n            this.googlepicture = _data[\"Googlepicture\"];\n            this.appleUserIdentifier = _data[\"AppleUserIdentifier\"];\n            this.appleGivenName = _data[\"AppleGivenName\"];\n            this.appleFamilyName = _data[\"AppleFamilyName\"];\n            this.appleEmail = _data[\"AppleEmail\"];\n        }\n    }\n\n    static fromJS(data: any): UserResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"AccessToken\"] = this.accessToken;\n        data[\"ExpireDate\"] = this.expireDate ? this.expireDate.toISOString() : <any>undefined;\n        data[\"Description\"] = this.description;\n        data[\"Id\"] = this.id;\n        data[\"Usertype\"] = this.usertype;\n        data[\"Email\"] = this.email;\n        data[\"Username\"] = this.username;\n        data[\"Phone\"] = this.phone;\n        data[\"Fullname\"] = this.fullname;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        data[\"Status\"] = this.status;\n        data[\"Updatedby\"] = this.updatedby;\n        data[\"Imageurl\"] = this.imageurl;\n        data[\"Facebookid\"] = this.facebookid;\n        data[\"Googleemail\"] = this.googleemail;\n        data[\"Facebooktoken\"] = this.facebooktoken;\n        data[\"Facebookfirstname\"] = this.facebookfirstname;\n        data[\"Facebooklastname\"] = this.facebooklastname;\n        data[\"Facebookemail\"] = this.facebookemail;\n        data[\"Facebookpicture\"] = this.facebookpicture;\n        data[\"Googlename\"] = this.googlename;\n        data[\"Googlepicture\"] = this.googlepicture;\n        data[\"AppleUserIdentifier\"] = this.appleUserIdentifier;\n        data[\"AppleGivenName\"] = this.appleGivenName;\n        data[\"AppleFamilyName\"] = this.appleFamilyName;\n        data[\"AppleEmail\"] = this.appleEmail;\n        return data;\n    }\n}\n\nexport interface IUserResponse {\n    accessToken?: string | undefined;\n    expireDate?: Date;\n    description?: string | undefined;\n    id?: number;\n    usertype?: number;\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    fullname?: string | undefined;\n    createddate?: Date;\n    updateddate?: Date;\n    status?: number | undefined;\n    updatedby?: number | undefined;\n    imageurl?: string | undefined;\n    facebookid?: string | undefined;\n    googleemail?: string | undefined;\n    facebooktoken?: string | undefined;\n    facebookfirstname?: string | undefined;\n    facebooklastname?: string | undefined;\n    facebookemail?: string | undefined;\n    facebookpicture?: string | undefined;\n    googlename?: string | undefined;\n    googlepicture?: string | undefined;\n    appleUserIdentifier?: string | undefined;\n    appleGivenName?: string | undefined;\n    appleFamilyName?: string | undefined;\n    appleEmail?: string | undefined;\n}\n\nexport class LoginRequest implements ILoginRequest {\n    phone?: string | undefined;\n    password?: string | undefined;\n\n    constructor(data?: ILoginRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.phone = _data[\"Phone\"];\n            this.password = _data[\"Password\"];\n        }\n    }\n\n    static fromJS(data: any): LoginRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new LoginRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Phone\"] = this.phone;\n        data[\"Password\"] = this.password;\n        return data;\n    }\n}\n\nexport interface ILoginRequest {\n    phone?: string | undefined;\n    password?: string | undefined;\n}\n\nexport class FacebookRequest implements IFacebookRequest {\n    id?: string | undefined;\n    token?: string | undefined;\n    firstName?: string | undefined;\n    lastName?: string | undefined;\n    email?: string | undefined;\n    picture?: string | undefined;\n\n    constructor(data?: IFacebookRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.token = _data[\"Token\"];\n            this.firstName = _data[\"FirstName\"];\n            this.lastName = _data[\"LastName\"];\n            this.email = _data[\"Email\"];\n            this.picture = _data[\"Picture\"];\n        }\n    }\n\n    static fromJS(data: any): FacebookRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new FacebookRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Token\"] = this.token;\n        data[\"FirstName\"] = this.firstName;\n        data[\"LastName\"] = this.lastName;\n        data[\"Email\"] = this.email;\n        data[\"Picture\"] = this.picture;\n        return data;\n    }\n}\n\nexport interface IFacebookRequest {\n    id?: string | undefined;\n    token?: string | undefined;\n    firstName?: string | undefined;\n    lastName?: string | undefined;\n    email?: string | undefined;\n    picture?: string | undefined;\n}\n\nexport class GoogleRequest implements IGoogleRequest {\n    name?: string | undefined;\n    email?: string | undefined;\n    picture?: string | undefined;\n\n    constructor(data?: IGoogleRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.name = _data[\"Name\"];\n            this.email = _data[\"Email\"];\n            this.picture = _data[\"Picture\"];\n        }\n    }\n\n    static fromJS(data: any): GoogleRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new GoogleRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Name\"] = this.name;\n        data[\"Email\"] = this.email;\n        data[\"Picture\"] = this.picture;\n        return data;\n    }\n}\n\nexport interface IGoogleRequest {\n    name?: string | undefined;\n    email?: string | undefined;\n    picture?: string | undefined;\n}\n\nexport class AppleLoginRequest implements IAppleLoginRequest {\n    userIdentifier?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    email?: string | undefined;\n\n    constructor(data?: IAppleLoginRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.userIdentifier = _data[\"UserIdentifier\"];\n            this.givenName = _data[\"GivenName\"];\n            this.familyName = _data[\"FamilyName\"];\n            this.email = _data[\"Email\"];\n        }\n    }\n\n    static fromJS(data: any): AppleLoginRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new AppleLoginRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"UserIdentifier\"] = this.userIdentifier;\n        data[\"GivenName\"] = this.givenName;\n        data[\"FamilyName\"] = this.familyName;\n        data[\"Email\"] = this.email;\n        return data;\n    }\n}\n\nexport interface IAppleLoginRequest {\n    userIdentifier?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    email?: string | undefined;\n}\n\nexport abstract class CreationAuditedEntityOfInteger extends EntityOfInteger implements ICreationAuditedEntityOfInteger {\n    creationTime?: Date;\n    creatorUserId?: number | undefined;\n\n    constructor(data?: ICreationAuditedEntityOfInteger) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.creationTime = _data[\"CreationTime\"] ? new Date(_data[\"CreationTime\"].toString()) : <any>undefined;\n            this.creatorUserId = _data[\"CreatorUserId\"];\n        }\n    }\n\n    static fromJS(data: any): CreationAuditedEntityOfInteger {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'CreationAuditedEntityOfInteger' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"CreationTime\"] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\n        data[\"CreatorUserId\"] = this.creatorUserId;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface ICreationAuditedEntityOfInteger extends IEntityOfInteger {\n    creationTime?: Date;\n    creatorUserId?: number | undefined;\n}\n\nexport abstract class AuditedEntityOfInteger extends CreationAuditedEntityOfInteger implements IAuditedEntityOfInteger {\n    lastModificationTime?: Date | undefined;\n    lastModifierUserId?: number | undefined;\n\n    constructor(data?: IAuditedEntityOfInteger) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.lastModificationTime = _data[\"LastModificationTime\"] ? new Date(_data[\"LastModificationTime\"].toString()) : <any>undefined;\n            this.lastModifierUserId = _data[\"LastModifierUserId\"];\n        }\n    }\n\n    static fromJS(data: any): AuditedEntityOfInteger {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'AuditedEntityOfInteger' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"LastModificationTime\"] = this.lastModificationTime ? this.lastModificationTime.toISOString() : <any>undefined;\n        data[\"LastModifierUserId\"] = this.lastModifierUserId;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IAuditedEntityOfInteger extends ICreationAuditedEntityOfInteger {\n    lastModificationTime?: Date | undefined;\n    lastModifierUserId?: number | undefined;\n}\n\nexport abstract class FullAuditedEntityOfInteger extends AuditedEntityOfInteger implements IFullAuditedEntityOfInteger {\n    isDeleted?: boolean;\n    deleterUserId?: number | undefined;\n    deletionTime?: Date | undefined;\n\n    constructor(data?: IFullAuditedEntityOfInteger) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.isDeleted = _data[\"IsDeleted\"];\n            this.deleterUserId = _data[\"DeleterUserId\"];\n            this.deletionTime = _data[\"DeletionTime\"] ? new Date(_data[\"DeletionTime\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): FullAuditedEntityOfInteger {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'FullAuditedEntityOfInteger' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"IsDeleted\"] = this.isDeleted;\n        data[\"DeleterUserId\"] = this.deleterUserId;\n        data[\"DeletionTime\"] = this.deletionTime ? this.deletionTime.toISOString() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IFullAuditedEntityOfInteger extends IAuditedEntityOfInteger {\n    isDeleted?: boolean;\n    deleterUserId?: number | undefined;\n    deletionTime?: Date | undefined;\n}\n\nexport abstract class FullAuditedEntity extends FullAuditedEntityOfInteger implements IFullAuditedEntity {\n\n    constructor(data?: IFullAuditedEntity) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n    }\n\n    static fromJS(data: any): FullAuditedEntity {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'FullAuditedEntity' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IFullAuditedEntity extends IFullAuditedEntityOfInteger {\n}\n\nexport class RegisterPartner extends FullAuditedEntity implements IRegisterPartner {\n    partnerName!: string;\n    representativeName!: string;\n    phone!: string;\n    otherPhone?: string | undefined;\n    email!: string;\n    reEmail!: string;\n    businessRegistrationLicenseNumber?: string | undefined;\n    address!: string;\n    bankBranchName?: string | undefined;\n    bankAccount?: string | undefined;\n    bankAccountOwnerName?: string | undefined;\n    autoGeneratedPassword!: string;\n    businessType?: string | undefined;\n    personalIdentity?: string | undefined;\n\n    constructor(data?: IRegisterPartner) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.partnerName = _data[\"PartnerName\"];\n            this.representativeName = _data[\"RepresentativeName\"];\n            this.phone = _data[\"Phone\"];\n            this.otherPhone = _data[\"OtherPhone\"];\n            this.email = _data[\"Email\"];\n            this.reEmail = _data[\"ReEmail\"];\n            this.businessRegistrationLicenseNumber = _data[\"BusinessRegistrationLicenseNumber\"];\n            this.address = _data[\"Address\"];\n            this.bankBranchName = _data[\"BankBranchName\"];\n            this.bankAccount = _data[\"BankAccount\"];\n            this.bankAccountOwnerName = _data[\"BankAccountOwnerName\"];\n            this.autoGeneratedPassword = _data[\"AutoGeneratedPassword\"];\n            this.businessType = _data[\"BusinessType\"];\n            this.personalIdentity = _data[\"PersonalIdentity\"];\n        }\n    }\n\n    static fromJS(data: any): RegisterPartner {\n        data = typeof data === 'object' ? data : {};\n        let result = new RegisterPartner();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"PartnerName\"] = this.partnerName;\n        data[\"RepresentativeName\"] = this.representativeName;\n        data[\"Phone\"] = this.phone;\n        data[\"OtherPhone\"] = this.otherPhone;\n        data[\"Email\"] = this.email;\n        data[\"ReEmail\"] = this.reEmail;\n        data[\"BusinessRegistrationLicenseNumber\"] = this.businessRegistrationLicenseNumber;\n        data[\"Address\"] = this.address;\n        data[\"BankBranchName\"] = this.bankBranchName;\n        data[\"BankAccount\"] = this.bankAccount;\n        data[\"BankAccountOwnerName\"] = this.bankAccountOwnerName;\n        data[\"AutoGeneratedPassword\"] = this.autoGeneratedPassword;\n        data[\"BusinessType\"] = this.businessType;\n        data[\"PersonalIdentity\"] = this.personalIdentity;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IRegisterPartner extends IFullAuditedEntity {\n    partnerName: string;\n    representativeName: string;\n    phone: string;\n    otherPhone?: string | undefined;\n    email: string;\n    reEmail: string;\n    businessRegistrationLicenseNumber?: string | undefined;\n    address: string;\n    bankBranchName?: string | undefined;\n    bankAccount?: string | undefined;\n    bankAccountOwnerName?: string | undefined;\n    autoGeneratedPassword: string;\n    businessType?: string | undefined;\n    personalIdentity?: string | undefined;\n}\n\nexport class Chatmessage implements IChatmessage {\n    isMine?: boolean;\n    id?: number;\n    message?: string | undefined;\n    chatcontactid?: number;\n    messagetype?: number;\n    time?: Date;\n\n    constructor(data?: IChatmessage) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.isMine = _data[\"IsMine\"];\n            this.id = _data[\"Id\"];\n            this.message = _data[\"Message\"];\n            this.chatcontactid = _data[\"Chatcontactid\"];\n            this.messagetype = _data[\"Messagetype\"];\n            this.time = _data[\"Time\"] ? new Date(_data[\"Time\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Chatmessage {\n        data = typeof data === 'object' ? data : {};\n        let result = new Chatmessage();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"IsMine\"] = this.isMine;\n        data[\"Id\"] = this.id;\n        data[\"Message\"] = this.message;\n        data[\"Chatcontactid\"] = this.chatcontactid;\n        data[\"Messagetype\"] = this.messagetype;\n        data[\"Time\"] = this.time ? this.time.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IChatmessage {\n    isMine?: boolean;\n    id?: number;\n    message?: string | undefined;\n    chatcontactid?: number;\n    messagetype?: number;\n    time?: Date;\n}\n\nexport class Chatcontact implements IChatcontact {\n    user1Name?: string | undefined;\n    user1Image?: string | undefined;\n    user2Name?: string | undefined;\n    user2Image?: string | undefined;\n    id?: number;\n    user1?: number;\n    user2?: number;\n    createddate?: Date;\n    lastchatmessage?: string | undefined;\n    lastchattime?: Date | undefined;\n\n    constructor(data?: IChatcontact) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.user1Name = _data[\"User1Name\"];\n            this.user1Image = _data[\"User1Image\"];\n            this.user2Name = _data[\"User2Name\"];\n            this.user2Image = _data[\"User2Image\"];\n            this.id = _data[\"Id\"];\n            this.user1 = _data[\"User1\"];\n            this.user2 = _data[\"User2\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.lastchatmessage = _data[\"Lastchatmessage\"];\n            this.lastchattime = _data[\"Lastchattime\"] ? new Date(_data[\"Lastchattime\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Chatcontact {\n        data = typeof data === 'object' ? data : {};\n        let result = new Chatcontact();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"User1Name\"] = this.user1Name;\n        data[\"User1Image\"] = this.user1Image;\n        data[\"User2Name\"] = this.user2Name;\n        data[\"User2Image\"] = this.user2Image;\n        data[\"Id\"] = this.id;\n        data[\"User1\"] = this.user1;\n        data[\"User2\"] = this.user2;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Lastchatmessage\"] = this.lastchatmessage;\n        data[\"Lastchattime\"] = this.lastchattime ? this.lastchattime.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IChatcontact {\n    user1Name?: string | undefined;\n    user1Image?: string | undefined;\n    user2Name?: string | undefined;\n    user2Image?: string | undefined;\n    id?: number;\n    user1?: number;\n    user2?: number;\n    createddate?: Date;\n    lastchatmessage?: string | undefined;\n    lastchattime?: Date | undefined;\n}\n\nexport class ClothesPost extends FullAuditedEntity implements IClothesPost {\n    tenantId?: number | undefined;\n    name!: string;\n    description!: string;\n    bookingCount?: number;\n    price?: number;\n    sales?: number;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    isPopular?: boolean;\n    isBestSell?: boolean;\n    isNewest?: boolean;\n    address?: string | undefined;\n    shopId?: number | undefined;\n    shopFk?: Shop | undefined;\n\n    constructor(data?: IClothesPost) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.name = _data[\"Name\"];\n            this.description = _data[\"Description\"];\n            this.bookingCount = _data[\"BookingCount\"];\n            this.price = _data[\"Price\"];\n            this.sales = _data[\"Sales\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.image7 = _data[\"Image7\"];\n            this.image8 = _data[\"Image8\"];\n            this.image9 = _data[\"Image9\"];\n            this.image10 = _data[\"Image10\"];\n            this.image11 = _data[\"Image11\"];\n            this.image12 = _data[\"Image12\"];\n            this.image13 = _data[\"Image13\"];\n            this.image14 = _data[\"Image14\"];\n            this.image15 = _data[\"Image15\"];\n            this.image16 = _data[\"Image16\"];\n            this.image17 = _data[\"Image17\"];\n            this.image18 = _data[\"Image18\"];\n            this.image19 = _data[\"Image19\"];\n            this.image20 = _data[\"Image20\"];\n            this.isPopular = _data[\"IsPopular\"];\n            this.isBestSell = _data[\"IsBestSell\"];\n            this.isNewest = _data[\"IsNewest\"];\n            this.address = _data[\"Address\"];\n            this.shopId = _data[\"ShopId\"];\n            this.shopFk = _data[\"ShopFk\"] ? Shop.fromJS(_data[\"ShopFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): ClothesPost {\n        data = typeof data === 'object' ? data : {};\n        let result = new ClothesPost();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Name\"] = this.name;\n        data[\"Description\"] = this.description;\n        data[\"BookingCount\"] = this.bookingCount;\n        data[\"Price\"] = this.price;\n        data[\"Sales\"] = this.sales;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"Image7\"] = this.image7;\n        data[\"Image8\"] = this.image8;\n        data[\"Image9\"] = this.image9;\n        data[\"Image10\"] = this.image10;\n        data[\"Image11\"] = this.image11;\n        data[\"Image12\"] = this.image12;\n        data[\"Image13\"] = this.image13;\n        data[\"Image14\"] = this.image14;\n        data[\"Image15\"] = this.image15;\n        data[\"Image16\"] = this.image16;\n        data[\"Image17\"] = this.image17;\n        data[\"Image18\"] = this.image18;\n        data[\"Image19\"] = this.image19;\n        data[\"Image20\"] = this.image20;\n        data[\"IsPopular\"] = this.isPopular;\n        data[\"IsBestSell\"] = this.isBestSell;\n        data[\"IsNewest\"] = this.isNewest;\n        data[\"Address\"] = this.address;\n        data[\"ShopId\"] = this.shopId;\n        data[\"ShopFk\"] = this.shopFk ? this.shopFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IClothesPost extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    name: string;\n    description: string;\n    bookingCount?: number;\n    price?: number;\n    sales?: number;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    isPopular?: boolean;\n    isBestSell?: boolean;\n    isNewest?: boolean;\n    address?: string | undefined;\n    shopId?: number | undefined;\n    shopFk?: Shop | undefined;\n}\n\nexport class Shop extends FullAuditedEntity implements IShop {\n    tenantId?: number | undefined;\n    name!: string;\n    address?: string | undefined;\n    latitude?: number;\n    longtitude?: number;\n    description?: string | undefined;\n    isAuthorized?: boolean;\n    avatar?: string | undefined;\n    hourCloseDefault?: number;\n    hourOpenDefault?: number;\n    minutesCloseDefault?: number;\n    minutesOpenDefault?: number;\n    isHotDeal?: boolean;\n    bookingUserId?: number | undefined;\n    bookingUserFk?: BookingUser | undefined;\n\n    constructor(data?: IShop) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.name = _data[\"Name\"];\n            this.address = _data[\"Address\"];\n            this.latitude = _data[\"Latitude\"];\n            this.longtitude = _data[\"Longtitude\"];\n            this.description = _data[\"Description\"];\n            this.isAuthorized = _data[\"IsAuthorized\"];\n            this.avatar = _data[\"Avatar\"];\n            this.hourCloseDefault = _data[\"HourCloseDefault\"];\n            this.hourOpenDefault = _data[\"HourOpenDefault\"];\n            this.minutesCloseDefault = _data[\"MinutesCloseDefault\"];\n            this.minutesOpenDefault = _data[\"MinutesOpenDefault\"];\n            this.isHotDeal = _data[\"IsHotDeal\"];\n            this.bookingUserId = _data[\"BookingUserId\"];\n            this.bookingUserFk = _data[\"BookingUserFk\"] ? BookingUser.fromJS(_data[\"BookingUserFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Shop {\n        data = typeof data === 'object' ? data : {};\n        let result = new Shop();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Name\"] = this.name;\n        data[\"Address\"] = this.address;\n        data[\"Latitude\"] = this.latitude;\n        data[\"Longtitude\"] = this.longtitude;\n        data[\"Description\"] = this.description;\n        data[\"IsAuthorized\"] = this.isAuthorized;\n        data[\"Avatar\"] = this.avatar;\n        data[\"HourCloseDefault\"] = this.hourCloseDefault;\n        data[\"HourOpenDefault\"] = this.hourOpenDefault;\n        data[\"MinutesCloseDefault\"] = this.minutesCloseDefault;\n        data[\"MinutesOpenDefault\"] = this.minutesOpenDefault;\n        data[\"IsHotDeal\"] = this.isHotDeal;\n        data[\"BookingUserId\"] = this.bookingUserId;\n        data[\"BookingUserFk\"] = this.bookingUserFk ? this.bookingUserFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IShop extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    name: string;\n    address?: string | undefined;\n    latitude?: number;\n    longtitude?: number;\n    description?: string | undefined;\n    isAuthorized?: boolean;\n    avatar?: string | undefined;\n    hourCloseDefault?: number;\n    hourOpenDefault?: number;\n    minutesCloseDefault?: number;\n    minutesOpenDefault?: number;\n    isHotDeal?: boolean;\n    bookingUserId?: number | undefined;\n    bookingUserFk?: BookingUser | undefined;\n}\n\nexport class BookingUser extends FullAuditedEntity implements IBookingUser {\n    email!: string;\n    username?: string | undefined;\n    phone?: string | undefined;\n    hashPassword?: string | undefined;\n    salt?: string | undefined;\n    fullname?: string | undefined;\n    createdDate?: Date;\n    updatedDate?: Date;\n    status?: number;\n    updatedBy?: number;\n    image?: string | undefined;\n    facebookId?: string | undefined;\n    googleEmail?: string | undefined;\n    facebookToken?: string | undefined;\n    facebookFirstname?: string | undefined;\n    facebookLastname?: string | undefined;\n    facebookEmail?: string | undefined;\n    facebookPicture?: string | undefined;\n    googleName?: string | undefined;\n    googlePicture?: string | undefined;\n    appleUserIdentifier?: string | undefined;\n    appleGivenName?: string | undefined;\n    appleFamilyName?: string | undefined;\n    appleEmail?: string | undefined;\n    userTypeId?: number | undefined;\n    userTypeFk?: UserType | undefined;\n\n    constructor(data?: IBookingUser) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.email = _data[\"Email\"];\n            this.username = _data[\"Username\"];\n            this.phone = _data[\"Phone\"];\n            this.hashPassword = _data[\"HashPassword\"];\n            this.salt = _data[\"Salt\"];\n            this.fullname = _data[\"Fullname\"];\n            this.createdDate = _data[\"CreatedDate\"] ? new Date(_data[\"CreatedDate\"].toString()) : <any>undefined;\n            this.updatedDate = _data[\"UpdatedDate\"] ? new Date(_data[\"UpdatedDate\"].toString()) : <any>undefined;\n            this.status = _data[\"Status\"];\n            this.updatedBy = _data[\"UpdatedBy\"];\n            this.image = _data[\"Image\"];\n            this.facebookId = _data[\"FacebookId\"];\n            this.googleEmail = _data[\"GoogleEmail\"];\n            this.facebookToken = _data[\"FacebookToken\"];\n            this.facebookFirstname = _data[\"FacebookFirstname\"];\n            this.facebookLastname = _data[\"FacebookLastname\"];\n            this.facebookEmail = _data[\"FacebookEmail\"];\n            this.facebookPicture = _data[\"FacebookPicture\"];\n            this.googleName = _data[\"GoogleName\"];\n            this.googlePicture = _data[\"GooglePicture\"];\n            this.appleUserIdentifier = _data[\"AppleUserIdentifier\"];\n            this.appleGivenName = _data[\"AppleGivenName\"];\n            this.appleFamilyName = _data[\"AppleFamilyName\"];\n            this.appleEmail = _data[\"AppleEmail\"];\n            this.userTypeId = _data[\"UserTypeId\"];\n            this.userTypeFk = _data[\"UserTypeFk\"] ? UserType.fromJS(_data[\"UserTypeFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): BookingUser {\n        data = typeof data === 'object' ? data : {};\n        let result = new BookingUser();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Email\"] = this.email;\n        data[\"Username\"] = this.username;\n        data[\"Phone\"] = this.phone;\n        data[\"HashPassword\"] = this.hashPassword;\n        data[\"Salt\"] = this.salt;\n        data[\"Fullname\"] = this.fullname;\n        data[\"CreatedDate\"] = this.createdDate ? this.createdDate.toISOString() : <any>undefined;\n        data[\"UpdatedDate\"] = this.updatedDate ? this.updatedDate.toISOString() : <any>undefined;\n        data[\"Status\"] = this.status;\n        data[\"UpdatedBy\"] = this.updatedBy;\n        data[\"Image\"] = this.image;\n        data[\"FacebookId\"] = this.facebookId;\n        data[\"GoogleEmail\"] = this.googleEmail;\n        data[\"FacebookToken\"] = this.facebookToken;\n        data[\"FacebookFirstname\"] = this.facebookFirstname;\n        data[\"FacebookLastname\"] = this.facebookLastname;\n        data[\"FacebookEmail\"] = this.facebookEmail;\n        data[\"FacebookPicture\"] = this.facebookPicture;\n        data[\"GoogleName\"] = this.googleName;\n        data[\"GooglePicture\"] = this.googlePicture;\n        data[\"AppleUserIdentifier\"] = this.appleUserIdentifier;\n        data[\"AppleGivenName\"] = this.appleGivenName;\n        data[\"AppleFamilyName\"] = this.appleFamilyName;\n        data[\"AppleEmail\"] = this.appleEmail;\n        data[\"UserTypeId\"] = this.userTypeId;\n        data[\"UserTypeFk\"] = this.userTypeFk ? this.userTypeFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IBookingUser extends IFullAuditedEntity {\n    email: string;\n    username?: string | undefined;\n    phone?: string | undefined;\n    hashPassword?: string | undefined;\n    salt?: string | undefined;\n    fullname?: string | undefined;\n    createdDate?: Date;\n    updatedDate?: Date;\n    status?: number;\n    updatedBy?: number;\n    image?: string | undefined;\n    facebookId?: string | undefined;\n    googleEmail?: string | undefined;\n    facebookToken?: string | undefined;\n    facebookFirstname?: string | undefined;\n    facebookLastname?: string | undefined;\n    facebookEmail?: string | undefined;\n    facebookPicture?: string | undefined;\n    googleName?: string | undefined;\n    googlePicture?: string | undefined;\n    appleUserIdentifier?: string | undefined;\n    appleGivenName?: string | undefined;\n    appleFamilyName?: string | undefined;\n    appleEmail?: string | undefined;\n    userTypeId?: number | undefined;\n    userTypeFk?: UserType | undefined;\n}\n\nexport class UserType extends FullAuditedEntity implements IUserType {\n    name?: string | undefined;\n\n    constructor(data?: IUserType) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.name = _data[\"Name\"];\n        }\n    }\n\n    static fromJS(data: any): UserType {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserType();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Name\"] = this.name;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IUserType extends IFullAuditedEntity {\n    name?: string | undefined;\n}\n\nexport class NotificationToken extends Entity implements INotificationToken {\n    userId?: number;\n    token!: string;\n\n    constructor(data?: INotificationToken) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.userId = _data[\"UserId\"];\n            this.token = _data[\"Token\"];\n        }\n    }\n\n    static fromJS(data: any): NotificationToken {\n        data = typeof data === 'object' ? data : {};\n        let result = new NotificationToken();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"UserId\"] = this.userId;\n        data[\"Token\"] = this.token;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface INotificationToken extends IEntity {\n    userId?: number;\n    token: string;\n}\n\nexport class FileUploadResponse implements IFileUploadResponse {\n    fileUploadId?: number;\n    url?: string | undefined;\n\n    constructor(data?: IFileUploadResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.fileUploadId = _data[\"FileUploadId\"];\n            this.url = _data[\"Url\"];\n        }\n    }\n\n    static fromJS(data: any): FileUploadResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new FileUploadResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"FileUploadId\"] = this.fileUploadId;\n        data[\"Url\"] = this.url;\n        return data;\n    }\n}\n\nexport interface IFileUploadResponse {\n    fileUploadId?: number;\n    url?: string | undefined;\n}\n\nexport class FileRequest implements IFileRequest {\n    data?: string | undefined;\n\n    constructor(data?: IFileRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.data = _data[\"Data\"];\n        }\n    }\n\n    static fromJS(data: any): FileRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new FileRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Data\"] = this.data;\n        return data;\n    }\n}\n\nexport interface IFileRequest {\n    data?: string | undefined;\n}\n\nexport class Filegroup implements IFilegroup {\n    id?: number;\n    type?: string | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n\n    constructor(data?: IFilegroup) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.type = _data[\"Type\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Filegroup {\n        data = typeof data === 'object' ? data : {};\n        let result = new Filegroup();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Type\"] = this.type;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IFilegroup {\n    id?: number;\n    type?: string | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n}\n\nexport class VideoRequest implements IVideoRequest {\n    contentBase64?: string | undefined;\n    thumbnailBase64?: string | undefined;\n\n    constructor(data?: IVideoRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.contentBase64 = _data[\"ContentBase64\"];\n            this.thumbnailBase64 = _data[\"ThumbnailBase64\"];\n        }\n    }\n\n    static fromJS(data: any): VideoRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new VideoRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"ContentBase64\"] = this.contentBase64;\n        data[\"ThumbnailBase64\"] = this.thumbnailBase64;\n        return data;\n    }\n}\n\nexport interface IVideoRequest {\n    contentBase64?: string | undefined;\n    thumbnailBase64?: string | undefined;\n}\n\nexport class SmallCollectionItemResponse implements ISmallCollectionItemResponse {\n    image?: string | undefined;\n    name?: string | undefined;\n    address?: string | undefined;\n    price?: number;\n    isLove?: boolean;\n    type?: PostType;\n    id?: number;\n    bookingCount?: number;\n\n    constructor(data?: ISmallCollectionItemResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.image = _data[\"Image\"];\n            this.name = _data[\"Name\"];\n            this.address = _data[\"Address\"];\n            this.price = _data[\"Price\"];\n            this.isLove = _data[\"IsLove\"];\n            this.type = _data[\"Type\"];\n            this.id = _data[\"Id\"];\n            this.bookingCount = _data[\"BookingCount\"];\n        }\n    }\n\n    static fromJS(data: any): SmallCollectionItemResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new SmallCollectionItemResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Image\"] = this.image;\n        data[\"Name\"] = this.name;\n        data[\"Address\"] = this.address;\n        data[\"Price\"] = this.price;\n        data[\"IsLove\"] = this.isLove;\n        data[\"Type\"] = this.type;\n        data[\"Id\"] = this.id;\n        data[\"BookingCount\"] = this.bookingCount;\n        return data;\n    }\n}\n\nexport interface ISmallCollectionItemResponse {\n    image?: string | undefined;\n    name?: string | undefined;\n    address?: string | undefined;\n    price?: number;\n    isLove?: boolean;\n    type?: PostType;\n    id?: number;\n    bookingCount?: number;\n}\n\nexport enum PostType {\n    Studio = 1,\n    Photographer = 2,\n    Device = 3,\n    Clothes = 4,\n    Makeup = 5,\n    Model = 6,\n}\n\nexport class MediumCollectionItemResponse implements IMediumCollectionItemResponse {\n    id?: number;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    isloved?: boolean;\n    address?: string | undefined;\n    name?: string | undefined;\n    price?: number;\n    priceUnit?: string | undefined;\n    rate?: number;\n    totalRate?: number;\n    type?: PostType;\n    bookingCount?: number;\n    isAuthorized?: boolean;\n    createdDate?: Date;\n\n    constructor(data?: IMediumCollectionItemResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.isloved = _data[\"Isloved\"];\n            this.address = _data[\"Address\"];\n            this.name = _data[\"Name\"];\n            this.price = _data[\"Price\"];\n            this.priceUnit = _data[\"PriceUnit\"];\n            this.rate = _data[\"Rate\"];\n            this.totalRate = _data[\"TotalRate\"];\n            this.type = _data[\"Type\"];\n            this.bookingCount = _data[\"BookingCount\"];\n            this.isAuthorized = _data[\"IsAuthorized\"];\n            this.createdDate = _data[\"CreatedDate\"] ? new Date(_data[\"CreatedDate\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): MediumCollectionItemResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new MediumCollectionItemResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Isloved\"] = this.isloved;\n        data[\"Address\"] = this.address;\n        data[\"Name\"] = this.name;\n        data[\"Price\"] = this.price;\n        data[\"PriceUnit\"] = this.priceUnit;\n        data[\"Rate\"] = this.rate;\n        data[\"TotalRate\"] = this.totalRate;\n        data[\"Type\"] = this.type;\n        data[\"BookingCount\"] = this.bookingCount;\n        data[\"IsAuthorized\"] = this.isAuthorized;\n        data[\"CreatedDate\"] = this.createdDate ? this.createdDate.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IMediumCollectionItemResponse {\n    id?: number;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    isloved?: boolean;\n    address?: string | undefined;\n    name?: string | undefined;\n    price?: number;\n    priceUnit?: string | undefined;\n    rate?: number;\n    totalRate?: number;\n    type?: PostType;\n    bookingCount?: number;\n    isAuthorized?: boolean;\n    createdDate?: Date;\n}\n\nexport class InComingOrderResponse implements IInComingOrderResponse {\n    image?: string | undefined;\n    name?: string | undefined;\n    address?: string | undefined;\n    price?: number;\n    isLove?: boolean;\n    type?: number;\n    status?: string | undefined;\n    dateString?: string | undefined;\n    fromTime?: string | undefined;\n    fromTimeLabel?: string | undefined;\n    toTime?: string | undefined;\n    toTimeLabel?: string | undefined;\n    paymentType?: string | undefined;\n    verify?: string | undefined;\n    orderName?: string | undefined;\n\n    constructor(data?: IInComingOrderResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.image = _data[\"Image\"];\n            this.name = _data[\"Name\"];\n            this.address = _data[\"Address\"];\n            this.price = _data[\"Price\"];\n            this.isLove = _data[\"IsLove\"];\n            this.type = _data[\"Type\"];\n            this.status = _data[\"Status\"];\n            this.dateString = _data[\"DateString\"];\n            this.fromTime = _data[\"FromTime\"];\n            this.fromTimeLabel = _data[\"FromTimeLabel\"];\n            this.toTime = _data[\"ToTime\"];\n            this.toTimeLabel = _data[\"ToTimeLabel\"];\n            this.paymentType = _data[\"PaymentType\"];\n            this.verify = _data[\"Verify\"];\n            this.orderName = _data[\"OrderName\"];\n        }\n    }\n\n    static fromJS(data: any): InComingOrderResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new InComingOrderResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Image\"] = this.image;\n        data[\"Name\"] = this.name;\n        data[\"Address\"] = this.address;\n        data[\"Price\"] = this.price;\n        data[\"IsLove\"] = this.isLove;\n        data[\"Type\"] = this.type;\n        data[\"Status\"] = this.status;\n        data[\"DateString\"] = this.dateString;\n        data[\"FromTime\"] = this.fromTime;\n        data[\"FromTimeLabel\"] = this.fromTimeLabel;\n        data[\"ToTime\"] = this.toTime;\n        data[\"ToTimeLabel\"] = this.toTimeLabel;\n        data[\"PaymentType\"] = this.paymentType;\n        data[\"Verify\"] = this.verify;\n        data[\"OrderName\"] = this.orderName;\n        return data;\n    }\n}\n\nexport interface IInComingOrderResponse {\n    image?: string | undefined;\n    name?: string | undefined;\n    address?: string | undefined;\n    price?: number;\n    isLove?: boolean;\n    type?: number;\n    status?: string | undefined;\n    dateString?: string | undefined;\n    fromTime?: string | undefined;\n    fromTimeLabel?: string | undefined;\n    toTime?: string | undefined;\n    toTimeLabel?: string | undefined;\n    paymentType?: string | undefined;\n    verify?: string | undefined;\n    orderName?: string | undefined;\n}\n\nexport class PostResponse implements IPostResponse {\n    tags?: string | undefined;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    totalLikes?: number;\n    totalComments?: number;\n    bookingUserId?: number;\n    postUserAvatar?: string | undefined;\n    postUserName?: string | undefined;\n    creationTime?: Date;\n\n    constructor(data?: IPostResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.tags = _data[\"Tags\"];\n            this.description = _data[\"Description\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.totalLikes = _data[\"TotalLikes\"];\n            this.totalComments = _data[\"TotalComments\"];\n            this.bookingUserId = _data[\"BookingUserId\"];\n            this.postUserAvatar = _data[\"PostUserAvatar\"];\n            this.postUserName = _data[\"PostUserName\"];\n            this.creationTime = _data[\"CreationTime\"] ? new Date(_data[\"CreationTime\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): PostResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new PostResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Tags\"] = this.tags;\n        data[\"Description\"] = this.description;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"TotalLikes\"] = this.totalLikes;\n        data[\"TotalComments\"] = this.totalComments;\n        data[\"BookingUserId\"] = this.bookingUserId;\n        data[\"PostUserAvatar\"] = this.postUserAvatar;\n        data[\"PostUserName\"] = this.postUserName;\n        data[\"CreationTime\"] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IPostResponse {\n    tags?: string | undefined;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    totalLikes?: number;\n    totalComments?: number;\n    bookingUserId?: number;\n    postUserAvatar?: string | undefined;\n    postUserName?: string | undefined;\n    creationTime?: Date;\n}\n\nexport class Manifest extends FullAuditedEntity implements IManifest {\n    urlDebug?: string | undefined;\n    urlRelease?: string | undefined;\n\n    constructor(data?: IManifest) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.urlDebug = _data[\"UrlDebug\"];\n            this.urlRelease = _data[\"UrlRelease\"];\n        }\n    }\n\n    static fromJS(data: any): Manifest {\n        data = typeof data === 'object' ? data : {};\n        let result = new Manifest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"UrlDebug\"] = this.urlDebug;\n        data[\"UrlRelease\"] = this.urlRelease;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IManifest extends IFullAuditedEntity {\n    urlDebug?: string | undefined;\n    urlRelease?: string | undefined;\n}\n\nexport class Notification extends Entity implements INotification {\n    resourceKey!: string;\n    param1?: string | undefined;\n    paramId1?: number;\n    param2?: string | undefined;\n    paramId2?: number;\n    image?: string | undefined;\n    publishDate?: Date | undefined;\n    userId?: number;\n    isRead?: boolean;\n\n    constructor(data?: INotification) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.resourceKey = _data[\"ResourceKey\"];\n            this.param1 = _data[\"Param1\"];\n            this.paramId1 = _data[\"ParamId1\"];\n            this.param2 = _data[\"Param2\"];\n            this.paramId2 = _data[\"ParamId2\"];\n            this.image = _data[\"Image\"];\n            this.publishDate = _data[\"PublishDate\"] ? new Date(_data[\"PublishDate\"].toString()) : <any>undefined;\n            this.userId = _data[\"UserId\"];\n            this.isRead = _data[\"IsRead\"];\n        }\n    }\n\n    static fromJS(data: any): Notification {\n        data = typeof data === 'object' ? data : {};\n        let result = new Notification();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"ResourceKey\"] = this.resourceKey;\n        data[\"Param1\"] = this.param1;\n        data[\"ParamId1\"] = this.paramId1;\n        data[\"Param2\"] = this.param2;\n        data[\"ParamId2\"] = this.paramId2;\n        data[\"Image\"] = this.image;\n        data[\"PublishDate\"] = this.publishDate ? this.publishDate.toISOString() : <any>undefined;\n        data[\"UserId\"] = this.userId;\n        data[\"IsRead\"] = this.isRead;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface INotification extends IEntity {\n    resourceKey: string;\n    param1?: string | undefined;\n    paramId1?: number;\n    param2?: string | undefined;\n    paramId2?: number;\n    image?: string | undefined;\n    publishDate?: Date | undefined;\n    userId?: number;\n    isRead?: boolean;\n}\n\nexport class NotificationResponse implements INotificationResponse {\n    header?: string | undefined;\n    content?: string | undefined;\n    date?: string | undefined;\n    isRead?: boolean;\n    notificationId?: number;\n    imageUrl?: string | undefined;\n\n    constructor(data?: INotificationResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.header = _data[\"Header\"];\n            this.content = _data[\"Content\"];\n            this.date = _data[\"Date\"];\n            this.isRead = _data[\"IsRead\"];\n            this.notificationId = _data[\"NotificationId\"];\n            this.imageUrl = _data[\"ImageUrl\"];\n        }\n    }\n\n    static fromJS(data: any): NotificationResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new NotificationResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Header\"] = this.header;\n        data[\"Content\"] = this.content;\n        data[\"Date\"] = this.date;\n        data[\"IsRead\"] = this.isRead;\n        data[\"NotificationId\"] = this.notificationId;\n        data[\"ImageUrl\"] = this.imageUrl;\n        return data;\n    }\n}\n\nexport interface INotificationResponse {\n    header?: string | undefined;\n    content?: string | undefined;\n    date?: string | undefined;\n    isRead?: boolean;\n    notificationId?: number;\n    imageUrl?: string | undefined;\n}\n\nexport class PhotographerPost extends FullAuditedEntity implements IPhotographerPost {\n    tenantId?: number | undefined;\n    name!: string;\n    address?: string | undefined;\n    price?: number;\n    sales?: number;\n    bookingCount?: number;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    hourOpenDefault?: number;\n    minutesOpenDefault?: number;\n    hourCloseDefault?: number;\n    minutesCloseDefault?: number;\n    isHotDeal?: boolean;\n    priceUnit?: string | undefined;\n\n    constructor(data?: IPhotographerPost) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.name = _data[\"Name\"];\n            this.address = _data[\"Address\"];\n            this.price = _data[\"Price\"];\n            this.sales = _data[\"Sales\"];\n            this.bookingCount = _data[\"BookingCount\"];\n            this.description = _data[\"Description\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.image7 = _data[\"Image7\"];\n            this.image8 = _data[\"Image8\"];\n            this.image9 = _data[\"Image9\"];\n            this.image10 = _data[\"Image10\"];\n            this.image11 = _data[\"Image11\"];\n            this.image12 = _data[\"Image12\"];\n            this.image13 = _data[\"Image13\"];\n            this.image14 = _data[\"Image14\"];\n            this.image15 = _data[\"Image15\"];\n            this.image16 = _data[\"Image16\"];\n            this.image17 = _data[\"Image17\"];\n            this.image18 = _data[\"Image18\"];\n            this.image19 = _data[\"Image19\"];\n            this.image20 = _data[\"Image20\"];\n            this.hourOpenDefault = _data[\"HourOpenDefault\"];\n            this.minutesOpenDefault = _data[\"MinutesOpenDefault\"];\n            this.hourCloseDefault = _data[\"HourCloseDefault\"];\n            this.minutesCloseDefault = _data[\"MinutesCloseDefault\"];\n            this.isHotDeal = _data[\"IsHotDeal\"];\n            this.priceUnit = _data[\"PriceUnit\"];\n        }\n    }\n\n    static fromJS(data: any): PhotographerPost {\n        data = typeof data === 'object' ? data : {};\n        let result = new PhotographerPost();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Name\"] = this.name;\n        data[\"Address\"] = this.address;\n        data[\"Price\"] = this.price;\n        data[\"Sales\"] = this.sales;\n        data[\"BookingCount\"] = this.bookingCount;\n        data[\"Description\"] = this.description;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"Image7\"] = this.image7;\n        data[\"Image8\"] = this.image8;\n        data[\"Image9\"] = this.image9;\n        data[\"Image10\"] = this.image10;\n        data[\"Image11\"] = this.image11;\n        data[\"Image12\"] = this.image12;\n        data[\"Image13\"] = this.image13;\n        data[\"Image14\"] = this.image14;\n        data[\"Image15\"] = this.image15;\n        data[\"Image16\"] = this.image16;\n        data[\"Image17\"] = this.image17;\n        data[\"Image18\"] = this.image18;\n        data[\"Image19\"] = this.image19;\n        data[\"Image20\"] = this.image20;\n        data[\"HourOpenDefault\"] = this.hourOpenDefault;\n        data[\"MinutesOpenDefault\"] = this.minutesOpenDefault;\n        data[\"HourCloseDefault\"] = this.hourCloseDefault;\n        data[\"MinutesCloseDefault\"] = this.minutesCloseDefault;\n        data[\"IsHotDeal\"] = this.isHotDeal;\n        data[\"PriceUnit\"] = this.priceUnit;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IPhotographerPost extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    name: string;\n    address?: string | undefined;\n    price?: number;\n    sales?: number;\n    bookingCount?: number;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    hourOpenDefault?: number;\n    minutesOpenDefault?: number;\n    hourCloseDefault?: number;\n    minutesCloseDefault?: number;\n    isHotDeal?: boolean;\n    priceUnit?: string | undefined;\n}\n\nexport class PhotographerServicePackage extends FullAuditedEntity implements IPhotographerServicePackage {\n    tenantId?: number | undefined;\n    name!: string;\n    price?: number;\n    sales?: number;\n    priceNote?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    description?: string | undefined;\n    photographerPostId?: number | undefined;\n    photographerPostFk?: PhotographerPost | undefined;\n\n    constructor(data?: IPhotographerServicePackage) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.name = _data[\"Name\"];\n            this.price = _data[\"Price\"];\n            this.sales = _data[\"Sales\"];\n            this.priceNote = _data[\"PriceNote\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.image7 = _data[\"Image7\"];\n            this.image8 = _data[\"Image8\"];\n            this.image9 = _data[\"Image9\"];\n            this.image10 = _data[\"Image10\"];\n            this.image11 = _data[\"Image11\"];\n            this.image12 = _data[\"Image12\"];\n            this.image13 = _data[\"Image13\"];\n            this.image14 = _data[\"Image14\"];\n            this.image15 = _data[\"Image15\"];\n            this.image16 = _data[\"Image16\"];\n            this.image17 = _data[\"Image17\"];\n            this.image18 = _data[\"Image18\"];\n            this.image19 = _data[\"Image19\"];\n            this.image20 = _data[\"Image20\"];\n            this.description = _data[\"Description\"];\n            this.photographerPostId = _data[\"PhotographerPostId\"];\n            this.photographerPostFk = _data[\"PhotographerPostFk\"] ? PhotographerPost.fromJS(_data[\"PhotographerPostFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): PhotographerServicePackage {\n        data = typeof data === 'object' ? data : {};\n        let result = new PhotographerServicePackage();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Name\"] = this.name;\n        data[\"Price\"] = this.price;\n        data[\"Sales\"] = this.sales;\n        data[\"PriceNote\"] = this.priceNote;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"Image7\"] = this.image7;\n        data[\"Image8\"] = this.image8;\n        data[\"Image9\"] = this.image9;\n        data[\"Image10\"] = this.image10;\n        data[\"Image11\"] = this.image11;\n        data[\"Image12\"] = this.image12;\n        data[\"Image13\"] = this.image13;\n        data[\"Image14\"] = this.image14;\n        data[\"Image15\"] = this.image15;\n        data[\"Image16\"] = this.image16;\n        data[\"Image17\"] = this.image17;\n        data[\"Image18\"] = this.image18;\n        data[\"Image19\"] = this.image19;\n        data[\"Image20\"] = this.image20;\n        data[\"Description\"] = this.description;\n        data[\"PhotographerPostId\"] = this.photographerPostId;\n        data[\"PhotographerPostFk\"] = this.photographerPostFk ? this.photographerPostFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IPhotographerServicePackage extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    name: string;\n    price?: number;\n    sales?: number;\n    priceNote?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    description?: string | undefined;\n    photographerPostId?: number | undefined;\n    photographerPostFk?: PhotographerPost | undefined;\n}\n\nexport class PGPromoCode extends FullAuditedEntity implements IPGPromoCode {\n    tenantId?: number | undefined;\n    code!: string;\n    description?: string | undefined;\n    expired?: Date;\n    name?: string | undefined;\n    discountAmount?: number;\n    photographerPostId?: number | undefined;\n    photographerPostFk?: PhotographerPost | undefined;\n    photographerServicePackageId?: number | undefined;\n    photographerServicePackageFk?: PhotographerServicePackage | undefined;\n\n    constructor(data?: IPGPromoCode) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.code = _data[\"Code\"];\n            this.description = _data[\"Description\"];\n            this.expired = _data[\"Expired\"] ? new Date(_data[\"Expired\"].toString()) : <any>undefined;\n            this.name = _data[\"Name\"];\n            this.discountAmount = _data[\"DiscountAmount\"];\n            this.photographerPostId = _data[\"PhotographerPostId\"];\n            this.photographerPostFk = _data[\"PhotographerPostFk\"] ? PhotographerPost.fromJS(_data[\"PhotographerPostFk\"]) : <any>undefined;\n            this.photographerServicePackageId = _data[\"PhotographerServicePackageId\"];\n            this.photographerServicePackageFk = _data[\"PhotographerServicePackageFk\"] ? PhotographerServicePackage.fromJS(_data[\"PhotographerServicePackageFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): PGPromoCode {\n        data = typeof data === 'object' ? data : {};\n        let result = new PGPromoCode();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Code\"] = this.code;\n        data[\"Description\"] = this.description;\n        data[\"Expired\"] = this.expired ? this.expired.toISOString() : <any>undefined;\n        data[\"Name\"] = this.name;\n        data[\"DiscountAmount\"] = this.discountAmount;\n        data[\"PhotographerPostId\"] = this.photographerPostId;\n        data[\"PhotographerPostFk\"] = this.photographerPostFk ? this.photographerPostFk.toJSON() : <any>undefined;\n        data[\"PhotographerServicePackageId\"] = this.photographerServicePackageId;\n        data[\"PhotographerServicePackageFk\"] = this.photographerServicePackageFk ? this.photographerServicePackageFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IPGPromoCode extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    code: string;\n    description?: string | undefined;\n    expired?: Date;\n    name?: string | undefined;\n    discountAmount?: number;\n    photographerPostId?: number | undefined;\n    photographerPostFk?: PhotographerPost | undefined;\n    photographerServicePackageId?: number | undefined;\n    photographerServicePackageFk?: PhotographerServicePackage | undefined;\n}\n\nexport class Photographerorder implements IPhotographerorder {\n    photographerName?: string | undefined;\n    servicePackName?: string | undefined;\n    photographerProvinceName?: string | undefined;\n    photographerAvatar?: string | undefined;\n    paymentTypeName?: string | undefined;\n    price?: number;\n    sales?: number;\n    pricetype?: number;\n    photographerUserId?: number;\n    id?: number;\n    servicepackid?: number;\n    servicepackpriceid?: number;\n    userid?: number;\n    phone?: string | undefined;\n    fullname?: string | undefined;\n    fromdate?: Date | undefined;\n    todate?: Date | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n    status?: number | undefined;\n    cancelreasonid?: number | undefined;\n    otherreason?: string | undefined;\n\n    constructor(data?: IPhotographerorder) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.photographerName = _data[\"PhotographerName\"];\n            this.servicePackName = _data[\"ServicePackName\"];\n            this.photographerProvinceName = _data[\"PhotographerProvinceName\"];\n            this.photographerAvatar = _data[\"PhotographerAvatar\"];\n            this.paymentTypeName = _data[\"PaymentTypeName\"];\n            this.price = _data[\"Price\"];\n            this.sales = _data[\"Sales\"];\n            this.pricetype = _data[\"Pricetype\"];\n            this.photographerUserId = _data[\"PhotographerUserId\"];\n            this.id = _data[\"Id\"];\n            this.servicepackid = _data[\"Servicepackid\"];\n            this.servicepackpriceid = _data[\"Servicepackpriceid\"];\n            this.userid = _data[\"Userid\"];\n            this.phone = _data[\"Phone\"];\n            this.fullname = _data[\"Fullname\"];\n            this.fromdate = _data[\"Fromdate\"] ? new Date(_data[\"Fromdate\"].toString()) : <any>undefined;\n            this.todate = _data[\"Todate\"] ? new Date(_data[\"Todate\"].toString()) : <any>undefined;\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n            this.status = _data[\"Status\"];\n            this.cancelreasonid = _data[\"Cancelreasonid\"];\n            this.otherreason = _data[\"Otherreason\"];\n        }\n    }\n\n    static fromJS(data: any): Photographerorder {\n        data = typeof data === 'object' ? data : {};\n        let result = new Photographerorder();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"PhotographerName\"] = this.photographerName;\n        data[\"ServicePackName\"] = this.servicePackName;\n        data[\"PhotographerProvinceName\"] = this.photographerProvinceName;\n        data[\"PhotographerAvatar\"] = this.photographerAvatar;\n        data[\"PaymentTypeName\"] = this.paymentTypeName;\n        data[\"Price\"] = this.price;\n        data[\"Sales\"] = this.sales;\n        data[\"Pricetype\"] = this.pricetype;\n        data[\"PhotographerUserId\"] = this.photographerUserId;\n        data[\"Id\"] = this.id;\n        data[\"Servicepackid\"] = this.servicepackid;\n        data[\"Servicepackpriceid\"] = this.servicepackpriceid;\n        data[\"Userid\"] = this.userid;\n        data[\"Phone\"] = this.phone;\n        data[\"Fullname\"] = this.fullname;\n        data[\"Fromdate\"] = this.fromdate ? this.fromdate.toISOString() : <any>undefined;\n        data[\"Todate\"] = this.todate ? this.todate.toISOString() : <any>undefined;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        data[\"Status\"] = this.status;\n        data[\"Cancelreasonid\"] = this.cancelreasonid;\n        data[\"Otherreason\"] = this.otherreason;\n        return data;\n    }\n}\n\nexport interface IPhotographerorder {\n    photographerName?: string | undefined;\n    servicePackName?: string | undefined;\n    photographerProvinceName?: string | undefined;\n    photographerAvatar?: string | undefined;\n    paymentTypeName?: string | undefined;\n    price?: number;\n    sales?: number;\n    pricetype?: number;\n    photographerUserId?: number;\n    id?: number;\n    servicepackid?: number;\n    servicepackpriceid?: number;\n    userid?: number;\n    phone?: string | undefined;\n    fullname?: string | undefined;\n    fromdate?: Date | undefined;\n    todate?: Date | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n    status?: number | undefined;\n    cancelreasonid?: number | undefined;\n    otherreason?: string | undefined;\n}\n\nexport class Pricetype implements IPricetype {\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n\n    constructor(data?: IPricetype) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.name = _data[\"Name\"];\n            this.description = _data[\"Description\"];\n        }\n    }\n\n    static fromJS(data: any): Pricetype {\n        data = typeof data === 'object' ? data : {};\n        let result = new Pricetype();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Name\"] = this.name;\n        data[\"Description\"] = this.description;\n        return data;\n    }\n}\n\nexport interface IPricetype {\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n}\n\nexport class User implements IUser {\n    id?: number;\n    usertype?: number;\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    hashpassword?: string | undefined;\n    salt?: string | undefined;\n    fullname?: string | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n    status?: number | undefined;\n    updatedby?: number | undefined;\n    imageurl?: string | undefined;\n    facebookid?: string | undefined;\n    googleemail?: string | undefined;\n    facebooktoken?: string | undefined;\n    facebookfirstname?: string | undefined;\n    facebooklastname?: string | undefined;\n    facebookemail?: string | undefined;\n    facebookpicture?: string | undefined;\n    googlename?: string | undefined;\n    googlepicture?: string | undefined;\n\n    constructor(data?: IUser) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.usertype = _data[\"Usertype\"];\n            this.email = _data[\"Email\"];\n            this.username = _data[\"Username\"];\n            this.phone = _data[\"Phone\"];\n            this.hashpassword = _data[\"Hashpassword\"];\n            this.salt = _data[\"Salt\"];\n            this.fullname = _data[\"Fullname\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n            this.status = _data[\"Status\"];\n            this.updatedby = _data[\"Updatedby\"];\n            this.imageurl = _data[\"Imageurl\"];\n            this.facebookid = _data[\"Facebookid\"];\n            this.googleemail = _data[\"Googleemail\"];\n            this.facebooktoken = _data[\"Facebooktoken\"];\n            this.facebookfirstname = _data[\"Facebookfirstname\"];\n            this.facebooklastname = _data[\"Facebooklastname\"];\n            this.facebookemail = _data[\"Facebookemail\"];\n            this.facebookpicture = _data[\"Facebookpicture\"];\n            this.googlename = _data[\"Googlename\"];\n            this.googlepicture = _data[\"Googlepicture\"];\n        }\n    }\n\n    static fromJS(data: any): User {\n        data = typeof data === 'object' ? data : {};\n        let result = new User();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Usertype\"] = this.usertype;\n        data[\"Email\"] = this.email;\n        data[\"Username\"] = this.username;\n        data[\"Phone\"] = this.phone;\n        data[\"Hashpassword\"] = this.hashpassword;\n        data[\"Salt\"] = this.salt;\n        data[\"Fullname\"] = this.fullname;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        data[\"Status\"] = this.status;\n        data[\"Updatedby\"] = this.updatedby;\n        data[\"Imageurl\"] = this.imageurl;\n        data[\"Facebookid\"] = this.facebookid;\n        data[\"Googleemail\"] = this.googleemail;\n        data[\"Facebooktoken\"] = this.facebooktoken;\n        data[\"Facebookfirstname\"] = this.facebookfirstname;\n        data[\"Facebooklastname\"] = this.facebooklastname;\n        data[\"Facebookemail\"] = this.facebookemail;\n        data[\"Facebookpicture\"] = this.facebookpicture;\n        data[\"Googlename\"] = this.googlename;\n        data[\"Googlepicture\"] = this.googlepicture;\n        return data;\n    }\n}\n\nexport interface IUser {\n    id?: number;\n    usertype?: number;\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    hashpassword?: string | undefined;\n    salt?: string | undefined;\n    fullname?: string | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n    status?: number | undefined;\n    updatedby?: number | undefined;\n    imageurl?: string | undefined;\n    facebookid?: string | undefined;\n    googleemail?: string | undefined;\n    facebooktoken?: string | undefined;\n    facebookfirstname?: string | undefined;\n    facebooklastname?: string | undefined;\n    facebookemail?: string | undefined;\n    facebookpicture?: string | undefined;\n    googlename?: string | undefined;\n    googlepicture?: string | undefined;\n}\n\nexport class ResourceDataResponse implements IResourceDataResponse {\n    key?: string | undefined;\n    value?: string | undefined;\n\n    constructor(data?: IResourceDataResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.key = _data[\"Key\"];\n            this.value = _data[\"Value\"];\n        }\n    }\n\n    static fromJS(data: any): ResourceDataResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new ResourceDataResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Key\"] = this.key;\n        data[\"Value\"] = this.value;\n        return data;\n    }\n}\n\nexport interface IResourceDataResponse {\n    key?: string | undefined;\n    value?: string | undefined;\n}\n\nexport class SearchRequest implements ISearchRequest {\n    priceFrom?: number;\n    priceTo?: number;\n    provinceId?: number;\n    districtIds?: number[] | undefined;\n    categories?: string[] | undefined;\n    priceType?: string | undefined;\n    isOrderByRateCount?: boolean;\n    isOrderByTopRate?: boolean;\n    isOrderByBookingCount?: boolean;\n\n    constructor(data?: ISearchRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.priceFrom = _data[\"PriceFrom\"];\n            this.priceTo = _data[\"PriceTo\"];\n            this.provinceId = _data[\"ProvinceId\"];\n            if (Array.isArray(_data[\"DistrictIds\"])) {\n                this.districtIds = [] as any;\n                for (let item of _data[\"DistrictIds\"])\n                    this.districtIds!.push(item);\n            }\n            if (Array.isArray(_data[\"Categories\"])) {\n                this.categories = [] as any;\n                for (let item of _data[\"Categories\"])\n                    this.categories!.push(item);\n            }\n            this.priceType = _data[\"PriceType\"];\n            this.isOrderByRateCount = _data[\"IsOrderByRateCount\"];\n            this.isOrderByTopRate = _data[\"IsOrderByTopRate\"];\n            this.isOrderByBookingCount = _data[\"IsOrderByBookingCount\"];\n        }\n    }\n\n    static fromJS(data: any): SearchRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new SearchRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"PriceFrom\"] = this.priceFrom;\n        data[\"PriceTo\"] = this.priceTo;\n        data[\"ProvinceId\"] = this.provinceId;\n        if (Array.isArray(this.districtIds)) {\n            data[\"DistrictIds\"] = [];\n            for (let item of this.districtIds)\n                data[\"DistrictIds\"].push(item);\n        }\n        if (Array.isArray(this.categories)) {\n            data[\"Categories\"] = [];\n            for (let item of this.categories)\n                data[\"Categories\"].push(item);\n        }\n        data[\"PriceType\"] = this.priceType;\n        data[\"IsOrderByRateCount\"] = this.isOrderByRateCount;\n        data[\"IsOrderByTopRate\"] = this.isOrderByTopRate;\n        data[\"IsOrderByBookingCount\"] = this.isOrderByBookingCount;\n        return data;\n    }\n}\n\nexport interface ISearchRequest {\n    priceFrom?: number;\n    priceTo?: number;\n    provinceId?: number;\n    districtIds?: number[] | undefined;\n    categories?: string[] | undefined;\n    priceType?: string | undefined;\n    isOrderByRateCount?: boolean;\n    isOrderByTopRate?: boolean;\n    isOrderByBookingCount?: boolean;\n}\n\nexport class Servicepack implements IServicepack {\n    fileImages?: Uploadfile[] | undefined;\n    fileVideos?: Uploadfile[] | undefined;\n    servicePackPrices?: Servicepackprice[] | undefined;\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    imagegroupid?: number | undefined;\n    videogroupid?: number | undefined;\n    owner?: number | undefined;\n    isedited?: number | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n\n    constructor(data?: IServicepack) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"FileImages\"])) {\n                this.fileImages = [] as any;\n                for (let item of _data[\"FileImages\"])\n                    this.fileImages!.push(Uploadfile.fromJS(item));\n            }\n            if (Array.isArray(_data[\"FileVideos\"])) {\n                this.fileVideos = [] as any;\n                for (let item of _data[\"FileVideos\"])\n                    this.fileVideos!.push(Uploadfile.fromJS(item));\n            }\n            if (Array.isArray(_data[\"ServicePackPrices\"])) {\n                this.servicePackPrices = [] as any;\n                for (let item of _data[\"ServicePackPrices\"])\n                    this.servicePackPrices!.push(Servicepackprice.fromJS(item));\n            }\n            this.id = _data[\"Id\"];\n            this.name = _data[\"Name\"];\n            this.description = _data[\"Description\"];\n            this.imagegroupid = _data[\"Imagegroupid\"];\n            this.videogroupid = _data[\"Videogroupid\"];\n            this.owner = _data[\"Owner\"];\n            this.isedited = _data[\"Isedited\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Servicepack {\n        data = typeof data === 'object' ? data : {};\n        let result = new Servicepack();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.fileImages)) {\n            data[\"FileImages\"] = [];\n            for (let item of this.fileImages)\n                data[\"FileImages\"].push(item.toJSON());\n        }\n        if (Array.isArray(this.fileVideos)) {\n            data[\"FileVideos\"] = [];\n            for (let item of this.fileVideos)\n                data[\"FileVideos\"].push(item.toJSON());\n        }\n        if (Array.isArray(this.servicePackPrices)) {\n            data[\"ServicePackPrices\"] = [];\n            for (let item of this.servicePackPrices)\n                data[\"ServicePackPrices\"].push(item.toJSON());\n        }\n        data[\"Id\"] = this.id;\n        data[\"Name\"] = this.name;\n        data[\"Description\"] = this.description;\n        data[\"Imagegroupid\"] = this.imagegroupid;\n        data[\"Videogroupid\"] = this.videogroupid;\n        data[\"Owner\"] = this.owner;\n        data[\"Isedited\"] = this.isedited;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IServicepack {\n    fileImages?: Uploadfile[] | undefined;\n    fileVideos?: Uploadfile[] | undefined;\n    servicePackPrices?: Servicepackprice[] | undefined;\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    imagegroupid?: number | undefined;\n    videogroupid?: number | undefined;\n    owner?: number | undefined;\n    isedited?: number | undefined;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n}\n\nexport class Servicepackprice implements IServicepackprice {\n    id?: number;\n    servicepackid?: number;\n    days?: string | undefined;\n    price?: number;\n    ismin?: number | undefined;\n    sales?: number;\n    pricetype?: number;\n    servicepaymenttype?: number;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n\n    constructor(data?: IServicepackprice) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.servicepackid = _data[\"Servicepackid\"];\n            this.days = _data[\"Days\"];\n            this.price = _data[\"Price\"];\n            this.ismin = _data[\"Ismin\"];\n            this.sales = _data[\"Sales\"];\n            this.pricetype = _data[\"Pricetype\"];\n            this.servicepaymenttype = _data[\"Servicepaymenttype\"];\n            this.createddate = _data[\"Createddate\"] ? new Date(_data[\"Createddate\"].toString()) : <any>undefined;\n            this.updateddate = _data[\"Updateddate\"] ? new Date(_data[\"Updateddate\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): Servicepackprice {\n        data = typeof data === 'object' ? data : {};\n        let result = new Servicepackprice();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Servicepackid\"] = this.servicepackid;\n        data[\"Days\"] = this.days;\n        data[\"Price\"] = this.price;\n        data[\"Ismin\"] = this.ismin;\n        data[\"Sales\"] = this.sales;\n        data[\"Pricetype\"] = this.pricetype;\n        data[\"Servicepaymenttype\"] = this.servicepaymenttype;\n        data[\"Createddate\"] = this.createddate ? this.createddate.toISOString() : <any>undefined;\n        data[\"Updateddate\"] = this.updateddate ? this.updateddate.toISOString() : <any>undefined;\n        return data;\n    }\n}\n\nexport interface IServicepackprice {\n    id?: number;\n    servicepackid?: number;\n    days?: string | undefined;\n    price?: number;\n    ismin?: number | undefined;\n    sales?: number;\n    pricetype?: number;\n    servicepaymenttype?: number;\n    createddate?: Date | undefined;\n    updateddate?: Date | undefined;\n}\n\nexport class Servicepaymenttype implements IServicepaymenttype {\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n\n    constructor(data?: IServicepaymenttype) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.name = _data[\"Name\"];\n            this.description = _data[\"Description\"];\n        }\n    }\n\n    static fromJS(data: any): Servicepaymenttype {\n        data = typeof data === 'object' ? data : {};\n        let result = new Servicepaymenttype();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Name\"] = this.name;\n        data[\"Description\"] = this.description;\n        return data;\n    }\n}\n\nexport interface IServicepaymenttype {\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n}\n\nexport class Specialday implements ISpecialday {\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n\n    constructor(data?: ISpecialday) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"Id\"];\n            this.name = _data[\"Name\"];\n            this.description = _data[\"Description\"];\n        }\n    }\n\n    static fromJS(data: any): Specialday {\n        data = typeof data === 'object' ? data : {};\n        let result = new Specialday();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Id\"] = this.id;\n        data[\"Name\"] = this.name;\n        data[\"Description\"] = this.description;\n        return data;\n    }\n}\n\nexport interface ISpecialday {\n    id?: number;\n    name?: string | undefined;\n    description?: string | undefined;\n}\n\nexport class StudioPost extends FullAuditedEntity implements IStudioPost {\n    tenantId?: number | undefined;\n    name!: string;\n    address!: string;\n    latitude?: number;\n    longtitude?: number;\n    price?: number;\n    sales?: number;\n    priceUnit?: string | undefined;\n    bookingCount?: number;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    hourOpenDefault?: number;\n    minutesOpenDefault?: number;\n    hourCloseDefault?: number;\n    minutesCloseDefault?: number;\n    isHotDeal?: boolean;\n\n    constructor(data?: IStudioPost) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.name = _data[\"Name\"];\n            this.address = _data[\"Address\"];\n            this.latitude = _data[\"Latitude\"];\n            this.longtitude = _data[\"Longtitude\"];\n            this.price = _data[\"Price\"];\n            this.sales = _data[\"Sales\"];\n            this.priceUnit = _data[\"PriceUnit\"];\n            this.bookingCount = _data[\"BookingCount\"];\n            this.description = _data[\"Description\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.image7 = _data[\"Image7\"];\n            this.image8 = _data[\"Image8\"];\n            this.image9 = _data[\"Image9\"];\n            this.image10 = _data[\"Image10\"];\n            this.image11 = _data[\"Image11\"];\n            this.image12 = _data[\"Image12\"];\n            this.image13 = _data[\"Image13\"];\n            this.image14 = _data[\"Image14\"];\n            this.image15 = _data[\"Image15\"];\n            this.image16 = _data[\"Image16\"];\n            this.image17 = _data[\"Image17\"];\n            this.image18 = _data[\"Image18\"];\n            this.image19 = _data[\"Image19\"];\n            this.image20 = _data[\"Image20\"];\n            this.hourOpenDefault = _data[\"HourOpenDefault\"];\n            this.minutesOpenDefault = _data[\"MinutesOpenDefault\"];\n            this.hourCloseDefault = _data[\"HourCloseDefault\"];\n            this.minutesCloseDefault = _data[\"MinutesCloseDefault\"];\n            this.isHotDeal = _data[\"IsHotDeal\"];\n        }\n    }\n\n    static fromJS(data: any): StudioPost {\n        data = typeof data === 'object' ? data : {};\n        let result = new StudioPost();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Name\"] = this.name;\n        data[\"Address\"] = this.address;\n        data[\"Latitude\"] = this.latitude;\n        data[\"Longtitude\"] = this.longtitude;\n        data[\"Price\"] = this.price;\n        data[\"Sales\"] = this.sales;\n        data[\"PriceUnit\"] = this.priceUnit;\n        data[\"BookingCount\"] = this.bookingCount;\n        data[\"Description\"] = this.description;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"Image7\"] = this.image7;\n        data[\"Image8\"] = this.image8;\n        data[\"Image9\"] = this.image9;\n        data[\"Image10\"] = this.image10;\n        data[\"Image11\"] = this.image11;\n        data[\"Image12\"] = this.image12;\n        data[\"Image13\"] = this.image13;\n        data[\"Image14\"] = this.image14;\n        data[\"Image15\"] = this.image15;\n        data[\"Image16\"] = this.image16;\n        data[\"Image17\"] = this.image17;\n        data[\"Image18\"] = this.image18;\n        data[\"Image19\"] = this.image19;\n        data[\"Image20\"] = this.image20;\n        data[\"HourOpenDefault\"] = this.hourOpenDefault;\n        data[\"MinutesOpenDefault\"] = this.minutesOpenDefault;\n        data[\"HourCloseDefault\"] = this.hourCloseDefault;\n        data[\"MinutesCloseDefault\"] = this.minutesCloseDefault;\n        data[\"IsHotDeal\"] = this.isHotDeal;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IStudioPost extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    name: string;\n    address: string;\n    latitude?: number;\n    longtitude?: number;\n    price?: number;\n    sales?: number;\n    priceUnit?: string | undefined;\n    bookingCount?: number;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    hourOpenDefault?: number;\n    minutesOpenDefault?: number;\n    hourCloseDefault?: number;\n    minutesCloseDefault?: number;\n    isHotDeal?: boolean;\n}\n\nexport class StudioRoom extends FullAuditedEntity implements IStudioRoom {\n    tenantId?: number | undefined;\n    name!: string;\n    area!: string;\n    style?: string | undefined;\n    description?: string | undefined;\n    price?: number;\n    sales?: number;\n    priceNote?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    studioPostId?: number | undefined;\n    studioPostFk?: StudioPost | undefined;\n\n    constructor(data?: IStudioRoom) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.name = _data[\"Name\"];\n            this.area = _data[\"Area\"];\n            this.style = _data[\"Style\"];\n            this.description = _data[\"Description\"];\n            this.price = _data[\"Price\"];\n            this.sales = _data[\"Sales\"];\n            this.priceNote = _data[\"PriceNote\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.image7 = _data[\"Image7\"];\n            this.image8 = _data[\"Image8\"];\n            this.image9 = _data[\"Image9\"];\n            this.image10 = _data[\"Image10\"];\n            this.image11 = _data[\"Image11\"];\n            this.image12 = _data[\"Image12\"];\n            this.image13 = _data[\"Image13\"];\n            this.image14 = _data[\"Image14\"];\n            this.image15 = _data[\"Image15\"];\n            this.image16 = _data[\"Image16\"];\n            this.image17 = _data[\"Image17\"];\n            this.image18 = _data[\"Image18\"];\n            this.image19 = _data[\"Image19\"];\n            this.image20 = _data[\"Image20\"];\n            this.studioPostId = _data[\"StudioPostId\"];\n            this.studioPostFk = _data[\"StudioPostFk\"] ? StudioPost.fromJS(_data[\"StudioPostFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): StudioRoom {\n        data = typeof data === 'object' ? data : {};\n        let result = new StudioRoom();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Name\"] = this.name;\n        data[\"Area\"] = this.area;\n        data[\"Style\"] = this.style;\n        data[\"Description\"] = this.description;\n        data[\"Price\"] = this.price;\n        data[\"Sales\"] = this.sales;\n        data[\"PriceNote\"] = this.priceNote;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"Image7\"] = this.image7;\n        data[\"Image8\"] = this.image8;\n        data[\"Image9\"] = this.image9;\n        data[\"Image10\"] = this.image10;\n        data[\"Image11\"] = this.image11;\n        data[\"Image12\"] = this.image12;\n        data[\"Image13\"] = this.image13;\n        data[\"Image14\"] = this.image14;\n        data[\"Image15\"] = this.image15;\n        data[\"Image16\"] = this.image16;\n        data[\"Image17\"] = this.image17;\n        data[\"Image18\"] = this.image18;\n        data[\"Image19\"] = this.image19;\n        data[\"Image20\"] = this.image20;\n        data[\"StudioPostId\"] = this.studioPostId;\n        data[\"StudioPostFk\"] = this.studioPostFk ? this.studioPostFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IStudioRoom extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    name: string;\n    area: string;\n    style?: string | undefined;\n    description?: string | undefined;\n    price?: number;\n    sales?: number;\n    priceNote?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    image11?: string | undefined;\n    image12?: string | undefined;\n    image13?: string | undefined;\n    image14?: string | undefined;\n    image15?: string | undefined;\n    image16?: string | undefined;\n    image17?: string | undefined;\n    image18?: string | undefined;\n    image19?: string | undefined;\n    image20?: string | undefined;\n    studioPostId?: number | undefined;\n    studioPostFk?: StudioPost | undefined;\n}\n\nexport class PromoCode extends FullAuditedEntity implements IPromoCode {\n    tenantId?: number | undefined;\n    code!: string;\n    description?: string | undefined;\n    expired?: Date;\n    name?: string | undefined;\n    discountAmount?: number;\n    studioPostId?: number | undefined;\n    studioPostFk?: StudioPost | undefined;\n    studioRoomId?: number | undefined;\n    studioRoomFk?: StudioRoom | undefined;\n\n    constructor(data?: IPromoCode) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.code = _data[\"Code\"];\n            this.description = _data[\"Description\"];\n            this.expired = _data[\"Expired\"] ? new Date(_data[\"Expired\"].toString()) : <any>undefined;\n            this.name = _data[\"Name\"];\n            this.discountAmount = _data[\"DiscountAmount\"];\n            this.studioPostId = _data[\"StudioPostId\"];\n            this.studioPostFk = _data[\"StudioPostFk\"] ? StudioPost.fromJS(_data[\"StudioPostFk\"]) : <any>undefined;\n            this.studioRoomId = _data[\"StudioRoomId\"];\n            this.studioRoomFk = _data[\"StudioRoomFk\"] ? StudioRoom.fromJS(_data[\"StudioRoomFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): PromoCode {\n        data = typeof data === 'object' ? data : {};\n        let result = new PromoCode();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Code\"] = this.code;\n        data[\"Description\"] = this.description;\n        data[\"Expired\"] = this.expired ? this.expired.toISOString() : <any>undefined;\n        data[\"Name\"] = this.name;\n        data[\"DiscountAmount\"] = this.discountAmount;\n        data[\"StudioPostId\"] = this.studioPostId;\n        data[\"StudioPostFk\"] = this.studioPostFk ? this.studioPostFk.toJSON() : <any>undefined;\n        data[\"StudioRoomId\"] = this.studioRoomId;\n        data[\"StudioRoomFk\"] = this.studioRoomFk ? this.studioRoomFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IPromoCode extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    code: string;\n    description?: string | undefined;\n    expired?: Date;\n    name?: string | undefined;\n    discountAmount?: number;\n    studioPostId?: number | undefined;\n    studioPostFk?: StudioPost | undefined;\n    studioRoomId?: number | undefined;\n    studioRoomFk?: StudioRoom | undefined;\n}\n\nexport class StudioBooking extends FullAuditedEntity implements IStudioBooking {\n    tenantId?: number | undefined;\n    orderByTime?: boolean;\n    orderByTimeFrom?: Date;\n    orderByTimeTo?: Date;\n    orderByDateFrom?: Date;\n    orderByDateTo?: Date;\n    paymentType?: string | undefined;\n    orderNote?: string | undefined;\n    bookingUserName?: string | undefined;\n    bookingPhone?: string | undefined;\n    bookingEmail?: string | undefined;\n    evidenceImage?: string | undefined;\n    isPayDeposit?: boolean;\n    studioRoomId?: number | undefined;\n    studioRoomFk?: StudioRoom | undefined;\n    bookingUserId?: number | undefined;\n    bookingUserFk?: BookingUser | undefined;\n    promoCodeId?: number | undefined;\n    promoCodeFk?: PromoCode | undefined;\n\n    constructor(data?: IStudioBooking) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.tenantId = _data[\"TenantId\"];\n            this.orderByTime = _data[\"OrderByTime\"];\n            this.orderByTimeFrom = _data[\"OrderByTimeFrom\"] ? new Date(_data[\"OrderByTimeFrom\"].toString()) : <any>undefined;\n            this.orderByTimeTo = _data[\"OrderByTimeTo\"] ? new Date(_data[\"OrderByTimeTo\"].toString()) : <any>undefined;\n            this.orderByDateFrom = _data[\"OrderByDateFrom\"] ? new Date(_data[\"OrderByDateFrom\"].toString()) : <any>undefined;\n            this.orderByDateTo = _data[\"OrderByDateTo\"] ? new Date(_data[\"OrderByDateTo\"].toString()) : <any>undefined;\n            this.paymentType = _data[\"PaymentType\"];\n            this.orderNote = _data[\"OrderNote\"];\n            this.bookingUserName = _data[\"BookingUserName\"];\n            this.bookingPhone = _data[\"BookingPhone\"];\n            this.bookingEmail = _data[\"BookingEmail\"];\n            this.evidenceImage = _data[\"EvidenceImage\"];\n            this.isPayDeposit = _data[\"IsPayDeposit\"];\n            this.studioRoomId = _data[\"StudioRoomId\"];\n            this.studioRoomFk = _data[\"StudioRoomFk\"] ? StudioRoom.fromJS(_data[\"StudioRoomFk\"]) : <any>undefined;\n            this.bookingUserId = _data[\"BookingUserId\"];\n            this.bookingUserFk = _data[\"BookingUserFk\"] ? BookingUser.fromJS(_data[\"BookingUserFk\"]) : <any>undefined;\n            this.promoCodeId = _data[\"PromoCodeId\"];\n            this.promoCodeFk = _data[\"PromoCodeFk\"] ? PromoCode.fromJS(_data[\"PromoCodeFk\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): StudioBooking {\n        data = typeof data === 'object' ? data : {};\n        let result = new StudioBooking();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"TenantId\"] = this.tenantId;\n        data[\"OrderByTime\"] = this.orderByTime;\n        data[\"OrderByTimeFrom\"] = this.orderByTimeFrom ? this.orderByTimeFrom.toISOString() : <any>undefined;\n        data[\"OrderByTimeTo\"] = this.orderByTimeTo ? this.orderByTimeTo.toISOString() : <any>undefined;\n        data[\"OrderByDateFrom\"] = this.orderByDateFrom ? this.orderByDateFrom.toISOString() : <any>undefined;\n        data[\"OrderByDateTo\"] = this.orderByDateTo ? this.orderByDateTo.toISOString() : <any>undefined;\n        data[\"PaymentType\"] = this.paymentType;\n        data[\"OrderNote\"] = this.orderNote;\n        data[\"BookingUserName\"] = this.bookingUserName;\n        data[\"BookingPhone\"] = this.bookingPhone;\n        data[\"BookingEmail\"] = this.bookingEmail;\n        data[\"EvidenceImage\"] = this.evidenceImage;\n        data[\"IsPayDeposit\"] = this.isPayDeposit;\n        data[\"StudioRoomId\"] = this.studioRoomId;\n        data[\"StudioRoomFk\"] = this.studioRoomFk ? this.studioRoomFk.toJSON() : <any>undefined;\n        data[\"BookingUserId\"] = this.bookingUserId;\n        data[\"BookingUserFk\"] = this.bookingUserFk ? this.bookingUserFk.toJSON() : <any>undefined;\n        data[\"PromoCodeId\"] = this.promoCodeId;\n        data[\"PromoCodeFk\"] = this.promoCodeFk ? this.promoCodeFk.toJSON() : <any>undefined;\n        super.toJSON(data);\n        return data;\n    }\n}\n\nexport interface IStudioBooking extends IFullAuditedEntity {\n    tenantId?: number | undefined;\n    orderByTime?: boolean;\n    orderByTimeFrom?: Date;\n    orderByTimeTo?: Date;\n    orderByDateFrom?: Date;\n    orderByDateTo?: Date;\n    paymentType?: string | undefined;\n    orderNote?: string | undefined;\n    bookingUserName?: string | undefined;\n    bookingPhone?: string | undefined;\n    bookingEmail?: string | undefined;\n    evidenceImage?: string | undefined;\n    isPayDeposit?: boolean;\n    studioRoomId?: number | undefined;\n    studioRoomFk?: StudioRoom | undefined;\n    bookingUserId?: number | undefined;\n    bookingUserFk?: BookingUser | undefined;\n    promoCodeId?: number | undefined;\n    promoCodeFk?: PromoCode | undefined;\n}\n\nexport class UploadEvidenceImageRequest implements IUploadEvidenceImageRequest {\n    studioBookingId?: number;\n    imageBase64?: string | undefined;\n\n    constructor(data?: IUploadEvidenceImageRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.studioBookingId = _data[\"StudioBookingId\"];\n            this.imageBase64 = _data[\"ImageBase64\"];\n        }\n    }\n\n    static fromJS(data: any): UploadEvidenceImageRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new UploadEvidenceImageRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"StudioBookingId\"] = this.studioBookingId;\n        data[\"ImageBase64\"] = this.imageBase64;\n        return data;\n    }\n}\n\nexport interface IUploadEvidenceImageRequest {\n    studioBookingId?: number;\n    imageBase64?: string | undefined;\n}\n\nexport class StudioRatingResponse implements IStudioRatingResponse {\n    userRateName?: string | undefined;\n    userRateAvatar?: string | undefined;\n    id?: number;\n    tenantId?: number | undefined;\n    rate?: number;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    video1?: string | undefined;\n    video2?: string | undefined;\n    video3?: string | undefined;\n    video4?: string | undefined;\n    video5?: string | undefined;\n    video6?: string | undefined;\n    video7?: string | undefined;\n    video8?: string | undefined;\n    video9?: string | undefined;\n    video10?: string | undefined;\n    replyComment?: string | undefined;\n    isAnonymous?: boolean;\n    videoThumb1?: string | undefined;\n    videoThumb2?: string | undefined;\n    videoThumb3?: string | undefined;\n    videoThumb4?: string | undefined;\n    videoThumb5?: string | undefined;\n    videoThumb6?: string | undefined;\n    videoThumb7?: string | undefined;\n    videoThumb8?: string | undefined;\n    videoThumb9?: string | undefined;\n    videoThumb10?: string | undefined;\n    studioReply?: string | undefined;\n    bookingUserId?: number | undefined;\n    studioPostId?: number | undefined;\n    studioRoomId?: number | undefined;\n\n    constructor(data?: IStudioRatingResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.userRateName = _data[\"UserRateName\"];\n            this.userRateAvatar = _data[\"UserRateAvatar\"];\n            this.id = _data[\"Id\"];\n            this.tenantId = _data[\"TenantId\"];\n            this.rate = _data[\"Rate\"];\n            this.description = _data[\"Description\"];\n            this.image1 = _data[\"Image1\"];\n            this.image2 = _data[\"Image2\"];\n            this.image3 = _data[\"Image3\"];\n            this.image4 = _data[\"Image4\"];\n            this.image5 = _data[\"Image5\"];\n            this.image6 = _data[\"Image6\"];\n            this.image7 = _data[\"Image7\"];\n            this.image8 = _data[\"Image8\"];\n            this.image9 = _data[\"Image9\"];\n            this.image10 = _data[\"Image10\"];\n            this.video1 = _data[\"Video1\"];\n            this.video2 = _data[\"Video2\"];\n            this.video3 = _data[\"Video3\"];\n            this.video4 = _data[\"Video4\"];\n            this.video5 = _data[\"Video5\"];\n            this.video6 = _data[\"Video6\"];\n            this.video7 = _data[\"Video7\"];\n            this.video8 = _data[\"Video8\"];\n            this.video9 = _data[\"Video9\"];\n            this.video10 = _data[\"Video10\"];\n            this.replyComment = _data[\"ReplyComment\"];\n            this.isAnonymous = _data[\"IsAnonymous\"];\n            this.videoThumb1 = _data[\"VideoThumb1\"];\n            this.videoThumb2 = _data[\"VideoThumb2\"];\n            this.videoThumb3 = _data[\"VideoThumb3\"];\n            this.videoThumb4 = _data[\"VideoThumb4\"];\n            this.videoThumb5 = _data[\"VideoThumb5\"];\n            this.videoThumb6 = _data[\"VideoThumb6\"];\n            this.videoThumb7 = _data[\"VideoThumb7\"];\n            this.videoThumb8 = _data[\"VideoThumb8\"];\n            this.videoThumb9 = _data[\"VideoThumb9\"];\n            this.videoThumb10 = _data[\"VideoThumb10\"];\n            this.studioReply = _data[\"StudioReply\"];\n            this.bookingUserId = _data[\"BookingUserId\"];\n            this.studioPostId = _data[\"StudioPostId\"];\n            this.studioRoomId = _data[\"StudioRoomId\"];\n        }\n    }\n\n    static fromJS(data: any): StudioRatingResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new StudioRatingResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"UserRateName\"] = this.userRateName;\n        data[\"UserRateAvatar\"] = this.userRateAvatar;\n        data[\"Id\"] = this.id;\n        data[\"TenantId\"] = this.tenantId;\n        data[\"Rate\"] = this.rate;\n        data[\"Description\"] = this.description;\n        data[\"Image1\"] = this.image1;\n        data[\"Image2\"] = this.image2;\n        data[\"Image3\"] = this.image3;\n        data[\"Image4\"] = this.image4;\n        data[\"Image5\"] = this.image5;\n        data[\"Image6\"] = this.image6;\n        data[\"Image7\"] = this.image7;\n        data[\"Image8\"] = this.image8;\n        data[\"Image9\"] = this.image9;\n        data[\"Image10\"] = this.image10;\n        data[\"Video1\"] = this.video1;\n        data[\"Video2\"] = this.video2;\n        data[\"Video3\"] = this.video3;\n        data[\"Video4\"] = this.video4;\n        data[\"Video5\"] = this.video5;\n        data[\"Video6\"] = this.video6;\n        data[\"Video7\"] = this.video7;\n        data[\"Video8\"] = this.video8;\n        data[\"Video9\"] = this.video9;\n        data[\"Video10\"] = this.video10;\n        data[\"ReplyComment\"] = this.replyComment;\n        data[\"IsAnonymous\"] = this.isAnonymous;\n        data[\"VideoThumb1\"] = this.videoThumb1;\n        data[\"VideoThumb2\"] = this.videoThumb2;\n        data[\"VideoThumb3\"] = this.videoThumb3;\n        data[\"VideoThumb4\"] = this.videoThumb4;\n        data[\"VideoThumb5\"] = this.videoThumb5;\n        data[\"VideoThumb6\"] = this.videoThumb6;\n        data[\"VideoThumb7\"] = this.videoThumb7;\n        data[\"VideoThumb8\"] = this.videoThumb8;\n        data[\"VideoThumb9\"] = this.videoThumb9;\n        data[\"VideoThumb10\"] = this.videoThumb10;\n        data[\"StudioReply\"] = this.studioReply;\n        data[\"BookingUserId\"] = this.bookingUserId;\n        data[\"StudioPostId\"] = this.studioPostId;\n        data[\"StudioRoomId\"] = this.studioRoomId;\n        return data;\n    }\n}\n\nexport interface IStudioRatingResponse {\n    userRateName?: string | undefined;\n    userRateAvatar?: string | undefined;\n    id?: number;\n    tenantId?: number | undefined;\n    rate?: number;\n    description?: string | undefined;\n    image1?: string | undefined;\n    image2?: string | undefined;\n    image3?: string | undefined;\n    image4?: string | undefined;\n    image5?: string | undefined;\n    image6?: string | undefined;\n    image7?: string | undefined;\n    image8?: string | undefined;\n    image9?: string | undefined;\n    image10?: string | undefined;\n    video1?: string | undefined;\n    video2?: string | undefined;\n    video3?: string | undefined;\n    video4?: string | undefined;\n    video5?: string | undefined;\n    video6?: string | undefined;\n    video7?: string | undefined;\n    video8?: string | undefined;\n    video9?: string | undefined;\n    video10?: string | undefined;\n    replyComment?: string | undefined;\n    isAnonymous?: boolean;\n    videoThumb1?: string | undefined;\n    videoThumb2?: string | undefined;\n    videoThumb3?: string | undefined;\n    videoThumb4?: string | undefined;\n    videoThumb5?: string | undefined;\n    videoThumb6?: string | undefined;\n    videoThumb7?: string | undefined;\n    videoThumb8?: string | undefined;\n    videoThumb9?: string | undefined;\n    videoThumb10?: string | undefined;\n    studioReply?: string | undefined;\n    bookingUserId?: number | undefined;\n    studioPostId?: number | undefined;\n    studioRoomId?: number | undefined;\n}\n\nexport class UserRegisterRequest implements IUserRegisterRequest {\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    companyname?: string | undefined;\n    fullname?: string | undefined;\n    experience?: string | undefined;\n    website?: string | undefined;\n    password?: string | undefined;\n    rePassword?: string | undefined;\n    userType?: number;\n\n    constructor(data?: IUserRegisterRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.email = _data[\"Email\"];\n            this.username = _data[\"Username\"];\n            this.phone = _data[\"Phone\"];\n            this.companyname = _data[\"Companyname\"];\n            this.fullname = _data[\"Fullname\"];\n            this.experience = _data[\"Experience\"];\n            this.website = _data[\"Website\"];\n            this.password = _data[\"Password\"];\n            this.rePassword = _data[\"RePassword\"];\n            this.userType = _data[\"UserType\"];\n        }\n    }\n\n    static fromJS(data: any): UserRegisterRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserRegisterRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Email\"] = this.email;\n        data[\"Username\"] = this.username;\n        data[\"Phone\"] = this.phone;\n        data[\"Companyname\"] = this.companyname;\n        data[\"Fullname\"] = this.fullname;\n        data[\"Experience\"] = this.experience;\n        data[\"Website\"] = this.website;\n        data[\"Password\"] = this.password;\n        data[\"RePassword\"] = this.rePassword;\n        data[\"UserType\"] = this.userType;\n        return data;\n    }\n}\n\nexport interface IUserRegisterRequest {\n    email?: string | undefined;\n    username?: string | undefined;\n    phone?: string | undefined;\n    companyname?: string | undefined;\n    fullname?: string | undefined;\n    experience?: string | undefined;\n    website?: string | undefined;\n    password?: string | undefined;\n    rePassword?: string | undefined;\n    userType?: number;\n}\n\nexport class UserChangePasswordResponse implements IUserChangePasswordResponse {\n    title?: string | undefined;\n    description?: string | undefined;\n    isSuccess?: boolean;\n\n    constructor(data?: IUserChangePasswordResponse) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.title = _data[\"Title\"];\n            this.description = _data[\"Description\"];\n            this.isSuccess = _data[\"IsSuccess\"];\n        }\n    }\n\n    static fromJS(data: any): UserChangePasswordResponse {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserChangePasswordResponse();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Title\"] = this.title;\n        data[\"Description\"] = this.description;\n        data[\"IsSuccess\"] = this.isSuccess;\n        return data;\n    }\n}\n\nexport interface IUserChangePasswordResponse {\n    title?: string | undefined;\n    description?: string | undefined;\n    isSuccess?: boolean;\n}\n\nexport class UserChangePasswordRequest implements IUserChangePasswordRequest {\n    password?: string | undefined;\n    userId?: number;\n    newPassword?: string | undefined;\n    requireOldPassword?: boolean;\n    phone?: string | undefined;\n\n    constructor(data?: IUserChangePasswordRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.password = _data[\"Password\"];\n            this.userId = _data[\"UserId\"];\n            this.newPassword = _data[\"NewPassword\"];\n            this.requireOldPassword = _data[\"RequireOldPassword\"];\n            this.phone = _data[\"Phone\"];\n        }\n    }\n\n    static fromJS(data: any): UserChangePasswordRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserChangePasswordRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Password\"] = this.password;\n        data[\"UserId\"] = this.userId;\n        data[\"NewPassword\"] = this.newPassword;\n        data[\"RequireOldPassword\"] = this.requireOldPassword;\n        data[\"Phone\"] = this.phone;\n        return data;\n    }\n}\n\nexport interface IUserChangePasswordRequest {\n    password?: string | undefined;\n    userId?: number;\n    newPassword?: string | undefined;\n    requireOldPassword?: boolean;\n    phone?: string | undefined;\n}\n\nexport interface FileResponse {\n    data: Blob;\n    status: number;\n    fileName?: string;\n    headers?: { [name: string]: any };\n}\n\nexport class ApiException extends Error {\n    message: string;\n    status: number;\n    response: string;\n    headers: { [key: string]: any; };\n    result: any;\n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isApiException = true;\n\n    static isApiException(obj: any): obj is ApiException {\n        return obj.isApiException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {\n    if (result !== null && result !== undefined)\n        throw result;\n    else\n        throw new ApiException(message, status, response, headers, null);\n}\n\nfunction isAxiosError(obj: any | undefined): obj is AxiosError {\n    return obj && obj.isAxiosError === true;\n}","import {Action} from '@reduxjs/toolkit'\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport {put, takeLatest, select} from 'redux-saga/effects'\nimport {UserModel} from '../models/UserModel'\nimport {getUserByToken} from './AuthCRUD'\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\nexport const actionTypes = {\n  Login: '[Login] Action',\n  Logout: '[Logout] Action',\n  Register: '[Register] Action',\n  UserRequested: '[Request User] Action',\n  UserLoaded: '[Load User] Auth API',\n  SetUser: '[Set User] Action',\n}\nconst initialAuthState: IAuthState = {\n  user: undefined,\n  accessToken: undefined,\n}\nexport interface IAuthState {\n  user?: UserModel\n  accessToken?: string\n}\nexport const reducer = persistReducer(\n  {storage, key: 'v100-demo1-auth', whitelist: ['user', 'accessToken']},\n  (state: IAuthState = initialAuthState, action: ActionWithPayload<IAuthState>) => {\n    switch (action.type) {\n      case actionTypes.Login: {\n        const accessToken = action.payload?.accessToken\n        return {accessToken, user: undefined}\n      }\n      case actionTypes.Register: {\n        const accessToken = action.payload?.accessToken\n        \n        return {accessToken, user: undefined}\n      }\n      case actionTypes.Logout: {\n        return initialAuthState\n      }\n      case actionTypes.UserLoaded: {\n        const user = action.payload?.user\n        return {...state, user}\n      }\n      case actionTypes.SetUser: {\n        const user = action.payload?.user\n        return {...state, user}\n      }\n      default:\n        return state\n    }\n  }\n)\nexport const actions = {\n  login: (accessToken: string) => ({type: actionTypes.Login, payload: {accessToken}}),\n  register: (accessToken: string) => ({\n    type: actionTypes.Register,\n    payload: {accessToken},\n  }),\n  logout: () => ({type: actionTypes.Logout}),\n  requestUser: () => ({\n    type: actionTypes.UserRequested,\n  }),\n  fulfillUser: (user: UserModel) => ({type: actionTypes.UserLoaded, payload: {user}}),\n  setUser: (user: UserModel) => ({type: actionTypes.SetUser, payload: {user}}),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\n    yield put(actions.requestUser())\n  })\n\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\n    yield put(actions.requestUser())\n  })\n\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\n    // @ts-ignore\n    const getToken = (state) => state.auth.accessToken\n    // @ts-ignore\n    let token = yield select(getToken)\n    const {data: user} = yield getUserByToken(token)\n    yield put(actions.fulfillUser(user))\n  })\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState} from 'react'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\nimport {useDispatch} from 'react-redux'\nimport {useFormik} from 'formik'\nimport {useNavigate} from 'react-router-dom'\nimport {AuthorizationClient, LoginAdminRequest} from '../redux/UserInfoAPI'\n\nimport * as authActions from '../redux/AuthRedux'\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Wrong email format')\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Password is required'),\n})\n\nconst initialValues = {\n  email: '',\n  password: ''\n}\n\n\n\nexport function Login(props: object) {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n  const formik = useFormik({\n    initialValues,\n    validationSchema: loginSchema,\n    onSubmit: async () => {\n      //set adminName and adminPassword\n      const inputEmailAdmin = document.getElementById('emailAdminFill') as HTMLInputElement | null\n      const inputPasswordAdmin = document.getElementById(\n        'passwordAdminFill'\n      ) as HTMLInputElement | null\n      const adminLogin = new AuthorizationClient()\n      try {\n        setLoading(true)\n        // check if value !null\n        if (inputEmailAdmin != null && inputPasswordAdmin != null) {\n          /* const {\n            Username: username,\n            Id: id,\n            Email: email,\n            Fullname,\n          } = */ (await adminLogin.loginAdmin(\n            new LoginAdminRequest({\n              username: inputEmailAdmin.value,\n              password: inputPasswordAdmin.value,\n            })\n          )) as any // TODO: for quick demonstration\n\n          dispatch(\n            authActions.actions.fulfillUser({\n              id:1,\n              username:inputEmailAdmin.value,\n              password: inputPasswordAdmin.value,\n              email:'None',\n              first_name: 'Admin',\n              last_name: 'Admin',\n            })\n          )\n          // Companyname: null\n          // Email: \"superadmin@admin.com\"\n          // Experience: null\n          // Fullname: \"admin admin\"\n          // Id: 1\n          // Phone: null\n          // TenantId: 0\n          // Token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6InN1cGVyYWRtaW5AYWRtaW4uY29tIiwicm9sZSI6IkFkbWluIiwibmJmIjoxNjU0NTA4MjcyLCJleHAiOjE2NTUxMTMwNzIsImlhdCI6MTY1NDUwODI3Mn0.Q0g5hVsCAOO3q5YEAhhjHeVC8oBnrCFClKiaYkDoPhY\"\n          // Username: \"superadmin@admin.com\"\n          // Usertype: 0\n          // Website: null\n        }\n        // check if value null\n        else if (inputEmailAdmin == null || inputPasswordAdmin == null) {\n          await adminLogin.loginAdmin(new LoginAdminRequest({username: '', password: ''}))\n        }\n        console.log('Success')\n      } catch (error) {\n        console.log('Failure')\n        navigate('forgot-password')\n      } finally {\n        setLoading(false)\n      }\n    },\n  })\n\n  return (\n    <form\n      name='formDangNhap'\n      className='form w-100 p-10 helloform'\n      onSubmit={formik.handleSubmit}\n      noValidate\n      id='kt_login_signin_form'\n    >\n      <div className='text-start pb-10 w-100'>\n        <h1 className='mb-3' style={{color: '#3F3F3F', fontWeight: '700'}}>\n          Đăng nhập để quản lý{' '}\n        </h1>\n      </div>\n      {/* begin::Form group */}\n      <div className='fv-row mb-10'>\n        <label className='form-label fs-6 fw-normal text-dark'>Tên đăng nhập</label>\n        <input\n          id='emailAdminFill'\n          placeholder='Email'\n          {...formik.getFieldProps('email')}\n          className={clsx(\n            'form-control bg-white border border-dark border-1 p-4',\n            {'is-invalid': formik.touched.email && formik.errors.email},\n            {\n              'is-valid': formik.touched.email && !formik.errors.email,\n            }\n          )}\n          type='email'\n          name='email'\n          autoComplete='off'\n        />\n        {formik.touched.email && formik.errors.email && (\n          <div className='fv-plugins-message-container'>\n            <span role='alert'>{formik.errors.email}</span>\n          </div>\n        )}\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Form group */}\n      <div className='fv-row mb-2'>\n        <div className='d-flex justify-content-between mt-6'>\n          <div className='d-flex flex-stack mb-2'>\n            {/* begin::Label */}\n            <label className='form-label fw-normal text-dark fs-6 '>Mật khẩu</label>\n            {/* end::Label */}\n            {/* begin::Link */}\n\n            {/* end::Link */}\n          </div>\n        </div>\n        <input\n          id='passwordAdminFill'\n          type='password'\n          placeholder='Mật khẩu'\n          autoComplete='off'\n          {...formik.getFieldProps('password')}\n          className={clsx(\n            'form-control bg-white border border-dark border-1 p-4',\n            {\n              'is-invalid': formik.touched.password && formik.errors.password,\n            },\n            {\n              'is-valid': formik.touched.password && !formik.errors.password,\n            }\n          )}\n          style={{marginBottom: '50px'}}\n        />\n        {formik.touched.password && formik.errors.password && (\n          <div className='fv-plugins-message-container'>\n            <div className='fv-help-block'>\n              <span role='alert'>{formik.errors.password}</span>\n            </div>\n          </div>\n        )}\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Action */}\n\n      <div className='text-center'>\n        <button\n          type='submit'\n          id='kt_sign_in_submit'\n          className='btn btn-lg  w-100 mb-5 py-5'\n          disabled={formik.isSubmitting || !formik.isValid}\n          style={{background: '#E22828'}}\n        >\n          {!loading && <span className='text-white'>Đăng nhập</span>}\n          {loading && (\n            <span className='indicator-progress' style={{display: 'block'}}>\n              Please wait...\n              <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n            </span>\n          )}\n        </button>\n      </div>\n      <div className='text-center pt-4 pb-6'>\n        <div className='text-black fw-semibold fs-6 '></div>\n      </div>\n    </form>\n  )\n}\n","export const toAbsoluteUrl = (pathname: string) => process.env.PUBLIC_URL + pathname\n","export function getCurrentUrl(pathname: string) {\n  return pathname.split(/[?#]/)[0]\n}\n\nexport function checkIsActive(pathname: string, url: string) {\n  const current = getCurrentUrl(pathname)\n  if (!current || !url) {\n    return false\n  }\n\n  if (current === url) {\n    return true\n  }\n\n  if (current.indexOf(url) > -1) {\n    return true\n  }\n\n  return false\n}\n","import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport {toAbsoluteUrl} from '../AssetHelpers'\ntype Props = {\n  className?: string\n  path: string\n  svgClassName?: string\n}\n\nconst KTSVG: React.FC<Props> = ({className = '', path, svgClassName = 'mh-50px'}) => {\n  return (\n    <span className={`svg-icon ${className}`}>\n      <SVG src={toAbsoluteUrl(path)} className={svgClassName} />\n    </span>\n  )\n}\n\nexport {KTSVG}\n","import {Dispatch, SetStateAction} from 'react'\n\nexport type ID = undefined | null | number\n\nexport type PaginationState = {\n  page: number\n  items_per_page: 10 | 30 | 50 | 100\n  links?: Array<{label: string; active: boolean; url: string | null; page: number | null}>\n}\n\nexport type SortState = {\n  sort?: string\n  order?: 'asc' | 'desc'\n}\n\nexport type FilterState = {\n  filter?: unknown\n}\n\nexport type SearchState = {\n  search?: string\n}\n\nexport type Response<T> = {\n  data?: T\n  payload?: {\n    message?: string\n    errors?: {\n      [key: string]: Array<string>\n    }\n    pagination?: PaginationState\n  }\n}\n\nexport type QueryState = PaginationState & SortState & FilterState & SearchState\n\nexport type QueryRequestContextProps = {\n  state: QueryState\n  updateState: (updates: Partial<QueryState>) => void\n}\n\nexport const initialQueryState: QueryState = {\n  page: 1,\n  items_per_page: 10,\n}\n\nexport const initialQueryRequest: QueryRequestContextProps = {\n  state: initialQueryState,\n  updateState: () => {},\n}\n\nexport type QueryResponseContextProps<T> = {\n  response?: Response<Array<T>> | undefined\n  refetch: () => void\n  isLoading: boolean\n  query: string\n}\n\nexport const initialQueryResponse = {refetch: () => {}, isLoading: false, query: ''}\n\nexport type ListViewContextProps = {\n  selected: Array<ID>\n  onSelect: (selectedId: ID) => void\n  onSelectAll: () => void\n  clearSelected: () => void\n  // NULL => (CREATION MODE) | MODAL IS OPENED\n  // NUMBER => (EDIT MODE) | MODAL IS OPENED\n  // UNDEFINED => MODAL IS CLOSED\n  itemIdForUpdate?: ID\n  setItemIdForUpdate: Dispatch<SetStateAction<ID>>\n  isAllSelected: boolean\n  disabled: boolean\n}\n\nexport const initialListView: ListViewContextProps = {\n  selected: [],\n  onSelect: () => {},\n  onSelectAll: () => {},\n  clearSelected: () => {},\n  setItemIdForUpdate: () => {},\n  isAllSelected: false,\n  disabled: false,\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useEffect} from 'react'\nimport {Outlet, Route, Routes} from 'react-router-dom'\nimport {ForgotPassword} from './components/ForgotPassword'\nimport {Login} from './components/Login'\nimport {toAbsoluteUrl} from '../../../_metronic/helpers'\n\n\nconst AuthLayout = () => {\n  useEffect(() => {\n    document.body.classList.add('bg-white')\n    return () => {\n      document.body.classList.remove('bg-white')\n    }\n  }, [])\n\n  return (\n    <div style={{backgroundColor: '#F9F9F9'}} className='w-100 h-100 overflow-hidden'>\n      <div className='row  justify-content-evenly h-100'>\n        <div className='col-login-5 d-flex justify-content-center'>\n          <div  className=' px-5 d-flex flex-row justify-content-center'>\n            <div className='d-flex flex-column justify-content-center pb-20'  style={{width: '480px'}}>\n              <div className=' d-flex flex-column w-100'>\n                <div className='pt-13  pb-10 w-100 '>\n                  <a href='#' className=''>\n                    <img\n                      alt='Logo'\n                      src={toAbsoluteUrl('/media/logos/logo-booking.png')}\n                      style={{height: '39px', width: '129px'}}\n                    />\n                  </a>\n                </div>\n                <h1\n                  className=' w-100 text-left pt-10'\n                  style={{\n                    fontSize: '44px',\n                    paddingBottom: '26px',\n                    fontFamily: \"'Montserrat', sans-serif\",\n                    letterSpacing: '-3px',\n                  }}\n                >\n                  Tăng Doanh Thu và Hiệu Quả Truyền Thông\n                </h1>\n                <p\n                  className='text-left fs-4 w-100\n          '\n                  style={{paddingBottom: '54px'}}\n                >\n                  Trở thành đối tác của BOOKING STUDIO khiến việc kinh doanh của bạn dễ dàng hơn bao\n                  giờ hết. Hãy cùng nhau bắt đầu nhé!\n                </p>\n              </div>\n              <div className='mx-auto'>\n                <img\n                  alt='Banner'\n                  src={toAbsoluteUrl('/media/background/strategy.png')}\n                  style={{height: '250px', width: '361px'}}\n                ></img>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='col-login-5 py-20 '>\n          <div className='d-flex flex-center  h-100 w-100 ' style={{top:'10px'}} >\n            <div className='d-flex flex-center h-100 w-100 ' >\n              <div className='bg-white shadow   loginFullScreen '>\n                <Outlet />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AuthPage = () => (\n  <Routes>\n    <Route element={<AuthLayout />}>\n      <Route path='login' element={<Login />} />\n      <Route path='forgot-password' element={<ForgotPassword />} />\n      <Route index element={<Login />} />\n    </Route>\n  </Routes>\n)\n\nexport {AuthPage}\n","import {useEffect} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {Navigate, Routes} from 'react-router-dom'\nimport * as auth from './redux/AuthRedux'\n\nexport function Logout() {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(auth.actions.logout())\n    document.location.reload()\n  }, [dispatch])\n\n  return (\n    <Routes>\n      <Navigate to='/auth/login' />\n    </Routes>\n  )\n}\n","import {FC, useRef, useEffect} from 'react'\nimport {shallowEqual, useSelector, connect, useDispatch, ConnectedProps} from 'react-redux'\nimport * as auth from './AuthRedux'\nimport {getUserByToken} from './AuthCRUD'\nimport {RootState} from '../../../../setup'\n\nconst mapState = (state: RootState) => ({auth: state.auth})\nconst connector = connect(mapState, auth.actions)\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\n\nconst AuthInit: FC<PropsFromRedux> = (props) => {\n  const isAuthorized = useSelector<RootState>(({auth}) => auth.user, shallowEqual)\n \n \n  const didRequest = useRef(false)\n  const dispatch = useDispatch()\n  const accessToken = useSelector<RootState>(({auth}) => auth.accessToken, shallowEqual)\n\n  // We should request user by authToken before rendering the application\n  useEffect(() => {\n    const requestUser = async () => {\n      try {\n        if (!didRequest.current) {\n          const {data: user} = await getUserByToken(accessToken as string)\n          dispatch(props.fulfillUser(user))\n        }\n      } catch (error) {\n        console.error(error)\n        if (!isAuthorized) {\n          dispatch(props.logout())\n        }\n      } finally {\n      }\n\n      return () => (didRequest.current = true)\n    }\n\n    if (isAuthorized) {\n      requestUser()\n    } else {\n      dispatch(props.logout())\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return<>{props.children}</>\n}\n\nexport default connector(AuthInit)\n","import {all} from 'redux-saga/effects'\nimport {combineReducers} from 'redux'\n\nimport * as auth from '../../app/modules/auth'\n\nexport const rootReducer = combineReducers({\n  auth: auth.reducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport function* rootSaga() {\n  yield all([auth.saga()])\n}\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport {reduxBatch} from '@manaflair/redux-batch'\nimport {persistStore} from 'redux-persist'\nimport {rootReducer, rootSaga} from './RootReducer'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [\n  ...getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false,\n    thunk: true,\n  }),\n  sagaMiddleware,\n]\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: [reduxBatch],\n})\n\nexport type AppDispatch = typeof store.dispatch\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React, {FC, createContext, useContext} from 'react'\n\nconst I18N_CONFIG_KEY = process.env.REACT_APP_I18N_CONFIG_KEY || 'i18nConfig'\n\ntype Props = {\n  selectedLang: 'de' | 'en' | 'es' | 'fr' | 'ja' | 'zh'\n}\nconst initialState: Props = {\n  selectedLang: 'en',\n}\n\nfunction getConfig(): Props {\n  const ls = localStorage.getItem(I18N_CONFIG_KEY)\n  if (ls) {\n    try {\n      return JSON.parse(ls) as Props\n    } catch (er) {\n      console.error(er)\n    }\n  }\n  return initialState\n}\n\n// Side effect\nexport function setLanguage(lang: string) {\n  localStorage.setItem(I18N_CONFIG_KEY, JSON.stringify({selectedLang: lang}))\n  window.location.reload()\n}\n\nconst I18nContext = createContext<Props>(initialState)\n\nconst useLang = () => {\n  return useContext(I18nContext).selectedLang\n}\n\nconst MetronicI18nProvider: FC = ({children}) => {\n  const lang = getConfig()\n  return <I18nContext.Provider value={lang}>{children}</I18nContext.Provider>\n}\n\nexport {MetronicI18nProvider, useLang}\n","/* eslint-disable no-useless-escape */\n// DOCS: https://javascript.info/cookie\nexport class CookieComponent {\n  /**\n   * Returns the cookie with the given name, or undefined if not found\n   *\n   * @param  {string} name - cookie name\n   * @returns string | null\n   */\n  public static get(name: string): string | undefined {\n    let matches = document.cookie.match(\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\n    )\n    return matches ? decodeURIComponent(matches[1]) : undefined\n  }\n\n  /**\n   * Please note that a cookie value is encoded,\n   * so getCookie uses a built-in decodeURIComponent function to decode it.\n   *\n   * @param  {string} name - cookie name\n   * @param  {string | number | boolean} value - cookie value\n   * @param  {any} cookieOptions - cookie options\n   * @returns void\n   */\n  public static set(name: string, value: string | number | boolean, cookieOptions: any): void {\n    const options = {\n      path: '/',\n      // add other defaults here if necessary\n      ...cookieOptions,\n    }\n\n    if (options.expires instanceof Date) {\n      options.expires = options.expires.toUTCString()\n    }\n\n    let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value)\n\n    for (let optionKey in options) {\n      updatedCookie += '; ' + optionKey\n      let optionValue = options[optionKey]\n      if (optionValue !== true) {\n        updatedCookie += '=' + optionValue\n      }\n    }\n\n    document.cookie = updatedCookie\n  }\n\n  /**\n   * To delete a cookie, we can call it with a negative expiration date\n   *\n   * @param  {string} name\n   */\n  public static delete(name: string): void {\n    CookieComponent.set(name, '', {\n      'max-age': -1,\n    })\n  }\n}\n","export class ElementStyleUtil {\n  public static set(element: HTMLElement, property: string, value?: any, important?: boolean) {\n    if (important) {\n      element.style.setProperty(property, value, 'important')\n    } else {\n      element.style.setProperty(property, value)\n    }\n  }\n\n  public static get(element: HTMLElement, attributeName: string) {\n    return element.style.getPropertyValue(attributeName)\n  }\n\n  public static remove(element: HTMLElement, attibuteName: string) {\n    element.style.removeProperty(attibuteName)\n  }\n}\n","export class DataUtil {\n  static store: Map<HTMLElement, Map<string, any>> = new Map()\n\n  public static set(instance: HTMLElement | undefined, key: string, data: any): void {\n    if (!instance) {\n      return\n    }\n\n    const instanceData = DataUtil.store.get(instance)\n    if (!instanceData) {\n      const newMap = new Map().set(key, data)\n      DataUtil.store.set(instance, newMap)\n      return\n    }\n\n    instanceData.set(key, data)\n  }\n\n  public static get(instance: HTMLElement, key: string): any | undefined {\n    const instanceData = DataUtil.store.get(instance)\n    if (!instanceData) {\n      return\n    }\n\n    return instanceData.get(key)\n  }\n\n  public static remove(instance: HTMLElement, key: string): void {\n    const instanceData = DataUtil.store.get(instance)\n    if (!instanceData) {\n      return\n    }\n\n    instanceData.delete(key)\n  }\n\n  public static has(instance: HTMLElement, key: string): boolean {\n    const instanceData = DataUtil.store.get(instance)\n    if (instanceData) {\n      return instanceData.has(key)\n    }\n\n    return false\n  }\n\n  public static getAllInstancesByKey(key: string) {\n    const result: any[] = []\n    DataUtil.store.forEach((val) => {\n      val.forEach((v, k) => {\n        if (k === key) {\n          result.push(v)\n        }\n      })\n    })\n    return result\n  }\n}\n","function getObjectPropertyValueByKey(obj: any, key: string): any | undefined {\n  const map = new Map(Object.entries(obj))\n  if (obj.hasOwnProperty(key) && map) {\n    return map.get(key)\n  }\n}\n\n/**\n * Generates unique ID for give prefix.\n * @param {string} prefix Prefix for generated ID\n * @returns {boolean}\n */\nfunction getUniqueIdWithPrefix(prefix: string | undefined): string {\n  const result = Math.floor(Math.random() * new Date().getTime()).toString()\n  if (!prefix) {\n    return result\n  }\n\n  return `${prefix}${result}`\n}\n\n/* eslint-disable no-useless-escape */\nfunction stringSnakeToCamel(str: string): string {\n  return str.replace(/(\\-\\w)/g, function (m) {\n    return m[1].toUpperCase()\n  })\n}\n\nfunction toJSON(value: string | JSON): JSON | undefined {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  if (!value) {\n    return undefined\n  }\n\n  // (\"'\" => \"\\\"\");\n  const result = value\n    .toString()\n    .split('')\n    .map((el) => (el !== \"'\" ? el : '\"'))\n    .join('')\n  var jsonStr = result.replace(/(\\w+:)|(\\w+ :)/g, function (matched) {\n    return '\"' + matched.substring(0, matched.length - 1) + '\":'\n  })\n  try {\n    return JSON.parse(jsonStr)\n  } catch {\n    return undefined\n  }\n}\n\nexport {getObjectPropertyValueByKey, getUniqueIdWithPrefix, stringSnakeToCamel, toJSON}\n","import {getUniqueIdWithPrefix} from './_TypesHelpers'\n\nexport class DOMEventHandlerUtil {\n  public static store = new Map()\n\n  public static on(\n    element: HTMLElement,\n    selector: string,\n    eventName: string,\n    callBack: any\n  ): string {\n    const eventId = getUniqueIdWithPrefix('DOMEvent')\n    DOMEventHandlerUtil.store.set(eventId, (e: Event) => {\n      const targets = element.querySelectorAll(selector)\n      let target: HTMLElement | null = e.target as HTMLElement\n      while (target && target !== element) {\n        for (let i = 0; i < targets.length; i++) {\n          if (target === targets[i]) {\n            callBack.call(target, e)\n          }\n        }\n\n        if (target.parentElement) {\n          target = target.parentElement\n        } else {\n          target = null\n        }\n      }\n    })\n    element.addEventListener(eventName, DOMEventHandlerUtil.store.get(eventId))\n    return eventId\n  }\n\n  public static off(element: HTMLElement, eventName: string, eventId: string): void {\n    const funcFromStore = DOMEventHandlerUtil.store.get(eventId)\n    if (!funcFromStore) {\n      return\n    }\n\n    element.removeEventListener(eventName, funcFromStore)\n    DOMEventHandlerUtil.store.delete(eventId)\n  }\n\n  public static one(element: HTMLElement, eventName: string, callBack: Function): void {\n    element.addEventListener(eventName, function calee(e) {\n      // remove event\n      if (e.target && e.target.removeEventListener) {\n        e.target.removeEventListener(e.type, calee)\n      }\n\n      if (element && e && e.currentTarget) {\n        // if (element && element.removeEventListener && e && e.currentTarget) {\n        e.currentTarget.removeEventListener(e.type, calee)\n      }\n\n      // call hander\n      return callBack(e)\n    })\n  }\n}\n","import {DOMEventHandlerUtil} from './_DOMEventHandlerUtil'\nimport {ElementStyleUtil} from './_ElementStyleUtil'\nimport {getElementOffset} from './DomHelpers'\n\nexport class ElementAnimateUtil {\n  public static animate(\n    from: number,\n    to: number,\n    duration: number,\n    update: Function,\n    complete?: Function\n  ) {\n    /**\n     * TinyAnimate.easings\n     *  Adapted from jQuery Easing\n     */\n    const easings = {\n      linear: function (t: number, b: number, c: number, d: number) {\n        return (c * t) / d + b\n      },\n    }\n\n    // Create mock done() function if necessary\n    if (!complete) {\n      complete = function () {}\n    }\n\n    // Animation loop\n    // let canceled = false;\n    const change = to - from\n\n    function loop(timestamp: number) {\n      var time = (timestamp || +new Date()) - start\n\n      if (time >= 0) {\n        update(easings.linear(time, from, change, duration))\n      }\n      if (time >= 0 && time >= duration) {\n        update(to)\n        if (complete) {\n          complete()\n        }\n      } else {\n        window.requestAnimationFrame(loop)\n      }\n    }\n\n    update(from)\n\n    // Start animation loop\n    const start =\n      window.performance && window.performance.now ? window.performance.now() : +new Date()\n\n    window.requestAnimationFrame(loop)\n  }\n\n  public static animateClass(\n    element: HTMLElement,\n    animationName: string,\n    callBack?: Function\n  ): void {\n    const animateClasses = animationName.split(' ')\n    animateClasses.forEach((cssClass) => element.classList.add(cssClass))\n    DOMEventHandlerUtil.one(element, 'animationend', function () {\n      animateClasses.forEach((cssClass) => element.classList.remove(cssClass))\n    })\n\n    if (callBack) {\n      DOMEventHandlerUtil.one(element, 'animationend', callBack)\n    }\n  }\n\n  public static transitionEnd(element: HTMLElement, callBack: Function) {\n    DOMEventHandlerUtil.one(element, 'transitionend', callBack)\n  }\n\n  public static animationEnd(element: HTMLElement, callBack: Function) {\n    DOMEventHandlerUtil.one(element, 'animationend', callBack)\n  }\n\n  public static animationDelay(element: HTMLElement, value: string) {\n    ElementStyleUtil.set(element, 'animation-delay', value)\n  }\n\n  public static animationDuration(element: HTMLElement, value: string) {\n    ElementStyleUtil.set(element, 'animation-duration', value)\n  }\n\n  public static scrollTo(element: HTMLElement | null, offset: number, duration: number = 500) {\n    let targetPos = element ? getElementOffset(element).top : 0\n    let scrollPos =\n      window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0\n\n    if (offset) {\n      scrollPos += offset\n      targetPos = targetPos - offset\n    }\n\n    const from = scrollPos\n    const to = targetPos\n\n    ElementAnimateUtil.animate(from, to, duration, function (value: number) {\n      document.documentElement.scrollTop = value\n      // document.body.parentNode.scrollTop = value;\n      document.body.scrollTop = value\n    }) //, easing, done\n  }\n  public static scrollTop(offset: number, duration: number) {\n    ElementAnimateUtil.scrollTo(null, offset, duration)\n  }\n}\n","import {OffsetModel} from './models/OffsetModel'\nimport {ViewPortModel} from './models/ViewPortModel'\nimport {ElementStyleUtil} from './_ElementStyleUtil'\nimport {DataUtil} from './_DataUtil'\nimport {ElementAnimateUtil} from './ElementAnimateUtil'\nimport {getObjectPropertyValueByKey, toJSON} from './_TypesHelpers'\n\nfunction getCSS(el: HTMLElement, styleProp: string) {\n  const defaultView = (el.ownerDocument || document).defaultView\n\n  if (!defaultView) {\n    return ''\n  }\n\n  // sanitize property name to css notation\n  // (hyphen separated words eg. font-Size)\n  styleProp = styleProp.replace(/([A-Z])/g, '-$1').toLowerCase()\n\n  return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp)\n}\n\nfunction getCSSVariableValue(variableName: string) {\n  let hex = getComputedStyle(document.documentElement).getPropertyValue(variableName)\n  if (hex && hex.length > 0) {\n    hex = hex.trim()\n  }\n\n  return hex\n}\n\nfunction getElementActualCss(el: HTMLElement, prop: any, cache: boolean) {\n  let css = ''\n\n  if (!el.getAttribute('kt-hidden-' + prop) || cache === false) {\n    let value\n\n    // the element is hidden so:\n    // making the el block so we can meassure its height but still be hidden\n    css = el.style.cssText\n    el.style.cssText = 'position: absolute; visibility: hidden; display: block;'\n\n    if (prop === 'width') {\n      value = el.offsetWidth\n    } else if (prop === 'height') {\n      value = el.offsetHeight\n    }\n\n    el.style.cssText = css\n\n    // store it in cache\n    if (value !== undefined) {\n      el.setAttribute('kt-hidden-' + prop, value.toString())\n      return parseFloat(value.toString())\n    }\n    return 0\n  } else {\n    // store it in cache\n    const attributeValue = el.getAttribute('kt-hidden-' + prop)\n    if (attributeValue || attributeValue === '0') {\n      return parseFloat(attributeValue)\n    }\n  }\n}\n\nfunction getElementActualHeight(el: HTMLElement) {\n  return getElementActualCss(el, 'height', false)\n}\n\nfunction getElementActualWidth(el: HTMLElement, cache?: boolean) {\n  return getElementActualCss(el, 'width', false)\n}\n\nfunction getElementIndex(element: HTMLElement) {\n  if (element.parentNode) {\n    const c = element.parentNode.children\n    for (let i = 0; i < c.length; i++) {\n      if (c[i] === element) return i\n    }\n  }\n  return -1\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\nfunction getElementMatches(element: HTMLElement, selector: string) {\n  const p = Element.prototype\n  const f = p.matches || p.webkitMatchesSelector\n\n  if (element && element.tagName) {\n    return f.call(element, selector)\n  } else {\n    return false\n  }\n}\n\nfunction getElementOffset(el: HTMLElement): OffsetModel {\n  // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n  // Support: IE <=11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (!el.getClientRects().length) {\n    return {top: 0, left: 0}\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = el.getBoundingClientRect()\n  const win = el.ownerDocument.defaultView\n  if (win) {\n    return {\n      top: rect.top + win.pageYOffset,\n      left: rect.left + win.pageXOffset,\n    }\n  }\n\n  return rect\n}\n\nfunction getElementParents(element: Element, selector: string) {\n  // Element.matches() polyfill\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = function (s) {\n      const matches = (document || this.ownerDocument).querySelectorAll(s)\n      let i = matches.length\n      while (--i >= 0 && matches.item(i) !== this) {}\n      return i > -1\n    }\n  }\n\n  // Set up a parent array\n  const parents: Array<Element> = []\n\n  let el: Element | null = element\n\n  // Push each parent element to the array\n  for (; el && el !== document.body; el = el.parentElement) {\n    if (selector) {\n      if (el.matches(selector)) {\n        parents.push(el)\n      }\n      continue\n    }\n    parents.push(el)\n  }\n\n  // Return our parent array\n  return parents\n}\n\nfunction getHighestZindex(el: HTMLElement) {\n  let bufferNode: Node | null = el as Node\n  let buffer = el\n  while (bufferNode && bufferNode !== document) {\n    // Ignore z-index if position is set to a value where z-index is ignored by the browser\n    // This makes behavior of this function consistent across browsers\n    // WebKit always returns auto if the element is positioned\n    const position = buffer.style.getPropertyValue('position')\n    if (position === 'absolute' || position === 'relative' || position === 'fixed') {\n      // IE returns 0 when zIndex is not specified\n      // other browsers return a string\n      // we ignore the case of nested elements with an explicit value of 0\n      // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\n      const value = parseInt(buffer.style.getPropertyValue('z-index'))\n      if (!isNaN(value) && value !== 0) {\n        return value\n      }\n    }\n\n    bufferNode = bufferNode.parentNode\n    buffer = bufferNode as HTMLElement\n  }\n  return null\n}\n\nfunction getScrollTop(): number {\n  return (document.scrollingElement || document.documentElement).scrollTop\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth\nfunction getViewPort(): ViewPortModel {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  }\n}\n\nfunction insertAfterElement(el: HTMLElement, referenceNode: HTMLElement) {\n  return referenceNode.parentNode?.insertBefore(el, referenceNode.nextSibling)\n}\n\nfunction isElementHasClasses(element: HTMLElement, classesStr: string): boolean {\n  const classes = classesStr.split(' ')\n  for (let i = 0; i < classes.length; i++) {\n    if (!element.classList.contains(classes[i])) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction isVisibleElement(element: HTMLElement): boolean {\n  return !(element.offsetWidth === 0 && element.offsetHeight === 0)\n}\n\n// Throttle function: Input as function which needs to be throttled and delay is the time interval in milliseconds\nfunction throttle(timer: number | undefined, func: Function, delay?: number) {\n  // If setTimeout is already scheduled, no need to do anything\n  if (timer) {\n    return\n  }\n\n  // Schedule a setTimeout after delay seconds\n  timer = window.setTimeout(function () {\n    func()\n\n    // Once setTimeout function execution is finished, timerId = undefined so that in <br>\n    // the next scroll event function execution can be scheduled by the setTimeout\n    timer = undefined\n  }, delay)\n}\n\nfunction getElementChildren(element: HTMLElement, selector: string): Array<HTMLElement> | null {\n  if (!element || !element.childNodes) {\n    return null\n  }\n\n  const result: Array<HTMLElement> = []\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i]\n    // child.nodeType == 1 => Element, Text, Comment, ProcessingInstruction, CDATASection, EntityReference\n    if (child.nodeType === 1 && getElementMatches(child as HTMLElement, selector)) {\n      result.push(child as HTMLElement)\n    }\n  }\n\n  return result\n}\n\nfunction getElementChild(element: HTMLElement, selector: string): HTMLElement | null {\n  const children = getElementChildren(element, selector)\n  return children ? children[0] : null\n}\n\nfunction isMobileDevice(): boolean {\n  let test = getViewPort().width < +getBreakpoint('lg') ? true : false\n\n  if (test === false) {\n    // For use within normal web clients\n    test = navigator.userAgent.match(/iPad/i) != null\n  }\n\n  return test\n}\n\nfunction slide(el: HTMLElement, dir: string, speed: number, callback: any) {\n  if (\n    !el ||\n    (dir === 'up' && isVisibleElement(el) === false) ||\n    (dir === 'down' && isVisibleElement(el) === true)\n  ) {\n    return\n  }\n\n  speed = speed ? speed : 600\n  let calcHeight = getElementActualHeight(el)\n  let calcPaddingTop: number = 0\n  let calcPaddingBottom: number = 0\n\n  if (ElementStyleUtil.get(el, 'padding-top') && DataUtil.get(el, 'slide-padding-top') !== true) {\n    DataUtil.set(el, 'slide-padding-top', ElementStyleUtil.get(el, 'padding-top'))\n  }\n\n  if (\n    ElementStyleUtil.get(el, 'padding-bottom') &&\n    DataUtil.has(el, 'slide-padding-bottom') !== true\n  ) {\n    DataUtil.set(el, 'slide-padding-bottom', ElementStyleUtil.get(el, 'padding-bottom'))\n  }\n\n  if (DataUtil.has(el, 'slide-padding-top')) {\n    calcPaddingTop = parseInt(DataUtil.get(el, 'slide-padding-top'))\n  }\n\n  if (DataUtil.has(el, 'slide-padding-bottom')) {\n    calcPaddingBottom = parseInt(DataUtil.get(el, 'slide-padding-bottom'))\n  }\n\n  if (dir === 'up') {\n    // up\n    el.style.cssText = 'display: block; overflow: hidden;'\n\n    if (calcPaddingTop) {\n      ElementAnimateUtil.animate(0, calcPaddingTop, speed, function (value: number) {\n        el.style.paddingTop = calcPaddingTop - value + 'px'\n      })\n    }\n\n    if (calcPaddingBottom) {\n      ElementAnimateUtil.animate(0, calcPaddingBottom, speed, function (value: number) {\n        el.style.paddingBottom = calcPaddingBottom - value + 'px'\n      })\n    }\n\n    ElementAnimateUtil.animate(\n      0,\n      calcHeight || 0,\n      speed,\n      function (value: number) {\n        el.style.height = (calcHeight || 0) - value + 'px'\n      },\n      function () {\n        el.style.height = ''\n        el.style.display = 'none'\n\n        if (typeof callback === 'function') {\n          callback()\n        }\n      }\n    )\n  } else if (dir === 'down') {\n    // down\n    el.style.cssText = 'display: block; overflow: hidden;'\n\n    if (calcPaddingTop) {\n      ElementAnimateUtil.animate(\n        0,\n        calcPaddingTop,\n        speed,\n        function (value: number) {\n          //\n          el.style.paddingTop = value + 'px'\n        },\n        function () {\n          el.style.paddingTop = ''\n        }\n      )\n    }\n\n    if (calcPaddingBottom) {\n      ElementAnimateUtil.animate(\n        0,\n        calcPaddingBottom,\n        speed,\n        function (value: number) {\n          el.style.paddingBottom = value + 'px'\n        },\n        function () {\n          el.style.paddingBottom = ''\n        }\n      )\n    }\n\n    ElementAnimateUtil.animate(\n      0,\n      calcHeight || 0,\n      speed,\n      function (value: number) {\n        el.style.height = value + 'px'\n      },\n      function () {\n        el.style.height = ''\n        el.style.display = ''\n        el.style.overflow = ''\n\n        if (typeof callback === 'function') {\n          callback()\n        }\n      }\n    )\n  }\n}\n\nfunction slideUp(el: HTMLElement, speed: number, callback: any) {\n  slide(el, 'up', speed, callback)\n}\n\nfunction slideDown(el: HTMLElement, speed: number, callback: any) {\n  slide(el, 'down', speed, callback)\n}\n\nfunction getBreakpoint(breakpoint: string) {\n  let value: number | string = getCSSVariableValue('--bs-' + breakpoint)\n  if (value) {\n    value = parseInt(value.trim())\n  }\n\n  return value\n}\n\nfunction getAttributeValueByBreakpoint(incomingAttr: string): string | JSON {\n  let value = toJSON(incomingAttr)\n  if (typeof value !== 'object') {\n    return incomingAttr\n  }\n\n  const width = getViewPort().width\n  let resultKey\n  let resultBreakpoint = -1\n  let breakpoint\n\n  for (let key in value) {\n    if (key === 'default') {\n      breakpoint = 0\n    } else {\n      breakpoint = getBreakpoint(key) ? +getBreakpoint(key) : parseInt(key)\n    }\n\n    if (breakpoint <= width && breakpoint > resultBreakpoint) {\n      resultKey = key\n      resultBreakpoint = breakpoint\n    }\n  }\n\n  return resultKey ? getObjectPropertyValueByKey(value, resultKey) : value\n}\n\nfunction colorLighten(color: string, amount: number) {\n  const addLight = (_color: string, _amount: number) => {\n    const cc = parseInt(_color, 16) + _amount\n    const cNum = cc > 255 ? 255 : cc\n    const c = cNum.toString(16).length > 1 ? cNum.toString(16) : `0${cNum.toString(16)}`\n    return c\n  }\n\n  color = color.indexOf('#') >= 0 ? color.substring(1, color.length) : color\n  amount = parseInt(((255 * amount) / 100).toString())\n  return (color = `#${addLight(color.substring(0, 2), amount)}${addLight(\n    color.substring(2, 4),\n    amount\n  )}${addLight(color.substring(4, 6), amount)}`)\n}\n\nfunction colorDarken(color: string, amount: number) {\n  const subtractLight = (_color: string, _amount: number) => {\n    const cc = parseInt(color, 16) - amount\n    const cNum = cc < 0 ? 0 : cc\n    const c = cNum.toString(16).length > 1 ? cNum.toString(16) : `0${cNum.toString(16)}`\n    return c\n  }\n\n  color = color.indexOf('#') >= 0 ? color.substring(1, color.length) : color\n  amount = parseInt(((255 * amount) / 100).toString())\n\n  return (color = `#${subtractLight(color.substring(0, 2), amount)}${subtractLight(\n    color.substring(2, 4),\n    amount\n  )}${subtractLight(color.substring(4, 6), amount)}`)\n}\n\nexport {\n  getBreakpoint,\n  getCSS,\n  getCSSVariableValue,\n  getElementActualCss,\n  getElementActualHeight,\n  getElementActualWidth,\n  getElementIndex,\n  getElementMatches,\n  getElementOffset,\n  getElementParents,\n  getHighestZindex,\n  getScrollTop,\n  getViewPort,\n  insertAfterElement,\n  isElementHasClasses,\n  isVisibleElement,\n  throttle,\n  getElementChildren,\n  getElementChild,\n  isMobileDevice,\n  slide,\n  slideUp,\n  slideDown,\n  getAttributeValueByBreakpoint,\n  colorLighten,\n  colorDarken,\n}\n","import {DataUtil} from './_DataUtil'\nimport {getUniqueIdWithPrefix} from './_TypesHelpers'\n\nexport interface EventMeta {\n  name: string\n  callback: Function\n  one: boolean\n  fired: boolean\n}\n\nexport class EventHandlerUtil {\n  static store: Map<string, Map<string, EventMeta>> = new Map()\n\n  private static setEventMetasByName(name: string, metas: Map<string, EventMeta>): void {\n    EventHandlerUtil.store.set(name, metas)\n  }\n\n  private static getEventMetasByName(name: string): Map<string, EventMeta> | undefined {\n    return EventHandlerUtil.store.get(name)\n  }\n\n  private static setEventMetaByNameAndHandlerId(\n    name: string,\n    handlerId: string,\n    meta: EventMeta\n  ): void {\n    let metas = EventHandlerUtil.getEventMetasByName(name)\n    if (!metas) {\n      metas = new Map()\n    }\n\n    metas.set(handlerId, meta)\n    EventHandlerUtil.setEventMetasByName(name, metas)\n  }\n\n  private static getEventsMetaByHandlerId(name: string, handlerId: string): EventMeta | undefined {\n    const metas = EventHandlerUtil.store.get(name)\n    if (!metas) {\n      return\n    }\n\n    return metas.get(handlerId)\n  }\n\n  private static setFiredByNameAndHandlerId(name: string, handerId: string, fired: boolean): void {\n    const meta = EventHandlerUtil.getEventsMetaByHandlerId(name, handerId)\n    if (!meta) {\n      return\n    }\n\n    meta.fired = fired\n    EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handerId, meta)\n  }\n\n  private static addEvent(\n    element: HTMLElement,\n    name: string,\n    callback: Function,\n    one: boolean = false\n  ) {\n    const handlerId = getUniqueIdWithPrefix('event')\n    DataUtil.set(element, name, handlerId)\n    const meta: EventMeta = {\n      name: name,\n      callback: callback,\n      one: one,\n      fired: false,\n    }\n\n    EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handlerId, meta)\n  }\n\n  private static removeEvent(element: HTMLElement, name: string) {\n    const handlerId = DataUtil.get(element, name)\n    if (!handlerId) {\n      return\n    }\n\n    const metas = EventHandlerUtil.getEventMetasByName(name)\n    if (!metas) {\n      return\n    }\n\n    metas.delete(handlerId)\n    EventHandlerUtil.setEventMetasByName(name, metas)\n  }\n\n  public static trigger(element: HTMLElement, name: string, target?: any, e?: Event) {\n    if (DataUtil.has(element, name)) {\n      const handlerId = DataUtil.get(element, name)\n      if (!handlerId) {\n        return undefined\n      }\n\n      const handler = EventHandlerUtil.getEventsMetaByHandlerId(name, handlerId)\n      if (handler) {\n        if (handler.name === name) {\n          if (handler.one === true) {\n            if (handler.fired === false) {\n              EventHandlerUtil.setFiredByNameAndHandlerId(name, handlerId, true)\n              return handler.callback.call(this, target, e)\n            }\n          } else {\n            return handler.callback.call(this, target, e)\n          }\n        }\n      }\n    }\n\n    return null\n  }\n\n  public static on = function (element: HTMLElement, name: string, callBack: Function): void {\n    EventHandlerUtil.addEvent(element, name, callBack, false)\n  }\n\n  public static one(element: HTMLElement, name: string, callBack: Function): void {\n    EventHandlerUtil.addEvent(element, name, callBack, true)\n  }\n\n  public static off(element: HTMLElement, name: string): void {\n    EventHandlerUtil.removeEvent(element, name)\n  }\n}\n","import {\n  EventHandlerUtil,\n  getUniqueIdWithPrefix,\n  getObjectPropertyValueByKey,\n  stringSnakeToCamel,\n  getAttributeValueByBreakpoint,\n  throttle,\n  getCSS,\n  DOMEventHandlerUtil,\n  ElementStyleUtil,\n} from '../_utils/index'\n\nexport class DrawerStore {\n  static store: Map<string, DrawerComponent> = new Map()\n\n  public static set(instanceId: string, drawerComponentObj: DrawerComponent): void {\n    if (DrawerStore.has(instanceId)) {\n      return\n    }\n\n    DrawerStore.store.set(instanceId, drawerComponentObj)\n  }\n\n  public static get(instanceId: string): DrawerComponent | undefined {\n    if (!DrawerStore.has(instanceId)) {\n      return\n    }\n    return DrawerStore.store.get(instanceId)\n  }\n\n  public static remove(instanceId: string): void {\n    if (!DrawerStore.has(instanceId)) {\n      return\n    }\n\n    DrawerStore.store.delete(instanceId)\n  }\n\n  public static has(instanceId: string): boolean {\n    return DrawerStore.store.has(instanceId)\n  }\n\n  public static getAllInstances() {\n    return DrawerStore.store\n  }\n}\n\nexport interface DrawerOptions {\n  overlay: boolean\n  baseClass: string\n  overlayClass: string\n  direction: string\n}\n\nconst defaultDrawerOptions: DrawerOptions = {\n  overlay: true,\n  baseClass: 'drawer',\n  overlayClass: 'drawer-overlay',\n  direction: 'end',\n}\n\nclass DrawerComponent {\n  element: HTMLElement\n  overlayElement: HTMLElement | null = null\n  toggleElement: HTMLElement | null = null\n  options: DrawerOptions\n  instanceUid: string\n  name: string = ''\n  shown: boolean = false\n  lastWidth: number = 0\n  closeElement: HTMLElement | null = null\n\n  constructor(_element: HTMLElement, options: DrawerOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultDrawerOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('drawer')\n    this.overlayElement = null\n    this.name = this.element.getAttribute('data-kt-drawer-name') || ''\n    this.shown = false\n    this.toggleElement = null\n    // Event Handlers\n    this._handlers()\n    // Update Instance\n    this._update()\n    // Bind Instance\n    DrawerStore.set(this.element.id, this)\n  }\n\n  private _handlers = () => {\n    const togglers = this._getOption('toggle') as string\n    const closers = this._getOption('close') as string\n\n    if (togglers !== null && togglers.length > 0) {\n      DOMEventHandlerUtil.on(document.body, togglers, 'click', (e: Event) => {\n        e.preventDefault()\n        this.toggleElement = document.getElementById(togglers)\n        this._toggle()\n      })\n    }\n\n    if (closers !== null && closers.length > 0) {\n      DOMEventHandlerUtil.on(document.body, closers, 'click', (e: Event) => {\n        e.preventDefault()\n        this.closeElement = document.getElementById(closers)\n\n        this._hide()\n      })\n    }\n  }\n\n  private _update = () => {\n    const width = String(this._getOption('width'))\n    const direction = String(this._getOption('direction'))\n\n    // Reset state\n    const hasBaseClass = this.element.classList.contains(`${this.options.baseClass}-on`)\n    const bodyCanvasAttr = String(document.body.getAttribute(`data-kt-drawer-${this.name}-`))\n\n    if (hasBaseClass === true && bodyCanvasAttr === 'on') {\n      this.shown = true\n    } else {\n      this.shown = false\n    }\n\n    // Activate/deactivate\n    if (this._getOption('activate') === true) {\n      this.element.classList.add(this.options.baseClass)\n      this.element.classList.add(`${this.options.baseClass}-${direction}`)\n      ElementStyleUtil.set(this.element, 'width', width, true)\n\n      this.lastWidth = parseInt(width)\n    } else {\n      ElementStyleUtil.set(this.element, 'width', '')\n      this.element.classList.remove(this.options.baseClass)\n      this.element.classList.remove(`${this.options.baseClass}-${direction}`)\n      this._hide()\n    }\n  }\n\n  private _getOption = (name: string) => {\n    const attr = this.element.getAttribute(`data-kt-drawer-${name}`)\n    if (attr) {\n      let value = getAttributeValueByBreakpoint(attr)\n      if (value !== null && String(value) === 'true') {\n        return true\n      } else {\n        if (value !== null && String(value) === 'false') {\n          return false\n        }\n      }\n\n      return value\n    } else {\n      const optionName = stringSnakeToCamel(name)\n      const option = getObjectPropertyValueByKey(this.options, optionName)\n      if (option) {\n        return getAttributeValueByBreakpoint(option)\n      } else {\n        return null\n      }\n    }\n  }\n\n  private _toggle = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.drawer.toggle') === false) {\n      return\n    }\n\n    if (this.shown) {\n      this._hide()\n    } else {\n      this._show()\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.drawer.toggled')\n  }\n\n  private _hide = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.drawer.hide') === false) {\n      return\n    }\n\n    this.shown = false\n    this._deleteOverlay()\n    document.body.removeAttribute(`data-kt-drawer-${this.name}`)\n    document.body.removeAttribute(`data-kt-drawer`)\n    this.element.classList.remove(`${this.options.baseClass}-on`)\n    if (this.toggleElement != null) {\n      this.toggleElement.classList.remove('active')\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.drawer.after.hidden')\n  }\n\n  private _show = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.drawer.show') === false) {\n      return\n    }\n\n    this.shown = true\n    this._createOverlay()\n    document.body.setAttribute(`data-kt-drawer-${this.name}`, 'on')\n    document.body.setAttribute('data-kt-drawer', 'on')\n    this.element.classList.add(`${this.options.baseClass}-on`)\n    if (this.toggleElement !== null) {\n      this.toggleElement.classList.add('active')\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.drawer.shown')\n  }\n\n  private _createOverlay = () => {\n    if (this._getOption('overlay') === true) {\n      this.overlayElement = document.createElement('DIV')\n      const elementZIndex = getCSS(this.element, 'z-index')\n      if (elementZIndex) {\n        const overlayZindex = parseInt(elementZIndex) - 1\n        ElementStyleUtil.set(this.overlayElement, 'z-index', overlayZindex) // update\n      }\n      document.body.append(this.overlayElement)\n      const overlayClassOption = this._getOption('overlay-class')\n      if (overlayClassOption) {\n        this.overlayElement.classList.add(overlayClassOption.toString())\n      }\n      this.overlayElement.addEventListener('click', (e) => {\n        e.preventDefault()\n        this._hide()\n      })\n    }\n  }\n\n  private _deleteOverlay = () => {\n    if (this.overlayElement !== null && this.overlayElement.parentNode) {\n      this.overlayElement.parentNode.removeChild(this.overlayElement)\n    }\n  }\n\n  private _getDirection = () => {\n    return String(this._getOption('direction')) === 'left' ? 'left' : 'right'\n  }\n\n  private _getWidth = () => {\n    let width = this._getOption('width')\n    if (width && width === 'auto') {\n      width = getCSS(this.element, 'width')\n    }\n\n    return width\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public toggle = () => {\n    this._toggle()\n  }\n\n  public show = () => {\n    this._show()\n  }\n\n  public hide = () => {\n    this._hide()\n  }\n\n  public isShown = () => {\n    return this.shown\n  }\n\n  public update = () => {\n    this._update()\n  }\n\n  public goElement = () => {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string, event: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Static methods\n  public static hasInstace = (elementId: string): boolean => {\n    return DrawerStore.has(elementId)\n  }\n\n  public static getInstance = (elementId: string) => {\n    return DrawerStore.get(elementId)\n  }\n\n  public static hideAll = () => {\n    const oldInstances = DrawerStore.getAllInstances()\n    oldInstances.forEach((dr) => {\n      dr.hide()\n    })\n  }\n\n  public static updateAll = () => {\n    const oldInstances = DrawerStore.getAllInstances()\n    oldInstances.forEach((dr) => {\n      dr.update()\n    })\n  }\n\n  // Create Instances\n  public static createInstances(selector: string): void {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((element) => {\n      const item = element as HTMLElement\n      let drawer = DrawerComponent.getInstance(item.id)\n      if (!drawer) {\n        drawer = new DrawerComponent(item, defaultDrawerOptions)\n      }\n      drawer.element = item\n      drawer.hide()\n    })\n  }\n\n  // Dismiss instances\n  public static handleDismiss = () => {\n    // External drawer toggle handler\n    DOMEventHandlerUtil.on(document.body, '[data-kt-drawer-dismiss=\"true\"]', 'click', () => {\n      /* @ts-ignore */\n      const element = this.closest('[data-kt-drawer=\"true\"]')\n      if (element) {\n        const drawer = DrawerComponent.getInstance(element)\n        if (drawer && drawer.isShown()) {\n          drawer.hide()\n        }\n      }\n    })\n  }\n\n  // Global Initialization\n  public static initGlobalHandlers(): void {\n    // Window Resize Handling\n    window.addEventListener('resize', function () {\n      let timer: number | undefined\n      throttle(\n        timer,\n        () => {\n          // Locate and update Drawer instances on window resize\n          const elements = document.body.querySelectorAll('[data-kt-drawer=\"true\"]')\n          elements.forEach((el) => {\n            const item = el as HTMLElement\n            const instance = DrawerComponent.getInstance(item.id)\n            if (instance) {\n              instance.element = item\n              instance.update()\n            }\n          })\n        },\n        200\n      )\n    })\n  }\n\n  public static bootstrap = () => {\n    DrawerComponent.createInstances('[data-kt-drawer=\"true\"]')\n    DrawerComponent.initGlobalHandlers()\n    DrawerComponent.handleDismiss()\n  }\n\n  public static reinitialization = () => {\n    DrawerComponent.createInstances('[data-kt-drawer=\"true\"]')\n    DrawerComponent.hideAll()\n    DrawerComponent.updateAll()\n    DrawerComponent.handleDismiss()\n  }\n}\n\nexport {DrawerComponent, defaultDrawerOptions}\n","import {\n  DataUtil,\n  ElementStyleUtil,\n  EventHandlerUtil,\n  getUniqueIdWithPrefix,\n  getAttributeValueByBreakpoint,\n} from '../_utils/index'\n\nexport interface FeedbackOptions {\n  width?: number\n  placement?: string\n  content?: string\n  type?: string\n}\n\nconst defaultFeedbackOptions: FeedbackOptions = {\n  width: 100,\n  placement: 'top-center',\n  content: '',\n  type: 'popup',\n}\n\nclass FeedbackComponent {\n  element: HTMLElement\n  options: FeedbackOptions\n  instanceUid: string\n  shown: boolean\n\n  constructor(_element: HTMLElement, options: FeedbackOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultFeedbackOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('feedback')\n    this.shown = false\n\n    // Event handlers\n    this._handlers() // will add in the show popup\n    DataUtil.set(this.element, 'feedback', this)\n  }\n\n  private _handlers = () => {\n    this.element.addEventListener('click', (e: Event) => {\n      e.preventDefault()\n      this._go()\n    })\n  }\n\n  private _go = () => {}\n\n  private showPopup = () => {\n    this.element = document.createElement('DIV')\n\n    this.element.classList.add('feedback feedback-popup')\n    this.element.innerHTML = this.options.content || ''\n\n    if (this.options.placement === 'top-center') {\n      this.setPopupTopCenterPosition()\n    }\n\n    document.body.appendChild(this.element)\n    this.element.classList.add('feedback-shown')\n    this.shown = true\n  }\n\n  private setPopupTopCenterPosition = () => {\n    const width = getAttributeValueByBreakpoint(this.options.width?.toString() || '0')\n    const height = ElementStyleUtil.get(this.element, 'height')\n    this.element.classList.add('feedback-top-center')\n    ElementStyleUtil.set(this.element, 'width', width)\n    ElementStyleUtil.set(this.element, 'left', '50%')\n    ElementStyleUtil.set(this.element, 'top', '-' + height)\n  }\n\n  private hidePopup = () => {\n    this.element.remove()\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public show = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\n      return\n    }\n\n    if (this.options.type === 'popup') {\n      this.showPopup()\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.shown')\n\n    return this\n  }\n\n  public hide = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\n      return\n    }\n\n    if (this.options.type === 'popup') {\n      this.hidePopup()\n    }\n\n    this.shown = false\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden')\n    return this\n  }\n\n  public isShown = () => {\n    return this.isShown\n  }\n\n  public getElement = () => {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string, event: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Create Instances\n  public static createInstances(selector: string) {\n    throw new Error('not implemented')\n  }\n\n  // Static methods\n  public static hasInstace(element: HTMLElement) {\n    throw new Error('not implemented')\n  }\n\n  public static getInstance(element: HTMLElement) {\n    throw new Error('not implemented')\n  }\n\n  public static bootstrap(attr: string = '[data-Feedback]') {\n    throw new Error('not implemented')\n  }\n}\n\nexport {FeedbackComponent, defaultFeedbackOptions}\n","import {EventHandlerUtil, DataUtil, getUniqueIdWithPrefix, getCSS} from '../_utils/index'\n\nexport interface IImageInputOptions {}\n\nexport interface IImageInputQueries {\n  componentName: string\n  instanseQuery: string\n  inputQuery: string\n  wrapperQuery: string\n  cancelQuery: string\n  removeQuery: string\n  hiddenQuery: string\n}\n\nconst defaultImageInputOptions = {}\n\nconst defaultImageInputQueires: IImageInputQueries = {\n  componentName: 'image-input',\n  instanseQuery: '[data-kt-image-input]',\n  inputQuery: 'input[type=\"file\"]',\n  wrapperQuery: '.image-input-wrapper',\n  cancelQuery: '[data-kt-image-input-action=\"cancel\"]',\n  removeQuery: '[data-kt-image-input-action=\"remove\"]',\n  hiddenQuery: 'input[type=\"hidden\"]',\n}\n\nclass ImageInputComponent {\n  element: HTMLElement\n  inputElement: HTMLInputElement | null\n  wrapperElement: HTMLElement | null\n  cancelElement: HTMLElement | null\n  removeElement: HTMLElement | null\n  hiddenElement: HTMLInputElement | null\n  src: string = ''\n  options: IImageInputOptions\n  queries: IImageInputQueries\n  uid: string\n  value: string = ''\n\n  constructor(_element: HTMLElement, _options: IImageInputOptions, _queries: IImageInputQueries) {\n    // Variables\n    this.options = Object.assign(defaultImageInputOptions, _options)\n    this.queries = _queries\n    this.uid = getUniqueIdWithPrefix(this.queries.componentName)\n\n    // Elements\n    this.element = _element\n    this.inputElement = this.element.querySelector(this.queries.inputQuery)\n    this.wrapperElement = this.element.querySelector(this.queries.wrapperQuery)\n    this.cancelElement = this.element.querySelector(this.queries.cancelQuery)\n    this.removeElement = this.element.querySelector(this.queries.removeQuery)\n    this.hiddenElement = this.element.querySelector(this.queries.hiddenQuery)\n    if (this.wrapperElement) {\n      this.src = getCSS(this.wrapperElement, 'backgroundImage')\n    }\n\n    // Event Handlers\n    this.handlers()\n\n    DataUtil.set(this.element, this.queries.componentName, this)\n  }\n\n  private handlers(): void {\n    this.element.addEventListener('change', this._change)\n    if (this.cancelElement) {\n      this.cancelElement.addEventListener('click', this._cancel)\n    }\n\n    if (this.removeElement) {\n      this.removeElement.addEventListener('click', this._cancel)\n    }\n  }\n\n  // Event Handlers\n  private _change = (e: Event) => {\n    e.preventDefault()\n\n    if (this.inputElement !== null && this.inputElement.files && this.inputElement.files[0]) {\n      // Fire change event\n      if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.change', e) === false) {\n        return\n      }\n\n      const reader = new FileReader()\n\n      reader.onload = (e: ProgressEvent<FileReader>) => {\n        if (this.wrapperElement && e.target) {\n          this.wrapperElement.style.setProperty('background-image', `url('${e.target.result}')`)\n        }\n      }\n\n      reader.readAsDataURL(this.inputElement.files[0])\n      this.element.classList.add('image-input-changed')\n      this.element.classList.remove('image-input-empty')\n\n      // Fire removed event\n      EventHandlerUtil.trigger(this.element, 'kt.imageinput.changed', e)\n    }\n  }\n\n  private _cancel = (e: Event) => {\n    e.preventDefault()\n\n    // Fire cancel event\n    if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.cancel', e) === false) {\n      return\n    }\n\n    this.element.classList.remove('image-input-changed')\n    this.element.classList.remove('image-input-empty')\n    this.element.style.setProperty('background-image', this.src)\n    if (this.inputElement) {\n      this.inputElement.value = ''\n    }\n\n    if (this.hiddenElement !== null) {\n      this.hiddenElement.value = '0'\n    }\n\n    // Fire canceled event\n    EventHandlerUtil.trigger(this.element, 'kt.imageinput.canceled', e)\n  }\n\n  private _remove = (e: Event) => {\n    e.preventDefault()\n\n    // Fire remove event\n    if (EventHandlerUtil.trigger(this.element, 'kt.imageinput.remove', e) === false) {\n      return\n    }\n\n    this.element.classList.remove('image-input-changed')\n    this.element.classList.add('image-input-empty')\n    if (this.wrapperElement) {\n      this.wrapperElement.style.setProperty('background-image', 'none')\n    }\n\n    if (this.inputElement) {\n      this.inputElement.value = ''\n    }\n\n    if (this.hiddenElement !== null) {\n      this.hiddenElement.value = '1'\n    }\n\n    // Fire removed event\n    EventHandlerUtil.trigger(this.element, 'kt.imageinput.removed', e)\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public getInputElement(): HTMLInputElement | null {\n    return this.inputElement\n  }\n\n  public getElement(): HTMLElement {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string, event: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Static methods\n  public static getInstance = (\n    el: HTMLElement,\n    componentName: string = defaultImageInputQueires.componentName\n  ) => {\n    const ImageInput = DataUtil.get(el, componentName)\n    if (ImageInput) {\n      return ImageInput\n    }\n\n    return null\n  }\n\n  public static createInstances = (\n    selector: string = defaultImageInputQueires.instanseQuery,\n    options: IImageInputOptions = defaultImageInputOptions,\n    queries: IImageInputQueries = defaultImageInputQueires\n  ) => {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((el) => {\n      const item = el as HTMLElement\n      let ImageInput = ImageInputComponent.getInstance(item)\n      if (!ImageInput) {\n        ImageInput = new ImageInputComponent(item, options, queries)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string = defaultImageInputQueires.instanseQuery,\n    options: IImageInputOptions = defaultImageInputOptions,\n    queries: IImageInputQueries = defaultImageInputQueires\n  ): ImageInputComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let ImageInput = ImageInputComponent.getInstance(item)\n    if (!ImageInput) {\n      ImageInput = new ImageInputComponent(item, options, queries)\n    }\n    return ImageInput\n  }\n\n  public static bootstrap = (selector: string = defaultImageInputQueires.instanseQuery) => {\n    ImageInputComponent.createInstances(selector)\n  }\n\n  public static reinitialization = (selector: string = defaultImageInputQueires.instanseQuery) => {\n    ImageInputComponent.createInstances(selector)\n  }\n}\nexport {ImageInputComponent, defaultImageInputOptions, defaultImageInputQueires}\n","import {\n  DataUtil,\n  getObjectPropertyValueByKey,\n  stringSnakeToCamel,\n  getAttributeValueByBreakpoint,\n  getViewPort,\n  isVisibleElement,\n  throttle,\n  getCSS,\n  ElementStyleUtil,\n} from '../_utils/index'\nimport {CookieComponent} from './_CookieComponent'\n\nexport interface ScrollOptions {\n  saveState?: boolean\n}\n\nconst defaultScrollOptions: ScrollOptions = {\n  saveState: true,\n}\n\nclass ScrollComponent {\n  element: HTMLElement\n  options: ScrollOptions\n  id: string\n\n  constructor(_element: HTMLElement, options: ScrollOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultScrollOptions, options)\n    this.id = this.element.getAttribute('id') || ''\n    this.update()\n    // this.element.setAttribute('data-kt-scrolltop', 'true')\n    DataUtil.set(this.element, 'scroll', this)\n  }\n\n  private getOption = (name: string) => {\n    if (this.element.hasAttribute('data-kt-scroll-' + name) === true) {\n      const attr = this.element.getAttribute('data-kt-scroll-' + name) || ''\n      let value: string | JSON | boolean = getAttributeValueByBreakpoint(attr)\n      if (value !== null && String(value) === 'true') {\n        value = true\n      } else if (value !== null && String(value) === 'false') {\n        value = false\n      }\n\n      return value\n    } else {\n      const optionName = stringSnakeToCamel(name)\n      const option = getObjectPropertyValueByKey(this.options, optionName)\n      if (option) {\n        return getAttributeValueByBreakpoint(option)\n      } else {\n        return null\n      }\n    }\n  }\n\n  private getHeightType = () => {\n    if (this.getOption('height')) {\n      return 'height'\n    }\n    if (this.getOption('min-height')) {\n      return 'min-height'\n    }\n    if (this.getOption('max-height')) {\n      return 'max-height'\n    }\n  }\n\n  private getAutoHeight = () => {\n    let height: number | string = getViewPort().height\n    const dependencies = this.getOption('dependencies')\n    const wrappers = this.getOption('wrappers')\n    const offset = this.getOption('offset')\n\n    // Height dependencies\n    if (dependencies !== null) {\n      const elements = document.querySelectorAll(dependencies as string)\n      if (elements && elements.length > 0) {\n        for (let i = 0, len = elements.length; i < len; i++) {\n          const element = elements[i] as HTMLElement\n          if (isVisibleElement(element) === false) {\n            continue\n          }\n\n          height = height - parseInt(getCSS(element, 'height'))\n          height = height - parseInt(getCSS(element, 'margin-top'))\n          height = height - parseInt(getCSS(element, 'margin-bottom'))\n\n          const borderTop = getCSS(element, 'border-top')\n          if (borderTop) {\n            height = height - parseInt(borderTop)\n          }\n\n          const borderBottom = getCSS(element, 'border-bottom')\n          if (borderBottom) {\n            height = height - parseInt(borderBottom)\n          }\n        }\n      }\n    }\n\n    // Wrappers\n    if (wrappers !== null) {\n      var elements = document.querySelectorAll(wrappers as string)\n      if (elements && elements.length > 0) {\n        for (let i = 0, len = elements.length; i < len; i++) {\n          const element = elements[i] as HTMLElement\n\n          if (!isVisibleElement(element)) {\n            continue\n          }\n\n          height = height - parseInt(getCSS(element, 'margin-top'))\n          height = height - parseInt(getCSS(element, 'margin-bottom'))\n          height = height - parseInt(getCSS(element, 'padding-top'))\n          height = height - parseInt(getCSS(element, 'padding-bottom'))\n\n          const borderTop = getCSS(element, 'border-top')\n          if (borderTop) {\n            height = height - parseInt(borderTop)\n          }\n\n          const borderBottom = getCSS(element, 'border-bottom')\n          if (borderBottom) {\n            height = height - parseInt(borderBottom)\n          }\n        }\n      }\n    }\n\n    // Custom offset\n    if (offset !== null) {\n      height = height - parseInt(offset as string)\n    }\n\n    height = height - parseInt(getCSS(this.element, 'margin-top'))\n    height = height - parseInt(getCSS(this.element, 'margin-bottom'))\n\n    const borderTop = getCSS(this.element, 'border-top')\n    if (borderTop) {\n      height = height - parseInt(borderTop)\n    }\n\n    const borderBottom = getCSS(this.element, 'border-bottom')\n    if (borderBottom) {\n      height = height - parseInt(borderBottom)\n    }\n\n    height = String(height) + 'px'\n\n    return height\n  }\n\n  private setupHeight = () => {\n    let height = this.getHeight()\n    let heightType = this.getHeightType() as string\n\n    // Set height\n    if (height !== null && height.length > 0) {\n      ElementStyleUtil.set(this.element, heightType, height)\n    } else {\n      ElementStyleUtil.set(this.element, heightType, '')\n    }\n  }\n\n  private setupState = () => {\n    if (this.getOption('save-state') === true && this.id) {\n      const cookie = CookieComponent.get(this.id + 'st')\n      if (cookie) {\n        var pos = parseInt(cookie)\n\n        if (pos > 0) {\n          this.element.scrollTop = pos\n        }\n      }\n    }\n  }\n\n  private setupScrollHandler = () => {\n    if (this.getOption('save-state') === true && this.id) {\n      this.element.addEventListener('scroll', this.scrollHandler)\n    } else {\n      this.element.removeEventListener('scroll', this.scrollHandler)\n    }\n  }\n\n  private scrollHandler = () => {\n    const cookieId = this.id + 'st'\n    CookieComponent.set(cookieId, this.element.scrollTop, {})\n  }\n\n  private destroyScrollHandler = () => {\n    this.element.removeEventListener('scroll', this.scrollHandler)\n  }\n\n  private resetHeight = () => {\n    const heghtType = this.getHeightType()\n    if (heghtType) {\n      ElementStyleUtil.set(this.element, heghtType, '')\n    }\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public update = () => {\n    // Activate/deactivate\n    if (\n      this.getOption('activate') === true ||\n      !this.element.hasAttribute('data-kt-scroll-activate')\n    ) {\n      this.setupHeight()\n      this.setupScrollHandler()\n      this.setupState()\n    } else {\n      this.resetHeight()\n      this.destroyScrollHandler()\n    }\n  }\n\n  public getHeight = () => {\n    const heightType = this.getHeightType()\n    const height = this.getOption(heightType || '')\n    if (height instanceof Function) {\n      return height.call(height)\n    } else if (height !== null && typeof height === 'string' && height.toLowerCase() === 'auto') {\n      return this.getAutoHeight()\n    } else {\n      return height\n    }\n  }\n\n  public getElement = () => {\n    return this.element\n  }\n\n  // Static methods\n  public static hasInstace(element: HTMLElement) {\n    return DataUtil.has(element, 'scroll')\n  }\n\n  public static getInstance(element: HTMLElement) {\n    if (element !== null && ScrollComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'scroll')\n    }\n  }\n\n  // Create Instances\n  public static createInstances(selector: string) {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((element: Element) => {\n      const item = element as HTMLElement\n      let scroll = ScrollComponent.getInstance(item)\n      if (!scroll) {\n        scroll = new ScrollComponent(item, defaultScrollOptions)\n      }\n    })\n  }\n\n  public static destroyAll(attr: string = '[data-kt-scroll=\"true\"]') {}\n\n  public static bootstrap(attr: string = '[data-kt-scroll=\"true\"]') {\n    ScrollComponent.createInstances(attr)\n    ScrollComponent.resize()\n  }\n\n  public static createInstance = (\n    element: HTMLElement,\n    options: ScrollOptions = defaultScrollOptions\n  ): ScrollComponent | undefined => {\n    let scroll = ScrollComponent.getInstance(element)\n    if (!scroll) {\n      scroll = new ScrollComponent(element, options)\n    }\n    return scroll\n  }\n\n  public static reinitialization(attr: string = '[data-kt-scroll=\"true\"]') {\n    ScrollComponent.createInstances(attr)\n  }\n\n  public static updateAll() {\n    const elements = document.body.querySelectorAll('[data-kt-scroll=\"true\"]')\n    elements.forEach((element: Element) => {\n      const instance = ScrollComponent.getInstance(element as HTMLElement)\n      if (instance) {\n        instance.update()\n      }\n    })\n  }\n\n  public static resize() {\n    // Window Resize Handling\n    window.addEventListener('resize', function () {\n      let timer\n      throttle(\n        timer,\n        () => {\n          // Locate and update Drawer instances on window resize\n          ScrollComponent.updateAll()\n        },\n        200\n      )\n    })\n  }\n}\n\nexport {ScrollComponent, defaultScrollOptions}\n","import {\n  getScrollTop,\n  getAttributeValueByBreakpoint,\n  throttle,\n  getObjectPropertyValueByKey,\n  stringSnakeToCamel,\n  getUniqueIdWithPrefix,\n  DataUtil,\n  ElementAnimateUtil,\n} from '../_utils/index'\n\nexport interface IScrollTopOptions {\n  offset: number\n  speed: number\n}\n\nconst defaultScrollTopOptions: IScrollTopOptions = {\n  offset: 200,\n  speed: 600,\n}\n\nclass ScrollTopComponent {\n  element: HTMLElement\n  options: IScrollTopOptions\n  instanceUid: string\n\n  constructor(_element: HTMLElement, options: IScrollTopOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultScrollTopOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('scrolltop')\n\n    // Event Handlers\n    this._handlers()\n\n    // Bind Instance\n    DataUtil.set(this.element, 'scrolltop', this)\n  }\n\n  private _handlers = () => {\n    let timer: number\n    window.addEventListener('scroll', () => {\n      throttle(timer, () => {\n        this._scroll()\n      })\n    })\n\n    this.element.addEventListener('click', (e: Event) => {\n      e.preventDefault()\n      this._go()\n    })\n  }\n\n  private _scroll = () => {\n    const offset = parseInt(this._getOption('offset') as string)\n    const pos = getScrollTop() // current vertical position\n    if (pos > offset) {\n      if (!document.body.hasAttribute('data-kt-scrolltop')) {\n        document.body.setAttribute('data-kt-scrolltop', 'on')\n      }\n    } else {\n      if (document.body.hasAttribute('data-kt-scrolltop')) {\n        document.body.removeAttribute('data-kt-scrolltop')\n      }\n    }\n  }\n\n  private _go = () => {\n    const speed = parseInt(this._getOption('speed') as string)\n    ElementAnimateUtil.scrollTop(0, speed)\n  }\n\n  private _getOption = (name: string) => {\n    const attr = this.element.getAttribute(`data-kt-scrolltop-${name}`)\n    if (attr) {\n      const value = getAttributeValueByBreakpoint(attr)\n      return value !== null && String(value) === 'true'\n    }\n\n    const optionName = stringSnakeToCamel(name)\n    const option = getObjectPropertyValueByKey(this.options, optionName)\n    if (option) {\n      return getAttributeValueByBreakpoint(option)\n    }\n\n    return null\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n\n  // Plugin API\n  public go = () => {\n    return this._go()\n  }\n\n  public getElement = () => {\n    return this.element\n  }\n\n  // Static methods\n  public static getInstance = (el: HTMLElement) => {\n    const scrollTop = DataUtil.get(el, 'scrolltop')\n    if (scrollTop) {\n      return scrollTop\n    }\n\n    return null\n  }\n\n  public static createInstances = (selector: string) => {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((el) => {\n      const item = el as HTMLElement\n      let scrollTop = ScrollTopComponent.getInstance(item)\n      if (!scrollTop) {\n        scrollTop = new ScrollTopComponent(item, defaultScrollTopOptions)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string,\n    options: IScrollTopOptions = defaultScrollTopOptions\n  ): ScrollTopComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let scrollTop = ScrollTopComponent.getInstance(item)\n    if (!scrollTop) {\n      scrollTop = new ScrollTopComponent(item, options)\n    }\n    return scrollTop\n  }\n\n  public static bootstrap = () => {\n    ScrollTopComponent.createInstances('[data-kt-scrolltop=\"true\"]')\n  }\n\n  public static reinitialization = () => {\n    ScrollTopComponent.createInstances('[data-kt-scrolltop=\"true\"]')\n  }\n\n  public static goTop = () => {\n    ElementAnimateUtil.scrollTop(0, defaultScrollTopOptions.speed)\n  }\n}\nexport {ScrollTopComponent, defaultScrollTopOptions}\n","import {\n  getElementIndex,\n  getUniqueIdWithPrefix,\n  ElementAnimateUtil,\n  EventHandlerUtil,\n  DataUtil,\n  DOMEventHandlerUtil,\n  ElementStyleUtil,\n} from '../_utils/index'\n\nexport interface IStepperOptions {\n  startIndex: number\n  animation: boolean\n  animationSpeed: string\n  animationNextClass: string\n  animationPreviousClass: string\n}\n\nconst defaultStepperOptions: IStepperOptions = {\n  startIndex: 1,\n  animation: false,\n  animationSpeed: '0.3s',\n  animationNextClass: 'animate__animated animate__slideInRight animate__fast',\n  animationPreviousClass: 'animate__animated animate__slideInLeft animate__fast',\n}\n\nclass StepperComponent {\n  element: HTMLElement\n  options: IStepperOptions\n  instanceUid: string\n  steps: NodeListOf<HTMLElement>\n  btnNext: HTMLElement | null\n  btnPrev: HTMLElement | null\n  btnSubmit: HTMLElement | null\n  totatStepsNumber: number = 0\n  passedStepIndex: number = 0\n  currentStepIndex: number = 1\n\n  constructor(_element: HTMLElement, options: IStepperOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultStepperOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('stepper')\n\n    // Elements\n    this.steps = this.element.querySelectorAll('[data-kt-stepper-element=\"nav\"]')\n    this.btnNext = this.element.querySelector('[data-kt-stepper-action=\"next\"]')\n    this.btnPrev = this.element.querySelector('[data-kt-stepper-action=\"previous\"]')\n    this.btnSubmit = this.element.querySelector('[data-kt-stepper-action=\"submit\"]')\n\n    // Variables\n    this.totatStepsNumber = this.steps?.length | 0\n    this.passedStepIndex = 0\n    this.currentStepIndex = 1\n\n    // Set Current Step\n    if (this.options.startIndex > 1) {\n      this._goTo(this.options.startIndex)\n    }\n\n    // Event Handlers\n    this.initHandlers()\n\n    // Bind Instance\n    DataUtil.set(this.element, 'stepper', this)\n  }\n\n  private _goTo = (index: number) => {\n    EventHandlerUtil.trigger(this.element, 'kt.stepper.change')\n    // Skip if this step is already shown\n    if (index === this.currentStepIndex || index > this.totatStepsNumber || index < 0) {\n      return\n    }\n\n    // Validate step number\n    index = parseInt(index.toString())\n    // Set current step\n    this.passedStepIndex = this.currentStepIndex\n    this.currentStepIndex = index\n\n    // Refresh elements\n    this.refreshUI()\n\n    EventHandlerUtil.trigger(this.element, 'kt.stepper.changed')\n  }\n\n  private initHandlers = () => {\n    this.btnNext?.addEventListener('click', (e: Event) => {\n      e.preventDefault()\n\n      EventHandlerUtil.trigger(this.element, 'kt.stepper.next', e)\n    })\n\n    this.btnPrev?.addEventListener('click', (e: Event) => {\n      e.preventDefault()\n\n      EventHandlerUtil.trigger(this.element, 'kt.stepper.previous', e)\n    })\n\n    DOMEventHandlerUtil.on(this.element, '[data-kt-stepper-action=\"step\"]', 'click', (e: Event) => {\n      e.preventDefault()\n\n      if (this.steps && this.steps.length > 0) {\n        for (let i = 0; i < this.steps.length; i++) {\n          if ((this.steps[i] as HTMLElement) === this.element) {\n            let index = i + 1\n\n            const stepDirection = this._getStepDirection(index)\n            EventHandlerUtil.trigger(this.element, `stepper.${stepDirection}`, e)\n            return\n          }\n        }\n      }\n    })\n  }\n\n  private _getStepDirection = (index: number) => {\n    return index > this.currentStepIndex ? 'next' : 'previous'\n  }\n\n  private getStepContent = (index: number) => {\n    const content = this.element.querySelectorAll('[data-kt-stepper-element=\"content\"]')\n    if (!content) {\n      return false\n    }\n\n    if (content[index - 1]) {\n      return content[index - 1]\n    }\n\n    return false\n  }\n\n  private getLastStepIndex = () => {\n    return this.totatStepsNumber\n  }\n\n  private getTotalStepsNumber = () => {\n    return this.totatStepsNumber\n  }\n\n  private refreshUI = () => {\n    let state = ''\n\n    if (this.isLastStep()) {\n      state = 'last'\n    } else if (this.isFirstStep()) {\n      state = 'first'\n    } else {\n      state = 'between'\n    }\n\n    // Set state class\n    this.element.classList.remove('last')\n    this.element.classList.remove('first')\n    this.element.classList.remove('between')\n\n    this.element.classList.add(state)\n\n    // Step Items\n    const elements = this.element.querySelectorAll(\n      '[data-kt-stepper-element=\"nav\"], [data-kt-stepper-element=\"content\"], [data-kt-stepper-element=\"info\"]'\n    )\n\n    if (!elements || elements.length <= 0) {\n      return\n    }\n\n    for (var i = 0, len = elements.length; i < len; i++) {\n      var element = elements[i] as HTMLElement\n      var index = getElementIndex(element) + 1\n\n      element.classList.remove('current')\n      element.classList.remove('completed')\n      element.classList.remove('pending')\n\n      if (index === this.currentStepIndex) {\n        element.classList.add('current')\n\n        if (\n          this.options.animation !== false &&\n          element.getAttribute('data-kt-stepper-element') === 'content'\n        ) {\n          ElementStyleUtil.set(element, 'animationDuration', this.options.animationSpeed)\n\n          const animation =\n            this._getStepDirection(this.passedStepIndex) === 'previous'\n              ? this.options.animationPreviousClass\n              : this.options.animationNextClass\n          ElementAnimateUtil.animateClass(element, animation)\n        }\n      } else {\n        if (index < this.currentStepIndex) {\n          element.classList.add('completed')\n        } else {\n          element.classList.add('pending')\n        }\n      }\n    }\n  }\n\n  private isLastStep = () => {\n    return this.currentStepIndex === this.totatStepsNumber\n  }\n\n  private isFirstStep = () => {\n    return this.currentStepIndex === 1\n  }\n\n  private isBetweenStep = () => {\n    return this.isLastStep() === false && this.isFirstStep() === false\n  }\n\n  //   ///////////////////////\n  //   // ** Public API  ** //\n  //   ///////////////////////\n\n  //   // Plugin API\n  public goto = (index: number) => {\n    return this._goTo(index)\n  }\n\n  public goNext = () => {\n    return this.goto(this.getNextStepIndex())\n  }\n\n  public goPrev = () => {\n    return this.goto(this.getPrevStepIndex())\n  }\n\n  public goFirst = () => {\n    return this.goto(1)\n  }\n\n  public goLast = () => {\n    return this.goto(this.getLastStepIndex())\n  }\n\n  public getCurrentStepIndex = () => {\n    return this.currentStepIndex\n  }\n\n  public getNextStepIndex = () => {\n    if (this.totatStepsNumber >= this.currentStepIndex + 1) {\n      return this.currentStepIndex + 1\n    } else {\n      return this.totatStepsNumber\n    }\n  }\n\n  public getPassedStepIndex = () => {\n    return this.passedStepIndex\n  }\n\n  public getPrevStepIndex = () => {\n    if (this.currentStepIndex - 1 > 1) {\n      return this.currentStepIndex - 1\n    } else {\n      return 1\n    }\n  }\n\n  public getElement = (index: number) => {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public destroy = () => {\n    // console.log('destroy stepper')\n  }\n\n  public trigger = (name: string, event: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Static methods\n  public static hasInstace(element: HTMLElement): boolean {\n    return DataUtil.has(element, 'stepper')\n  }\n\n  public static getInstance(element: HTMLElement): StepperComponent | null {\n    if (element !== null && StepperComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'stepper')\n    }\n    return null\n  }\n\n  // Create Instances\n  public static createInstances(selector: string): void {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((element) => {\n      const item = element as HTMLElement\n      let stepper = StepperComponent.getInstance(item)\n      if (!stepper) {\n        stepper = new StepperComponent(item, defaultStepperOptions)\n      }\n    })\n  }\n\n  public static createInsance = (\n    element: HTMLElement,\n    options: IStepperOptions = defaultStepperOptions\n  ): StepperComponent | null => {\n    if (!element) {\n      return null\n    }\n    let stepper = StepperComponent.getInstance(element)\n    if (!stepper) {\n      stepper = new StepperComponent(element, options)\n    }\n    return stepper\n  }\n\n  public static bootstrap(attr: string = '[data-kt-stepper]') {\n    StepperComponent.createInstances(attr)\n  }\n}\n\nexport {StepperComponent, defaultStepperOptions}\n","import {\n  getElementOffset,\n  getScrollTop,\n  getAttributeValueByBreakpoint,\n  getUniqueIdWithPrefix,\n  getObjectPropertyValueByKey,\n  stringSnakeToCamel,\n  getCSS,\n  DataUtil,\n  ElementAnimateUtil,\n  ElementStyleUtil,\n  EventHandlerUtil,\n} from '../_utils/index'\n\nexport interface StickyOptions {\n  offset: number\n  reverse: boolean\n  animation: boolean\n  animationSpeed: string\n  animationClass: string\n}\n\nconst defaultStickyOptions: StickyOptions = {\n  offset: 200,\n  reverse: false,\n  animation: true,\n  animationSpeed: '0.3s',\n  animationClass: 'animation-slide-in-down',\n}\n\nclass StickyComponent {\n  element: HTMLElement\n  options: StickyOptions\n  instanceUid: string\n  instanceName: string | null = ''\n  attributeName: string\n  eventTriggerState: boolean\n  lastScrollTop: number\n\n  constructor(_element: HTMLElement, options: StickyOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultStickyOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('sticky')\n    this.instanceName = this.element.getAttribute('data-kt-sticky-name')\n    this.attributeName = 'data-kt-sticky-' + this.instanceName\n    this.eventTriggerState = true\n    this.lastScrollTop = 0\n\n    // Event Handlers\n    window.addEventListener('scroll', this.scroll)\n\n    // Initial Launch\n    this.scroll()\n\n    DataUtil.set(this.element, 'sticky', this)\n  }\n\n  private scroll = () => {\n    let offset = this.getOption('offset')\n    let reverse = this.getOption('reverse')\n\n    // Exit if false\n    if (offset === false) {\n      return\n    }\n\n    let offsetNum = 0\n    if (typeof offset === 'string') {\n      offsetNum = parseInt(offset)\n    }\n\n    const st = getScrollTop()\n\n    // Reverse scroll mode\n    if (reverse === true) {\n      // Release on reverse scroll mode\n      if (st > offsetNum && this.lastScrollTop < st) {\n        if (document.body.hasAttribute(this.attributeName) === false) {\n          this.enable()\n          document.body.setAttribute(this.attributeName, 'on')\n        }\n\n        if (this.eventTriggerState === true) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.on')\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n\n          this.eventTriggerState = false\n        }\n      } else {\n        // Back scroll mode\n        if (document.body.hasAttribute(this.attributeName)) {\n          this.disable()\n          document.body.removeAttribute(this.attributeName)\n        }\n\n        if (this.eventTriggerState === false) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.off')\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n\n          this.eventTriggerState = true\n        }\n      }\n\n      this.lastScrollTop = st\n      return\n    }\n\n    // Classic scroll mode\n    if (st > offsetNum) {\n      if (document.body.hasAttribute(this.attributeName) === false) {\n        this.enable()\n        document.body.setAttribute(this.attributeName, 'on')\n      }\n\n      if (this.eventTriggerState === true) {\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.on')\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n        this.eventTriggerState = false\n      }\n    } else {\n      // back scroll mode\n      if (document.body.hasAttribute(this.attributeName) === true) {\n        this.disable()\n        document.body.removeAttribute(this.attributeName)\n      }\n\n      if (this.eventTriggerState === false) {\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.off')\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n        this.eventTriggerState = true\n      }\n    }\n  }\n\n  private getOption = (name: string) => {\n    const dataStickyAttr = 'data-kt-sticky-' + name\n    if (this.element.hasAttribute(dataStickyAttr) === true) {\n      const attrValueInStr = this.element.getAttribute(dataStickyAttr)\n      const attrValue = getAttributeValueByBreakpoint(attrValueInStr || '')\n      if (attrValue !== null && String(attrValue) === 'true') {\n        return true\n      } else if (attrValue !== null && String(attrValue) === 'false') {\n        return false\n      }\n\n      return attrValue\n    } else {\n      const optionName = stringSnakeToCamel(name)\n      const option = getObjectPropertyValueByKey(this.options, optionName)\n      if (option) {\n        return getAttributeValueByBreakpoint(option)\n      }\n    }\n  }\n\n  private disable = () => {\n    ElementStyleUtil.remove(this.element, 'top')\n    ElementStyleUtil.remove(this.element, 'width')\n    ElementStyleUtil.remove(this.element, 'left')\n    ElementStyleUtil.remove(this.element, 'right')\n    ElementStyleUtil.remove(this.element, 'z-index')\n    ElementStyleUtil.remove(this.element, 'position')\n  }\n\n  private enable = (update: boolean = false) => {\n    const top = this.getOption('top')\n    const left = this.getOption('left')\n    // const right = this.getOption(\"right\");\n    let width = this.getOption('width')\n    const zindex = this.getOption('zindex')\n\n    if (update !== true && this.getOption('animation') === true) {\n      ElementStyleUtil.set(this.element, 'animationDuration', this.getOption('animationSpeed'))\n      ElementAnimateUtil.animateClass(this.element, 'animation ' + this.getOption('animationClass'))\n    }\n\n    if (zindex !== null) {\n      ElementStyleUtil.set(this.element, 'z-index', zindex)\n      ElementStyleUtil.set(this.element, 'position', 'fixed')\n    }\n\n    if (top !== null) {\n      ElementStyleUtil.set(this.element, 'top', top)\n    }\n\n    if (width !== null && width !== undefined) {\n      const widthTarget = getObjectPropertyValueByKey(width, 'target')\n      if (widthTarget) {\n        const targetElement = document.querySelector(widthTarget)\n        if (targetElement) {\n          width = getCSS(targetElement, 'width')\n        }\n      }\n      ElementStyleUtil.set(this.element, 'width', width)\n    }\n\n    if (left !== null) {\n      if (String(left).toLowerCase() === 'auto') {\n        var offsetLeft = getElementOffset(this.element).left\n\n        if (offsetLeft > 0) {\n          ElementStyleUtil.set(this.element, 'left', String(offsetLeft) + 'px')\n        }\n      }\n    }\n  }\n\n  public update = () => {\n    if (document.body.hasAttribute(this.attributeName) === true) {\n      this.disable()\n      document.body.removeAttribute(this.attributeName)\n      this.enable(true)\n      document.body.setAttribute(this.attributeName, 'on')\n    }\n  }\n\n  // Event API\n  public on = (name: string, callBack: Function) => {\n    return EventHandlerUtil.on(this.element, name, callBack)\n  }\n\n  public one = (name: string, callback: Function) => {\n    return EventHandlerUtil.one(this.element, name, callback)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string) => {\n    return EventHandlerUtil.trigger(this.element, name)\n  }\n\n  // Static methods\n  public static hasInstace(element: HTMLElement) {\n    return DataUtil.has(element, 'sticky')\n  }\n\n  public static getInstance(element: HTMLElement) {\n    if (element !== null && StickyComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'sticky')\n    }\n  }\n\n  // Create Instances\n  public static createInstances(selector: string) {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((element) => {\n      const item = element as HTMLElement\n      let sticky = StickyComponent.getInstance(item)\n      if (!sticky) {\n        sticky = new StickyComponent(item, defaultStickyOptions)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string,\n    options: StickyOptions = defaultStickyOptions\n  ): StickyComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let sticky = StickyComponent.getInstance(item)\n    if (!sticky) {\n      sticky = new StickyComponent(item, options)\n    }\n    return sticky\n  }\n\n  public static bootstrap(attr: string = '[data-kt-sticky=\"true\"]') {\n    StickyComponent.createInstances(attr)\n  }\n\n  public static reInitialization(attr: string = '[data-kt-sticky=\"true\"]') {\n    StickyComponent.createInstances(attr)\n  }\n}\n\nexport {StickyComponent, defaultStickyOptions}\n","import {DataUtil, getUniqueIdWithPrefix, EventHandlerUtil} from '../_utils/index'\n// Helpers\nimport {CookieComponent} from './_CookieComponent'\n\nexport interface ToggleOptions {\n  saveState: boolean\n  targetState?: string\n  toggleState?: string\n  targetToggleMode?: string\n}\n\nconst defaultToggleOptions: ToggleOptions = {\n  saveState: false,\n}\n\nclass ToggleComponent {\n  element: HTMLElement\n  instanceUid: string\n  options: ToggleOptions\n  state: string = ''\n  target: HTMLElement | null = null\n  attribute: string = ''\n\n  constructor(_element: HTMLElement, options: ToggleOptions) {\n    this.options = Object.assign(defaultToggleOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('toggle')\n    this.element = _element\n\n    const elementTargetAttr = this.element.getAttribute('data-kt-toggle-target')\n    if (elementTargetAttr) {\n      this.target = document.querySelector(elementTargetAttr)\n    }\n    const elementToggleAttr = this.element.getAttribute('data-kt-toggle-state')\n    this.state = elementToggleAttr || ''\n    this.attribute = 'data-kt-' + this.element.getAttribute('data-kt-toggle-name')\n\n    // Event Handlers\n    this._handlers()\n\n    // Update Instance\n    // Bind Instance\n    DataUtil.set(this.element, 'toggle', this)\n  }\n\n  private _handlers = () => {\n    this.element.addEventListener('click', (e: Event) => {\n      e.preventDefault()\n      this._toggle()\n    })\n  }\n\n  // Event handlers\n  private _toggle = () => {\n    // Trigger \"after.toggle\" event\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.change')\n\n    if (this._isEnabled()) {\n      this._disable()\n    } else {\n      this._enable()\n    }\n\n    // Trigger \"before.toggle\" event\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.changed')\n    return this\n  }\n\n  private _enable = () => {\n    if (this._isEnabled()) {\n      return\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.enable')\n    this.target?.setAttribute(this.attribute, 'on')\n    if (this.state.length > 0) {\n      this.element.classList.add(this.state)\n    }\n\n    if (this.options.saveState) {\n      CookieComponent.set(this.attribute, 'on', {})\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.enabled')\n    return this\n  }\n\n  private _disable = () => {\n    if (!this._isEnabled()) {\n      return false\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.disable')\n    this.target?.removeAttribute(this.attribute)\n\n    if (this.state.length > 0) {\n      this.element.classList.remove(this.state)\n    }\n\n    if (this.options.saveState) {\n      CookieComponent.delete(this.attribute)\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.disabled')\n    return this\n  }\n\n  private _isEnabled = () => {\n    if (!this.target) {\n      return false\n    }\n\n    return String(this.target.getAttribute(this.attribute)).toLowerCase() === 'on'\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n\n  // Plugin API\n  // Plugin API\n  public toggle = () => {\n    return this._toggle()\n  }\n\n  public enable = () => {\n    return this._enable()\n  }\n\n  public disable = () => {\n    return this._disable()\n  }\n\n  public isEnabled = () => {\n    return this._isEnabled()\n  }\n\n  public goElement = () => {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string, event?: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Static methods\n  public static getInstance = (el: HTMLElement) => {\n    const toggleElement = DataUtil.get(el, 'toggle')\n    if (toggleElement) {\n      return toggleElement\n    }\n\n    return null\n  }\n\n  public static createInstances = (selector: string) => {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((el) => {\n      const item = el as HTMLElement\n      let toggleElement = ToggleComponent.getInstance(item)\n      if (!toggleElement) {\n        toggleElement = new ToggleComponent(item, defaultToggleOptions)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string,\n    options: ToggleOptions = defaultToggleOptions\n  ): ToggleComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let toggle = ToggleComponent.getInstance(item)\n    if (!toggle) {\n      toggle = new ToggleComponent(item, options)\n    }\n    return toggle\n  }\n\n  public static reinitialization = () => {\n    ToggleComponent.createInstances('[data-kt-toggle]')\n  }\n\n  public static bootstrap = () => {\n    ToggleComponent.createInstances('[data-kt-toggle]')\n  }\n}\n\nexport {ToggleComponent, defaultToggleOptions}\n","/* eslint-disable array-callback-return */\n/* eslint-disable no-useless-escape */\nimport {DataUtil} from '../_utils/index'\n\nexport interface IPasswordMeterOptions {\n  minLength: number\n  checkUppercase: boolean\n  checkLowercase: boolean\n  checkDigit: boolean\n  checkChar: boolean\n  scoreHighlightClass: string\n}\n\nexport interface IPasswordMeterQueries {\n  componentName: string\n  instanseQuery: string\n  inputQuery: string\n  visibilityQuery: string\n  highlightQuery: string\n}\n\nconst defaultPasswordMeterOptions = {\n  minLength: 8,\n  checkUppercase: true,\n  checkLowercase: true,\n  checkDigit: true,\n  checkChar: true,\n  scoreHighlightClass: 'active',\n}\n\nconst defaultPasswordMeterQueires: IPasswordMeterQueries = {\n  componentName: 'password-meter',\n  instanseQuery: '[data-kt-password-meter]',\n  inputQuery: 'input[type]',\n  visibilityQuery: '[data-kt-password-meter-control=\"visibility\"]',\n  highlightQuery: '[data-kt-password-meter-control=\"highlight\"]',\n}\n\nclass PasswordMeterComponent {\n  element: HTMLElement\n  inputElement: HTMLInputElement | null\n  visibilityElement: HTMLElement | null\n  highlightElement: HTMLElement | null\n  options: IPasswordMeterOptions\n  queries: IPasswordMeterQueries\n  score: number\n  checkSteps: number\n\n  constructor(\n    _element: HTMLElement,\n    _options: IPasswordMeterOptions,\n    _queries: IPasswordMeterQueries\n  ) {\n    this.element = _element\n    this.options = Object.assign(defaultPasswordMeterOptions, _options)\n    this.queries = _queries\n    this.score = 0\n    this.checkSteps = 5\n\n    // Elements\n    this.inputElement = this.element.querySelector(this.queries.inputQuery)\n    this.visibilityElement = this.element.querySelector(this.queries.visibilityQuery)\n    this.highlightElement = this.element.querySelector(this.queries.highlightQuery)\n\n    // Event Handlers\n    this.handlers()\n\n    DataUtil.set(this.element, this.queries.componentName, this)\n  }\n\n  private handlers(): void {\n    if (this.inputElement) {\n      this.inputElement.addEventListener('input', () => {\n        this.check()\n      })\n    }\n\n    if (this.visibilityElement) {\n      this.visibilityElement.addEventListener('click', () => {\n        this.visitbility()\n      })\n    }\n  }\n\n  private visitbility() {\n    if (this.visibilityElement && this.inputElement) {\n      const visibleIcon = this.visibilityElement.querySelector(\n        'i:not(.d-none), .svg-icon:not(.d-none)'\n      )\n\n      const hiddenIcon = this.visibilityElement.querySelector('i.d-none, .svg-icon.d-none')\n\n      const typeAttr = this.inputElement.getAttribute('type') || ''\n\n      if (typeAttr === 'password') {\n        this.inputElement.setAttribute('type', 'text')\n      } else {\n        this.inputElement.setAttribute('type', 'password')\n      }\n\n      visibleIcon?.classList.add('d-none')\n      hiddenIcon?.classList.remove('d-none')\n\n      this.inputElement.focus()\n    }\n  }\n\n  private checkScore(): number {\n    return 0\n  }\n\n  private checkLength(): boolean {\n    if (this.inputElement) {\n      return this.inputElement.value.length >= this.options.minLength // 20 score\n    }\n\n    return false\n  }\n\n  private checkLowerCase(): boolean {\n    const val = this.inputElement ? this.inputElement.value : ''\n    return /[a-z]/.test(val) // 20 score\n  }\n\n  private checkUppercase(): boolean {\n    const val = this.inputElement ? this.inputElement.value : ''\n    return /[A-Z]/.test(val) // 20 score\n  }\n\n  private checkDigit(): boolean {\n    const val = this.inputElement ? this.inputElement.value : ''\n    return /[0-9]/.test(val) // 20 score\n  }\n\n  private checkChar(): boolean {\n    const val = this.inputElement ? this.inputElement.value : ''\n    return /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(val) // 20 score\n  }\n\n  private getCheckScore(): number {\n    let count = 1\n    if (this.options.checkUppercase) {\n      count++\n    }\n\n    if (this.options.checkLowercase) {\n      count++\n    }\n\n    if (this.options.checkDigit) {\n      count++\n    }\n\n    if (this.options.checkChar) {\n      count++\n    }\n\n    this.checkSteps = count\n    return 100 / this.checkSteps\n  }\n\n  private highlight() {\n    const items = this.highlightElement\n      ? [].slice.call(this.highlightElement.querySelectorAll('div'))\n      : []\n    const total = items.length\n    let index = 0\n    const checkScore = this.getCheckScore()\n    const score = this.getScore()\n\n    items.map((item: HTMLElement) => {\n      index++\n      if (checkScore * index * (this.checkSteps / total) <= score) {\n        item.classList.add('active')\n      } else {\n        item.classList.remove('active')\n      }\n    })\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public reset = () => {\n    this.score = 0\n    this.highlight()\n  }\n\n  public getScore() {\n    return this.score\n  }\n\n  public check() {\n    let score = 0\n    const checkScore = this.getCheckScore()\n    if (this.checkLength()) {\n      score = score + checkScore\n    }\n\n    if (this.options.checkUppercase && this.checkLowerCase()) {\n      score = score + checkScore\n    }\n\n    if (this.options.checkLowercase && this.checkUppercase()) {\n      score = score + checkScore\n    }\n\n    if (this.options.checkDigit && this.checkDigit()) {\n      score = score + checkScore\n    }\n\n    if (this.options.checkChar && this.checkChar()) {\n      score = score + checkScore\n    }\n\n    this.score = score\n    this.highlight()\n  }\n\n  // Static methods\n  public static getInstance = (\n    el: HTMLElement,\n    componentName: string = defaultPasswordMeterQueires.componentName\n  ) => {\n    const passwordMeter = DataUtil.get(el, componentName)\n    if (passwordMeter) {\n      return passwordMeter\n    }\n\n    return null\n  }\n\n  public static createInstances = (\n    selector: string = defaultPasswordMeterQueires.instanseQuery,\n    options: IPasswordMeterOptions = defaultPasswordMeterOptions,\n    queries: IPasswordMeterQueries = defaultPasswordMeterQueires\n  ) => {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((el) => {\n      const item = el as HTMLElement\n      let passwordMeter = PasswordMeterComponent.getInstance(item)\n      if (!passwordMeter) {\n        passwordMeter = new PasswordMeterComponent(item, options, queries)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string = defaultPasswordMeterQueires.instanseQuery,\n    options: IPasswordMeterOptions = defaultPasswordMeterOptions,\n    queries: IPasswordMeterQueries = defaultPasswordMeterQueires\n  ): PasswordMeterComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let passwordMeter = PasswordMeterComponent.getInstance(item)\n    if (!passwordMeter) {\n      passwordMeter = new PasswordMeterComponent(item, options, queries)\n    }\n    return passwordMeter\n  }\n\n  public static bootstrap = (selector: string = defaultPasswordMeterQueires.instanseQuery) => {\n    PasswordMeterComponent.createInstances(selector)\n  }\n\n  public static reinitialization = (\n    selector: string = defaultPasswordMeterQueires.instanseQuery\n  ) => {\n    PasswordMeterComponent.createInstances(selector)\n  }\n}\nexport {PasswordMeterComponent, defaultPasswordMeterOptions, defaultPasswordMeterQueires}\n","import {\n  getAttributeValueByBreakpoint,\n  stringSnakeToCamel,\n  getObjectPropertyValueByKey,\n  EventHandlerUtil,\n  throttle,\n} from '../_utils/index'\n\nexport class SwapperStore {\n  static store: Map<string, SwapperComponent> = new Map()\n\n  public static set(instanceId: string, drawerComponentObj: SwapperComponent): void {\n    if (SwapperStore.has(instanceId)) {\n      return\n    }\n\n    SwapperStore.store.set(instanceId, drawerComponentObj)\n  }\n\n  public static get(instanceId: string): SwapperComponent | undefined {\n    if (!SwapperStore.has(instanceId)) {\n      return\n    }\n    return SwapperStore.store.get(instanceId)\n  }\n\n  public static remove(instanceId: string): void {\n    if (!SwapperStore.has(instanceId)) {\n      return\n    }\n\n    SwapperStore.store.delete(instanceId)\n  }\n\n  public static has(instanceId: string): boolean {\n    return SwapperStore.store.has(instanceId)\n  }\n\n  public static getAllInstances() {\n    return SwapperStore.store\n  }\n}\n\nexport interface ISwapperOptions {\n  mode: string\n}\n\nexport interface ISwapperQueries {\n  componentName: string\n  instanseQuery: string\n  attrQuery: string\n}\n\nconst defaultSwapperOptions: ISwapperOptions = {\n  mode: 'append',\n}\n\nconst defaultSwapperQueires: ISwapperQueries = {\n  componentName: 'swapper',\n  instanseQuery: '[data-kt-swapper=\"true\"]',\n  attrQuery: 'data-kt-swapper-',\n}\n\nclass SwapperComponent {\n  element: HTMLElement\n  options: ISwapperOptions\n  queries: ISwapperQueries\n\n  constructor(_element: HTMLElement, _options: ISwapperOptions, _queries: ISwapperQueries) {\n    this.element = _element\n    this.options = Object.assign(defaultSwapperOptions, _options)\n    this.queries = _queries\n\n    // Initial update\n    this.update()\n\n    SwapperStore.set(this.element.id, this)\n  }\n\n  private getOption(name: string) {\n    const attr = this.element.getAttribute(`${this.queries.attrQuery}${name}`)\n    if (attr) {\n      let value = getAttributeValueByBreakpoint(attr)\n      if (attr != null && String(value) === 'true') {\n        return true\n      } else if (value !== null && String(value) === 'false') {\n        return false\n      }\n      return value\n    } else {\n      const optionName = stringSnakeToCamel(name)\n      const option = getObjectPropertyValueByKey(this.options, optionName)\n      if (option) {\n        return getAttributeValueByBreakpoint(option)\n      } else {\n        return null\n      }\n    }\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public update = () => {\n    const parentSelector = this.getOption('parent')?.toString()\n    const mode = this.getOption('mode')\n    const parentElement = parentSelector ? document.querySelector(parentSelector) : null\n\n    if (parentElement && this.element.parentNode !== parentElement) {\n      if (mode === 'prepend') {\n        parentElement.prepend(this.element)\n      } else if (mode === 'append') {\n        parentElement.append(this.element)\n      }\n    }\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string, event: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Static methods\n  public static getInstance = (\n    el: HTMLElement,\n    componentName: string = defaultSwapperQueires.componentName\n  ): SwapperComponent | null => {\n    const place = SwapperStore.get(el.id)\n    if (place) {\n      return place as SwapperComponent\n    }\n\n    return null\n  }\n\n  public static createInstances = (\n    selector: string = defaultSwapperQueires.instanseQuery,\n    options: ISwapperOptions = defaultSwapperOptions,\n    queries: ISwapperQueries = defaultSwapperQueires\n  ) => {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((el) => {\n      const item = el as HTMLElement\n      let place = SwapperComponent.getInstance(item)\n      if (!place) {\n        place = new SwapperComponent(item, options, queries)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string = defaultSwapperQueires.instanseQuery,\n    options: ISwapperOptions = defaultSwapperOptions,\n    queries: ISwapperQueries = defaultSwapperQueires\n  ): SwapperComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let place = SwapperComponent.getInstance(item)\n    if (!place) {\n      place = new SwapperComponent(item, options, queries)\n    }\n    return place\n  }\n\n  public static bootstrap = (selector: string = defaultSwapperQueires.instanseQuery) => {\n    SwapperComponent.createInstances(selector)\n  }\n\n  public static reinitialization = (selector: string = defaultSwapperQueires.instanseQuery) => {\n    SwapperComponent.createInstances(selector)\n  }\n}\n\n// Window resize handler\nwindow.addEventListener('resize', function () {\n  let timer\n  throttle(\n    timer,\n    () => {\n      // Locate and update Offcanvas instances on window resize\n      const elements = document.querySelectorAll(defaultSwapperQueires.instanseQuery)\n      elements.forEach((el) => {\n        const place = SwapperComponent.getInstance(el as HTMLElement)\n        if (place) {\n          place.update()\n        }\n      })\n    },\n    200\n  )\n})\n\nexport {SwapperComponent, defaultSwapperOptions, defaultSwapperQueires}\n","import {createPopper, VirtualElement} from '@popperjs/core'\nimport {\n  getElementChild,\n  getElementParents,\n  getAttributeValueByBreakpoint,\n  getUniqueIdWithPrefix,\n  DataUtil,\n  ElementStyleUtil,\n  EventHandlerUtil,\n  insertAfterElement,\n  slideUp,\n  slideDown,\n  DOMEventHandlerUtil,\n  throttle,\n  getHighestZindex,\n} from '../_utils/index'\n\nexport interface MenuOptions {\n  dropdown: {\n    hoverTimeout: number\n    zindex: number\n  }\n  accordion: {\n    slideSpeed: number\n    expand: boolean\n  }\n}\n\nconst defaultMenuOptions: MenuOptions = {\n  dropdown: {\n    hoverTimeout: 200,\n    zindex: 105,\n  },\n  accordion: {\n    slideSpeed: 250,\n    expand: false,\n  },\n}\n\ntype PopperPlacement =\n  | 'right'\n  | 'auto'\n  | 'auto-start'\n  | 'auto-end'\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'top-start'\n  | 'top-end'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right-end'\n  | 'left-start'\n  | 'left-end'\n  | undefined\n\nclass MenuComponent {\n  element: HTMLElement\n  options: MenuOptions\n  instanceUid: string\n  triggerElement: HTMLElement | null = null\n\n  constructor(_element: HTMLElement, options: MenuOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultMenuOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('menu')\n    // this.element.setAttribute('data-kt-menu', 'true')\n    this._setTriggerElement()\n    this._update()\n    DataUtil.set(this.element, 'menu', this)\n    return this\n  }\n\n  // Set external trigger element\n  private _setTriggerElement = () => {\n    const target = document.querySelector(\n      `[data-kt-menu-target=\"#${this.element.getAttribute('id')}\"`\n    )\n\n    if (target) {\n      this.triggerElement = target as HTMLElement\n    } else if (this.element.closest('[data-kt-menu-trigger]')) {\n      this.triggerElement = this.element.closest('[data-kt-menu-trigger]') as HTMLElement\n    } else if (\n      this.element.parentNode &&\n      getElementChild(this.element.parentNode as HTMLElement, '[data-kt-menu-trigger]')\n    ) {\n      const child = getElementChild(\n        this.element.parentNode as HTMLElement,\n        '[data-kt-menu-trigger]'\n      )\n      if (child) {\n        this.triggerElement = child\n      }\n    }\n\n    if (this.triggerElement) {\n      DataUtil.set(this.triggerElement, 'menu', this)\n    }\n  }\n\n  // Test if menu has external trigger element\n  private _isTriggerElement = (item: HTMLElement) => {\n    return this.triggerElement === item\n  }\n\n  // Get item option(through html attributes)\n  private _getItemOption = (item: HTMLElement, name: string) => {\n    let value: string | JSON | null | boolean = null\n    if (item && item.hasAttribute('data-kt-menu-' + name)) {\n      const attr = item.getAttribute('data-kt-menu-' + name) || ''\n      value = getAttributeValueByBreakpoint(attr)\n      if (value !== null && String(value) === 'true') {\n        value = true\n      } else if (value !== null && String(value) === 'false') {\n        value = false\n      }\n    }\n    return value\n  }\n\n  // Get item element\n  private _getItemElement = (_element: HTMLElement) => {\n    // Element is the external trigger element\n    if (this._isTriggerElement(_element)) {\n      return _element\n    }\n\n    // Element has item toggler attribute\n    if (_element.hasAttribute('data-kt-menu-trigger')) {\n      return _element\n    }\n\n    // Element has item DOM reference in it's data storage\n    const itemElement = DataUtil.get(_element, 'item')\n    if (itemElement) {\n      return itemElement\n    }\n\n    // Item is parent of element\n    const item = _element.closest('.menu-item[data-kt-menu-trigger]')\n    if (item) {\n      return item\n    }\n\n    // Element's parent has item DOM reference in it's data storage\n    const sub = _element.closest('.menu-sub')\n    if (sub) {\n      const subItem = DataUtil.get(sub as HTMLElement, 'item')\n      if (subItem) {\n        return subItem\n      }\n    }\n  }\n\n  // Get item parent element\n  private _getItemParentElement = (item: HTMLElement) => {\n    const sub = item.closest('.menu-sub')\n    if (!sub) {\n      return null\n    }\n\n    const subItem = DataUtil.get(sub as HTMLElement, 'item')\n    if (subItem) {\n      return subItem\n    }\n\n    const parentItem = sub.closest('.menu-item[data-kt-menu-trigger]')\n    if (sub && parentItem) {\n      return parentItem\n    }\n\n    return null\n  }\n\n  // Get item parent elements\n  private _getItemParentElements = (item: HTMLElement) => {\n    const parents: Array<Element> = []\n    let parent: Element\n    let i = 0\n    let buffer: HTMLElement = item\n\n    do {\n      parent = this._getItemParentElement(buffer)\n      if (parent) {\n        parents.push(parent)\n        buffer = parent as HTMLElement\n      }\n\n      i++\n    } while (parent !== null && i < 20)\n\n    if (this.triggerElement) {\n      parents.unshift(this.triggerElement)\n    }\n\n    return parents\n  }\n\n  // Prepare popper config for dropdown(see: https://popper.js.org/docs/v2/)\n  private _getDropdownPopperConfig = (item: HTMLElement) => {\n    // Placement\n    const placementOption = this._getItemOption(item, 'placement')\n    let placement: PopperPlacement = 'right'\n    if (placementOption) {\n      placement = placementOption as PopperPlacement\n    }\n\n    // Flip\n    // const flipValue = this._getItemOption(item, 'flip')\n    // const flip = flipValue ? flipValue.toString().split(',') : []\n\n    // Offset\n    const offsetValue = this._getItemOption(item, 'offset')\n    const offset = offsetValue ? offsetValue.toString().split(',') : []\n\n    // Strategy\n    const strategy: 'absolute' | 'fixed' | undefined =\n      this._getItemOption(item, 'overflow') === true ? 'absolute' : 'fixed'\n\n    return {\n      placement: placement,\n      strategy: strategy,\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: offset,\n          },\n        },\n        {\n          name: 'preventOverflow',\n        },\n        {\n          name: 'flip',\n          options: {\n            // altBoundary: true,\n            // fallbackPlacements: flip,\n            flipVariations: false,\n          },\n        },\n      ],\n    }\n  }\n\n  // Get item child element\n  private _getItemChildElement = (item: HTMLElement) => {\n    let selector = item\n\n    const subItem = DataUtil.get(item, 'sub')\n    if (subItem) {\n      selector = subItem\n    }\n\n    if (selector) {\n      //element = selector.querySelector('.show.menu-item[data-kt-menu-trigger]');\n      const element = selector.querySelector('.menu-item[data-kt-menu-trigger]')\n      if (element) {\n        return element\n      }\n    }\n    return null\n  }\n\n  // Get item child elements\n  private _getItemChildElements = (item: HTMLElement) => {\n    const children: Array<Element> = []\n    let child: Element | null\n    let i = 0\n    let buffer = item\n    do {\n      child = this._getItemChildElement(buffer)\n      if (child) {\n        children.push(child)\n        buffer = child as HTMLElement\n      }\n\n      i++\n    } while (child !== null && i < 20)\n\n    return children\n  }\n\n  // Get item sub element\n  private _getItemSubElement = (item: HTMLElement) => {\n    if (!item) {\n      return null\n    }\n\n    if (this._isTriggerElement(item)) {\n      return this.element\n    }\n\n    if (item.classList.contains('menu-sub')) {\n      return item\n    } else if (DataUtil.has(item, 'sub')) {\n      return DataUtil.get(item, 'sub')\n    } else {\n      return getElementChild(item, '.menu-sub')\n    }\n  }\n\n  private _getCss = (el: HTMLElement, styleProp: string) => {\n    const defaultView = (el.ownerDocument || document).defaultView\n    if (!defaultView) {\n      return ''\n    }\n\n    // sanitize property name to css notation\n    // (hyphen separated words eg. font-Size)\n    styleProp = styleProp.replace(/([A-Z])/g, '-$1').toLowerCase()\n\n    return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp)\n  }\n\n  // Get item sub type\n  private _getItemSubType = (element: HTMLElement) => {\n    const sub = this._getItemSubElement(element)\n    if (sub && parseInt(this._getCss(sub, 'z-index')) > 0) {\n      return 'dropdown'\n    } else {\n      return 'accordion'\n    }\n  }\n\n  // Test if item's sub is shown\n  private _isItemSubShown = (item: HTMLElement) => {\n    let sub = this._getItemSubElement(item)\n    if (sub) {\n      if (this._getItemSubType(item) === 'dropdown') {\n        return sub.classList.contains('show') && sub.hasAttribute('data-popper-placement')\n      } else {\n        return item.classList.contains('show')\n      }\n    }\n\n    return false\n  }\n\n  // Test if item dropdown is permanent\n  private _isItemDropdownPermanent = (item: HTMLElement) => {\n    return this._getItemOption(item, 'permanent') === true\n  }\n\n  // Test if item's parent is shown\n  private _isItemParentShown = (item: HTMLElement) => {\n    return getElementParents(item, '.menu-item.show').length > 0\n  }\n\n  // Test of it is item sub element\n  private _isItemSubElement = (item: HTMLElement) => {\n    return item.classList.contains('menu-sub')\n  }\n\n  // Test if item has sub\n  private _hasItemSub = (item: HTMLElement) => {\n    return item.classList.contains('menu-item') && item.hasAttribute('data-kt-menu-trigger')\n  }\n\n  // Get link element\n  private _getItemLinkElement = (item: HTMLElement) => {\n    return getElementChild(item, '.menu-link')\n  }\n\n  // Get toggle element\n  private _getItemToggleElement = (item: HTMLElement) => {\n    if (this.triggerElement) {\n      return this.triggerElement\n    }\n\n    return this._getItemLinkElement(item)\n  }\n\n  // Show item dropdown\n  private _showDropdown = (item: HTMLElement) => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.menu.dropdown.show') === false) {\n      return\n    }\n\n    // Hide all currently shown dropdowns except current one\n    MenuComponent.hideDropdowns(item)\n\n    // const toggle = this._isTriggerElement(item) ? item : this._getItemLinkElement(item);\n    const sub = this._getItemSubElement(item)\n    const width = this._getItemOption(item, 'width')\n    const height = this._getItemOption(item, 'height')\n\n    let zindex = this.options.dropdown.zindex\n    const parentZindex = getHighestZindex(item) // update\n    // Apply a new z-index if dropdown's toggle element or it's parent has greater z-index // update\n    if (parentZindex !== null && parentZindex >= zindex) {\n      zindex = parentZindex + 1\n    }\n\n    if (zindex) {\n      ElementStyleUtil.set(sub, 'z-index', zindex)\n    }\n\n    if (width) {\n      ElementStyleUtil.set(sub, 'width', width)\n    }\n\n    if (height) {\n      ElementStyleUtil.set(sub, 'height', height)\n    }\n\n    this.initDropdownPopper(item, sub)\n\n    item.classList.add('show')\n    item.classList.add('menu-dropdown')\n    sub.classList.add('show')\n\n    // Append the sub the the root of the menu\n    if (this._getItemOption(item, 'overflow') === true) {\n      document.body.appendChild(sub)\n      DataUtil.set(item, 'sub', sub)\n      DataUtil.set(sub, 'item', item)\n      DataUtil.set(sub, 'menu', this)\n    } else {\n      DataUtil.set(sub, 'item', item)\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.menu.dropdown.shown')\n  }\n\n  // Init dropdown popper(new)\n  private initDropdownPopper = (item: HTMLElement, sub: HTMLElement) => {\n    // Setup popper instance\n    let reference\n    const attach = this._getItemOption(item, 'attach') as string\n\n    if (attach) {\n      if (attach === 'parent') {\n        reference = item.parentNode\n      } else {\n        reference = document.querySelector(attach)\n      }\n    } else {\n      reference = item\n    }\n\n    if (reference) {\n      const popper = createPopper(\n        reference as Element | VirtualElement,\n        sub,\n        this._getDropdownPopperConfig(item)\n      )\n      DataUtil.set(item, 'popper', popper)\n    }\n  }\n\n  // Hide item dropdown\n  private _hideDropdown = (item: HTMLElement) => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.menu.dropdown.hide') === false) {\n      return\n    }\n\n    const sub = this._getItemSubElement(item)\n    ElementStyleUtil.set(sub, 'z-index', '')\n    ElementStyleUtil.set(sub, 'width', '')\n    ElementStyleUtil.set(sub, 'height', '')\n    item.classList.remove('show')\n    item.classList.remove('menu-dropdown')\n    sub.classList.remove('show')\n\n    // Append the sub back to it's parent\n    if (this._getItemOption(item, 'overflow') === true) {\n      if (item.classList.contains('menu-item')) {\n        item.appendChild(sub)\n      } else {\n        insertAfterElement(this.element, item)\n      }\n\n      DataUtil.remove(item, 'sub')\n      DataUtil.remove(sub, 'item')\n      DataUtil.remove(sub, 'menu')\n    }\n\n    if (DataUtil.has(item, 'popper') === true) {\n      DataUtil.get(item, 'popper').destroy()\n      DataUtil.remove(item, 'popper')\n    }\n\n    // Destroy popper(new)\n    this.destroyDropdownPopper(item)\n    EventHandlerUtil.trigger(this.element, 'kt.menu.dropdown.hidden')\n  }\n\n  // Destroy dropdown popper(new)\n  private destroyDropdownPopper = (item: HTMLElement) => {\n    if (DataUtil.has(item, 'popper') === true) {\n      DataUtil.get(item, 'popper').destroy()\n      DataUtil.remove(item, 'popper')\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.menu.dropdown.hidden')\n  }\n\n  private _showAccordion = (item: HTMLElement) => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.menu.accordion.show') === false) {\n      return\n    }\n\n    if (this.options.accordion.expand === false) {\n      this._hideAccordions(item)\n    }\n\n    if (DataUtil.has(item, 'popper') === true) {\n      this._hideDropdown(item)\n    }\n\n    item.classList.add('hover') // updateWW\n    item.classList.add('showing')\n\n    const subElement = this._getItemSubElement(item)\n    if (subElement) {\n      const sub = subElement as HTMLElement\n      slideDown(sub, this.options.accordion.slideSpeed, () => {\n        item.classList.remove('showing')\n        item.classList.add('show')\n        sub.classList.add('show')\n        EventHandlerUtil.trigger(this.element, 'kt.menu.accordion.shown')\n      })\n    }\n  }\n\n  private _hideAccordion = (item: HTMLElement) => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.menu.accordion.hide') === false) {\n      return\n    }\n\n    const sub = this._getItemSubElement(item)\n    item.classList.add('hiding')\n\n    if (sub) {\n      slideUp(sub, this.options.accordion.slideSpeed, () => {\n        item.classList.remove('hiding')\n        item.classList.remove('show')\n        sub.classList.remove('show')\n        item.classList.remove('hover') // update\n        EventHandlerUtil.trigger(this.element, 'kt.menu.accordion.hidden')\n      })\n    }\n  }\n\n  // Hide all shown accordions of item\n  private _hideAccordions = (item: HTMLElement) => {\n    const itemsToHide = this.element.querySelectorAll('.show[data-kt-menu-trigger]')\n    if (itemsToHide && itemsToHide.length > 0) {\n      for (var i = 0, len = itemsToHide.length; i < len; i++) {\n        const itemToHide = itemsToHide[i] as HTMLElement\n\n        if (\n          this._getItemSubType(itemToHide) === 'accordion' &&\n          itemToHide !== item &&\n          item.contains(itemToHide) === false &&\n          itemToHide.contains(item) === false\n        ) {\n          this._hideAccordion(itemToHide)\n        }\n      }\n    }\n  }\n\n  // Event Handlers\n  // Reset item state classes if item sub type changed\n  private _reset = (item: HTMLElement) => {\n    if (this._hasItemSub(item) === false) {\n      return\n    }\n\n    const sub = this._getItemSubElement(item)\n\n    // Reset sub state if sub type is changed during the window resize\n    if (DataUtil.has(item, 'type') && DataUtil.get(item, 'type') !== this._getItemSubType(item)) {\n      // updated\n      item.classList.remove('hover')\n      item.classList.remove('show')\n      item.classList.remove('show')\n      if (sub && sub.removeClass) {\n        sub.removeClass(sub, 'show')\n      }\n    } // updated\n  }\n\n  // TODO: not done\n  private _destroy = () => {}\n\n  // Update all item state classes if item sub type changed\n  private _update = () => {\n    const items = this.element.querySelectorAll('.menu-item[data-kt-menu-trigger]')\n    items.forEach((el) => this._reset(el as HTMLElement))\n  }\n\n  // Hide item sub\n  private _hide = (item: HTMLElement) => {\n    if (!item) {\n      return\n    }\n\n    if (this._isItemSubShown(item) === false) {\n      return\n    }\n\n    if (this._getItemSubType(item) === 'dropdown') {\n      this._hideDropdown(item)\n    } else if (this._getItemSubType(item) === 'accordion') {\n      this._hideAccordion(item)\n    }\n  }\n\n  // Show item sub\n  private _show = (item: HTMLElement) => {\n    if (!item) {\n      return\n    }\n\n    if (this._isItemSubShown(item) === true) {\n      return\n    }\n\n    if (this._getItemSubType(item) === 'dropdown') {\n      this._showDropdown(item) // // show current dropdown\n    } else if (this._getItemSubType(item) === 'accordion') {\n      this._showAccordion(item)\n    }\n\n    // Remember last submenu type\n\n    DataUtil.set(item, 'type', this._getItemSubType(item)) // updated\n  }\n\n  // Toggle item sub\n  private _toggle = (item: HTMLElement) => {\n    if (!item) {\n      return\n    }\n\n    if (this._isItemSubShown(item) === true) {\n      this._hide(item)\n    } else {\n      this._show(item)\n    }\n  }\n\n  // Mouseout handle\n  private _mouseout = (element: HTMLElement, e: MouseEvent) => {\n    const item = this._getItemElement(element)\n    if (!item) {\n      return\n    }\n\n    if (this._getItemOption(item, 'trigger') !== 'hover') {\n      return\n    }\n\n    const timeout = setTimeout(() => {\n      if (DataUtil.get(item, 'hover') === '1') {\n        this._hide(item)\n      }\n    }, this.options.dropdown.hoverTimeout)\n\n    DataUtil.set(item, 'hover', '1')\n    DataUtil.set(item, 'timeout', timeout)\n  }\n\n  // Mouseover handle\n  private _mouseover = (element: HTMLElement, e: MouseEvent) => {\n    const item = this._getItemElement(element)\n    if (!item) {\n      return\n    }\n\n    if (this._getItemOption(item, 'trigger') !== 'hover') {\n      return\n    }\n\n    if (DataUtil.get(item, 'hover') === '1') {\n      clearTimeout(DataUtil.get(item, 'timeout'))\n      DataUtil.remove(item, 'hover')\n      DataUtil.remove(item, 'timeout')\n    }\n\n    this._show(item)\n  }\n\n  // Dismiss handler\n  private _dismiss = (element: HTMLElement, e: Event) => {\n    const item = this._getItemElement(element)\n    const items = this._getItemChildElements(item)\n    //if ( item !== null && _getItemOption(item, 'trigger') === 'click' &&  _getItemSubType(item) === 'dropdown' ) {\n    const itemSubType = this._getItemSubType(item)\n    if (item !== null && itemSubType === 'dropdown') {\n      this._hide(item) // hide items dropdown\n\n      // Hide all child elements as well\n      if (items.length > 0) {\n        for (let i = 0, len = items.length; i < len; i++) {\n          //if ( _getItemOption(item, 'trigger') === 'click' &&  _getItemSubType(item) === 'dropdown' ) {\n          if (items[i] !== null && this._getItemSubType(items[i] as HTMLElement) === 'dropdown') {\n            this._hide(items[i] as HTMLElement)\n          }\n        }\n      }\n    }\n  }\n\n  // Link handler\n  private _link = (element: HTMLElement, e: Event) => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.menu.link.click') === false) {\n      return\n    }\n\n    // Dismiss all shown dropdowns\n    MenuComponent.hideDropdowns(undefined)\n    EventHandlerUtil.trigger(this.element, 'kt.menu.link.clicked')\n  }\n\n  private _click = (element: HTMLElement, e: Event) => {\n    e.preventDefault()\n    const item = this._getItemElement(element)\n    if (this._getItemOption(item, 'trigger') !== 'click') {\n      return\n    }\n\n    if (this._getItemOption(item, 'toggle') === false) {\n      this._show(item)\n    } else {\n      this._toggle(item)\n    }\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public click = (element: HTMLElement, e: Event) => {\n    return this._click(element, e)\n  }\n\n  public link = (element: HTMLElement, e: Event) => {\n    return this._link(element, e)\n  }\n\n  public dismiss = (element: HTMLElement, e: Event) => {\n    return this._dismiss(element, e)\n  }\n\n  public mouseover = (element: HTMLElement, e: Event) => {\n    return this._mouseover(element, e as MouseEvent)\n  }\n\n  public mouseout = (element: HTMLElement, e: Event) => {\n    return this._mouseout(element, e as MouseEvent)\n  }\n\n  // General Methods\n  public getItemTriggerType = (item: HTMLElement) => {\n    return this._getItemOption(item, 'trigger')\n  }\n\n  public getItemSubType = (element: HTMLElement) => {\n    return this._getItemSubType(element)\n  }\n\n  public show = (item: HTMLElement) => {\n    return this._show(item)\n  }\n\n  public hide = (item: HTMLElement) => {\n    return this._hide(item)\n  }\n\n  public reset = (item: HTMLElement) => {\n    return this._reset(item)\n  }\n\n  public update = () => {\n    return this._update()\n  }\n\n  public getElement = () => {\n    return this.element\n  }\n\n  public getItemLinkElement = (item: HTMLElement) => {\n    return this._getItemLinkElement(item)\n  }\n\n  public getItemToggleElement = (item: HTMLElement) => {\n    return this._getItemToggleElement(item)\n  }\n\n  public getItemSubElement = (item: HTMLElement) => {\n    return this._getItemSubElement(item)\n  }\n\n  public getItemParentElements = (item: HTMLElement) => {\n    return this._getItemParentElements(item)\n  }\n\n  public isItemSubShown = (item: HTMLElement) => {\n    return this._isItemSubShown(item)\n  }\n\n  public isItemParentShown = (item: HTMLElement) => {\n    return this._isItemParentShown(item)\n  }\n\n  public getTriggerElement = () => {\n    return this.triggerElement\n  }\n\n  public isItemDropdownPermanent = (item: HTMLElement) => {\n    return this._isItemDropdownPermanent(item)\n  }\n\n  // Accordion Mode Methods\n  public hideAccordions = (item: HTMLElement) => {\n    return this._hideAccordions(item)\n  }\n\n  // Event API\n  public on = (name: string, handler: any) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: any) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  // public static methods\n  // Get KTMenu instance by element\n  public static getInstance = (element: HTMLElement) => {\n    // Element has menu DOM reference in it's DATA storage\n    const elementMenu = DataUtil.get(element, 'menu')\n    if (elementMenu) {\n      return elementMenu\n    }\n\n    // Element has .menu parent\n    const menu = element.closest('.menu')\n    if (menu) {\n      const menuData = DataUtil.get(menu as HTMLElement, 'menu')\n      if (menuData) {\n        return menuData\n      }\n    }\n\n    // Element has a parent with DOM reference to .menu in it's DATA storage\n    if (element.classList.contains('menu-link')) {\n      const sub = element.closest('.menu-sub')\n      if (sub) {\n        const subMenu = DataUtil.get(sub as HTMLElement, 'menu')\n        if (subMenu) {\n          return subMenu\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Hide all dropdowns and skip one if provided\n  public static hideDropdowns = (skip: HTMLElement | undefined) => {\n    const items = document.querySelectorAll('.show.menu-dropdown[data-kt-menu-trigger]')\n\n    if (items && items.length > 0) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        const item = items[i]\n        const menu = MenuComponent.getInstance(item as HTMLElement)\n\n        if (menu && menu.getItemSubType(item) === 'dropdown') {\n          if (skip) {\n            if (\n              menu.getItemSubElement(item).contains(skip) === false &&\n              item.contains(skip) === false &&\n              item !== skip\n            ) {\n              menu.hide(item)\n            }\n          } else {\n            menu.hide(item)\n          }\n        }\n      }\n    }\n  }\n\n  public static updateDropdowns = () => {\n    const items = document.querySelectorAll('.show.menu-dropdown[data-kt-menu-trigger]')\n    if (items && items.length > 0) {\n      for (var i = 0, len = items.length; i < len; i++) {\n        var item = items[i]\n\n        if (DataUtil.has(item as HTMLElement, 'popper')) {\n          DataUtil.get(item as HTMLElement, 'popper').forceUpdate()\n        }\n      }\n    }\n  }\n\n  // Global handlers\n  public static createInstances = (selector: string) => {\n    // Initialize menus\n    document.querySelectorAll(selector).forEach((el) => {\n      const menuItem = el as HTMLElement\n      let menuInstance = MenuComponent.getInstance(menuItem)\n      if (!menuInstance) {\n        menuInstance = new MenuComponent(el as HTMLElement, defaultMenuOptions)\n      }\n    })\n  }\n\n  public static initGlobalHandlers = () => {\n    // Dropdown handler\n    document.addEventListener('click', (e) => {\n      const menuItems = document.querySelectorAll('.show.menu-dropdown[data-kt-menu-trigger]')\n      if (menuItems && menuItems.length > 0) {\n        for (let i = 0; i < menuItems.length; i++) {\n          const item = menuItems[i] as HTMLElement\n          const menuObj = MenuComponent.getInstance(item) as MenuComponent\n          if (menuObj && menuObj.getItemSubType(item) === 'dropdown') {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const menu = menuObj.getElement()\n            const sub = menuObj.getItemSubElement(item) as HTMLElement\n            if (item === e.target || item.contains(e.target as HTMLElement)) {\n              continue\n            }\n\n            if (sub && (sub === e.target || sub.contains(e.target as HTMLElement))) {\n              continue\n            }\n            menuObj.hide(item)\n          }\n        }\n      }\n    })\n\n    // Sub toggle handler\n    DOMEventHandlerUtil.on(\n      document.body,\n      '.menu-item[data-kt-menu-trigger] > .menu-link, [data-kt-menu-trigger]:not(.menu-item):not([data-kt-menu-trigger=\"auto\"])',\n      'click',\n      function (this: HTMLElement, e: Event) {\n        const menu = MenuComponent.getInstance(this) as MenuComponent\n        if (menu) {\n          return menu.click(this, e)\n        }\n      }\n    )\n\n    // // Link handler\n    DOMEventHandlerUtil.on(\n      document.body,\n      '.menu-item:not([data-kt-menu-trigger]) > .menu-link',\n      'click',\n      function (this: HTMLElement, e: Event) {\n        e.stopPropagation()\n        const menu = MenuComponent.getInstance(this)\n        if (menu && menu.link) {\n          return menu.link(this, e)\n        }\n      }\n    )\n\n    // Dismiss handler\n    DOMEventHandlerUtil.on(\n      document.body,\n      '[data-kt-menu-dismiss=\"true\"]',\n      'click',\n      function (this: HTMLElement, e: Event) {\n        const menu = MenuComponent.getInstance(this) as MenuComponent\n        if (menu) {\n          return menu.dismiss(this, e)\n        }\n      }\n    )\n\n    // Mouseover handler\n    DOMEventHandlerUtil.on(\n      document.body,\n      '[data-kt-menu-trigger], .menu-sub',\n      'mouseover',\n      function (this: HTMLElement, e: Event) {\n        const menu = MenuComponent.getInstance(this) as MenuComponent\n        if (menu && menu.getItemSubType(this) === 'dropdown') {\n          return menu.mouseover(this, e)\n        }\n      }\n    )\n\n    // Mouseout handler\n    DOMEventHandlerUtil.on(\n      document.body,\n      '[data-kt-menu-trigger], .menu-sub',\n      'mouseout',\n      function (this: HTMLElement, e: Event) {\n        const menu = MenuComponent.getInstance(this) as MenuComponent\n        if (menu && menu.getItemSubType(this) === 'dropdown') {\n          return menu.mouseout(this, e)\n        }\n      }\n    )\n\n    // Resize handler\n    window.addEventListener('resize', () => {\n      let timer\n      throttle(\n        timer,\n        () => {\n          // Locate and update Drawer instances on window resize\n          const elements = document.querySelectorAll('[data-kt-menu=\"true\"]')\n          elements.forEach((el) => {\n            const menu = MenuComponent.getInstance(el as HTMLElement)\n            if (menu) {\n              menu.update()\n            }\n          })\n        },\n        200\n      )\n    })\n  }\n\n  public static bootstrap = () => {\n    MenuComponent.initGlobalHandlers()\n    MenuComponent.createInstances('[data-kt-menu=\"true\"]')\n  }\n\n  public static reinitialization = () => {\n    MenuComponent.createInstances('[data-kt-menu=\"true\"]')\n  }\n\n  public static createInsance = (\n    selector: string,\n    options: MenuOptions = defaultMenuOptions\n  ): MenuComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let menu = MenuComponent.getInstance(item)\n    if (!menu) {\n      menu = new MenuComponent(item, options)\n    }\n    return menu\n  }\n}\n\nexport {MenuComponent, defaultMenuOptions}\n","import {\n  EventHandlerUtil,\n  DataUtil,\n  getBreakpoint,\n  getAttributeValueByBreakpoint,\n  stringSnakeToCamel,\n  getObjectPropertyValueByKey,\n  getViewPort,\n  isVisibleElement,\n  throttle,\n} from '../_utils/index'\n\nimport {MenuComponent, defaultMenuOptions} from './MenuComponent'\n\nexport interface ISearchOptions {\n  minLength: number // Miniam text lenght to query search\n  keypress: boolean // Enable search on keypress\n  enter: boolean // Enable search on enter key press\n  layout: 'menu' | 'inline' // Use 'menu' or 'inline' layout options to display search results\n  responsive?: number // Pass integer value or bootstrap compatible breakpoint key(sm,md,lg,xl,xxl) to enable reponsive form mode for device width below the breakpoint value\n  showOnFocus: boolean // Always show menu on input focus\n}\n\nexport interface ISearchQueries {\n  componentName: string\n  instanseQuery: string\n  attrQuery: string\n}\n\nconst defaultSearchOptions: ISearchOptions = {\n  minLength: 2, // Miniam text lenght to query search\n  keypress: true, // Enable search on keypress\n  enter: true, // Enable search on enter key press\n  layout: 'menu', // Use 'menu' or 'inline' layout options to display search results\n  showOnFocus: true, // Always show menu on input focus\n}\n\nconst defaultSearchQueires: ISearchQueries = {\n  componentName: 'search',\n  instanseQuery: '[data-kt-search]',\n  attrQuery: 'data-kt-search-',\n}\n\nclass SearchComponent {\n  element: HTMLElement\n  contentElement: HTMLElement\n  formElement: HTMLFormElement\n  inputElement: HTMLInputElement\n  spinnerElement: HTMLElement\n  clearElement: HTMLElement\n  toggleElement: HTMLElement\n  submitElement: HTMLElement\n  toolbarElement: HTMLElement\n  resultsElement: HTMLElement\n  suggestionElement: HTMLElement\n  emptyElement: HTMLElement\n  layout: any\n\n  options: ISearchOptions\n  queries: ISearchQueries\n\n  processing: boolean = false\n  menuObject: MenuComponent | undefined\n\n  constructor(_element: HTMLElement, _options: ISearchOptions, _queries: ISearchQueries) {\n    // Variables\n    this.options = Object.assign(defaultSearchOptions, _options)\n    this.queries = _queries\n\n    // Elements\n    this.element = _element\n    this.contentElement = this._getElement('content') as HTMLElement\n    this.formElement = this._getElement('form') as HTMLFormElement\n    this.inputElement = this._getElement('input') as HTMLInputElement\n    this.spinnerElement = this._getElement('spinner') as HTMLElement\n    this.clearElement = this._getElement('clear') as HTMLElement\n    this.toggleElement = this._getElement('toggle') as HTMLElement\n    this.submitElement = this._getElement('submit') as HTMLElement\n    this.toolbarElement = this._getElement('toolbar') as HTMLElement\n\n    this.resultsElement = this._getElement('results') as HTMLElement\n    this.suggestionElement = this._getElement('suggestion') as HTMLElement\n    this.emptyElement = this._getElement('empty') as HTMLElement\n\n    // Layout\n    this.layout = this.getOption('layout')\n    if (this.layout === 'menu') {\n      this.menuObject = new MenuComponent(this.contentElement, defaultMenuOptions)\n    }\n\n    // Update\n    this.update()\n\n    // Event Handlers\n    this.handlers()\n\n    DataUtil.set(this.element, this.queries.componentName, this)\n  }\n\n  private _getElement = (name: string) => {\n    return this.element.querySelector('[data-kt-search-element=\"' + name + '\"]')\n  }\n\n  // Get option\n  private getOption = (name: string) => {\n    const attr = this.element.getAttribute(`${this.queries.attrQuery}${name}`)\n    if (attr) {\n      let value = getAttributeValueByBreakpoint(attr)\n\n      if (value !== null && String(value) === 'true') {\n        return true\n      } else if (value !== null && String(value) === 'false') {\n        return false\n      }\n\n      return value\n    } else {\n      const optionName = stringSnakeToCamel(name)\n\n      const option = getObjectPropertyValueByKey(this.options, optionName)\n      if (option) {\n        return getAttributeValueByBreakpoint(option)\n      } else {\n        return null\n      }\n    }\n  }\n\n  // Check if responsive form mode is enabled\n  private getResponsiveFormMode = () => {\n    const responsive = this.getOption('responsive') as string\n    const width = getViewPort().width\n\n    if (!responsive) {\n      return null\n    }\n\n    const breakpoint = getBreakpoint(responsive)\n    let breakPointNum = -1\n    if (!breakpoint) {\n      breakPointNum = parseInt(responsive)\n    } else {\n      breakPointNum = +breakpoint\n    }\n\n    if (width < breakPointNum) {\n      return 'on'\n    } else {\n      return 'off'\n    }\n  }\n\n  // Focus\n  private focus = () => {\n    this.element.classList.add('focus')\n\n    if (\n      this.getOption('show-on-focus') === true ||\n      this.inputElement.value.length >= this.options.minLength\n    ) {\n      this.show()\n    }\n  }\n\n  // Blur\n  private blur = () => {\n    this.element.classList.remove('focus')\n  }\n\n  // Enter\n  private enter = (e: KeyboardEvent) => {\n    const key = e.charCode || e.keyCode || 0\n\n    if (key === 13) {\n      e.preventDefault()\n\n      this.search()\n    }\n  }\n\n  // Input\n  private input = () => {\n    if (this.getOption('min-length')) {\n      const minLength = parseInt(this.getOption('min-length') as string)\n\n      if (this.inputElement.value.length >= minLength) {\n        this.search()\n      } else if (this.inputElement.value.length === 0) {\n        this.clear()\n      }\n    }\n  }\n\n  private handlers(): void {\n    const context = this\n\n    // Focus\n    this.inputElement.addEventListener('focus', this.focus)\n\n    // Blur\n    this.inputElement.addEventListener('blur', this.blur)\n\n    // Keypress\n    if (this.getOption('keypress') === true) {\n      this.inputElement.addEventListener('input', this.input)\n    }\n\n    // Submit\n    if (this.submitElement) {\n      this.submitElement.addEventListener('click', this.search)\n    }\n\n    // Enter\n    if (this.getOption('enter') === true) {\n      this.inputElement.addEventListener('keypress', this.enter)\n    }\n\n    // Clear\n    if (this.clearElement) {\n      this.clearElement.addEventListener('click', this.clear)\n    }\n\n    // Menu\n    if (this.menuObject) {\n      // Toggle menu\n      if (this.toggleElement) {\n        this.toggleElement.addEventListener('click', this.show)\n\n        this.menuObject.on('kt.menu.dropdown.show', function () {\n          // @ts-ignore\n          if (isVisibleElement(context.toggleElement)) {\n            // @ts-ignore\n            context.toggleElement.classList.add('active')\n            // @ts-ignore\n            context.toggleElement.classList.add('show')\n          }\n        })\n\n        this.menuObject.on('kt.menu.dropdown.hide', function () {\n          // @ts-ignore\n          if (isVisibleElement(context.toggleElement)) {\n            // @ts-ignore\n            context.toggleElement.classList.remove('active')\n            // @ts-ignore\n            context.toggleElement.classList.remove('show')\n          }\n        })\n      }\n\n      this.menuObject.on('kt.menu.dropdown.shown', function () {\n        // @ts-ignore\n        context.inputElement.focus()\n      })\n    }\n\n    // Window resize handling\n    window.addEventListener('resize', () => {\n      let timer\n\n      throttle(\n        timer,\n        () => {\n          this.update()\n        },\n        200\n      )\n    })\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  // Update\n  public update = () => {\n    // Handle responsive form\n    if (this.layout === 'menu') {\n      let responsiveFormMode = this.getResponsiveFormMode()\n\n      if (responsiveFormMode === 'on' && !this.contentElement.contains(this.formElement)) {\n        this.contentElement.prepend(this.formElement)\n        this.formElement.classList.remove('d-none')\n      } else if (responsiveFormMode === 'off' && this.contentElement.contains(this.formElement)) {\n        this.element.prepend(this.formElement)\n        this.formElement.classList.add('d-none')\n      }\n    }\n  }\n\n  // Show menu\n  public show = () => {\n    if (this.menuObject) {\n      this.update()\n\n      this.menuObject.show(this.element)\n    }\n  }\n\n  // Hide menu\n  public hide = () => {\n    if (this.menuObject) {\n      this.update()\n\n      this.menuObject.hide(this.element)\n    }\n  }\n\n  // Search\n  public search = () => {\n    if (!this.processing) {\n      // Show search spinner\n      if (this.spinnerElement) {\n        this.spinnerElement.classList.remove('d-none')\n      }\n\n      // Hide search clear button\n      if (this.clearElement) {\n        this.clearElement.classList.add('d-none')\n      }\n\n      // Hide search toolbar\n      if (this.toolbarElement) {\n        this.toolbarElement.classList.add('d-none')\n      }\n\n      // Focus input\n      this.inputElement.focus()\n\n      this.processing = true\n      EventHandlerUtil.trigger(this.element, 'kt.search.process', this)\n    }\n  }\n\n  // Complete\n  public complete = () => {\n    if (this.spinnerElement) {\n      this.spinnerElement.classList.add('d-none')\n    }\n\n    // Show search toolbar\n    if (this.clearElement) {\n      this.clearElement.classList.remove('d-none')\n    }\n\n    if (this.inputElement.value.length === 0) {\n      this.clear()\n    }\n\n    // Focus input\n    this.inputElement.focus()\n\n    this.show()\n\n    this.processing = false\n  }\n\n  // Clear\n  public clear = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.search.clear') === false) {\n      return\n    }\n\n    // Clear and focus input\n    this.inputElement.value = ''\n    this.inputElement.focus()\n\n    // Hide clear icon\n    if (this.clearElement) {\n      this.clearElement.classList.add('d-none')\n    }\n\n    // Show search toolbar\n    if (this.toolbarElement) {\n      this.toolbarElement.classList.remove('d-none')\n    }\n\n    // Hide menu\n    if (this.getOption('show-on-focus') === false) {\n      this.hide()\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.search.cleared')\n  }\n\n  public isProcessing = () => {\n    return this.processing\n  }\n\n  public getQuery = () => {\n    return this.inputElement.value\n  }\n\n  public getMenu = () => {\n    return this.menuObject\n  }\n\n  public getFormElement = () => {\n    return this.formElement\n  }\n\n  public getInputElement(): HTMLInputElement {\n    return this.inputElement\n  }\n\n  public getContentElement(): HTMLElement {\n    return this.contentElement\n  }\n\n  public getElement(): HTMLElement {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  // Static methods\n  public static getInstance = (\n    el: HTMLElement,\n    componentName: string = defaultSearchQueires.componentName\n  ) => {\n    const Search = DataUtil.get(el, componentName)\n    if (Search) {\n      return Search\n    }\n\n    return null\n  }\n\n  public static createInstances = (\n    selector: string = defaultSearchQueires.instanseQuery,\n    options: ISearchOptions = defaultSearchOptions,\n    queries: ISearchQueries = defaultSearchQueires\n  ) => {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((el) => {\n      const item = el as HTMLElement\n      let Search = SearchComponent.getInstance(item)\n      if (!Search) {\n        Search = new SearchComponent(item, options, queries)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string = defaultSearchQueires.instanseQuery,\n    options: ISearchOptions = defaultSearchOptions,\n    queries: ISearchQueries = defaultSearchQueires\n  ): SearchComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let Search = SearchComponent.getInstance(item)\n    if (!Search) {\n      Search = new SearchComponent(item, options, queries)\n    }\n    return Search\n  }\n\n  public static bootstrap = (selector: string = defaultSearchQueires.instanseQuery) => {\n    SearchComponent.createInstances(selector)\n  }\n\n  public static reinitialization = (selector: string = defaultSearchQueires.instanseQuery) => {\n    SearchComponent.createInstances(selector)\n  }\n}\nexport {SearchComponent, defaultSearchOptions, defaultSearchQueires}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {FC} from 'react'\nimport {Link} from 'react-router-dom'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\n\nconst QuickLinks: FC = () => (\n  <div\n    className='menu menu-sub menu-sub-dropdown menu-column w-250px w-lg-325px'\n    data-kt-menu='true'\n  >\n    <div\n      className='d-flex flex-column flex-center bgi-no-repeat rounded-top px-9 py-10'\n      style={{backgroundImage: `url('${toAbsoluteUrl('/media/misc/pattern-1.jpg')}')`}}\n    >\n      <h3 className='text-white fw-bold mb-3'>Quick Links</h3>\n\n      <span className='badge bg-primary py-2 px-3'>25 pending tasks</span>\n    </div>\n\n    <div className='row g-0'>\n      <div className='col-6'>\n        <a\n          href='#'\n          className='d-flex flex-column flex-center h-100 p-6 bg-hover-light border-end border-bottom'\n        >\n          <KTSVG\n            path='/media/icons/duotune/finance/fin009.svg'\n            className='svg-icon-3x svg-icon-primary mb-2'\n          />\n          <span className='fs-5 fw-bold text-gray-800 mb-0'>Accounting</span>\n          <span className='fs-7 text-gray-400'>eCommerce</span>\n        </a>\n      </div>\n\n      <div className='col-6'>\n        <a\n          href='#'\n          className='d-flex flex-column flex-center h-100 p-6 bg-hover-light border-bottom'\n        >\n          <KTSVG\n            path='/media/icons/duotune/communication/com010.svg'\n            className='svg-icon-3x svg-icon-primary mb-2'\n          />\n          <span className='fs-5 fw-bold text-gray-800 mb-0'>Administration</span>\n          <span className='fs-7 text-gray-400'>Console</span>\n        </a>\n      </div>\n\n      <div className='col-6'>\n        <a href='#' className='d-flex flex-column flex-center h-100 p-6 bg-hover-light border-end'>\n          <KTSVG\n            path='/media/icons/duotune/abstract/abs042.svg'\n            className='svg-icon-3x svg-icon-primary mb-2'\n          />\n          <span className='fs-5 fw-bold text-gray-800 mb-0'>Projects</span>\n          <span className='fs-7 text-gray-400'>Pending Tasks</span>\n        </a>\n      </div>\n\n      <div className='col-6'>\n        <a href='#' className='d-flex flex-column flex-center h-100 p-6 bg-hover-light'>\n          <KTSVG\n            path='/media/icons/duotune/finance/fin006.svg'\n            className='svg-icon-3x svg-icon-primary mb-2'\n          />\n          <span className='fs-5 fw-bold text-gray-800 mb-0'>Customers</span>\n          <span className='fs-7 text-gray-400'>Latest cases</span>\n        </a>\n      </div>\n    </div>\n\n    <div className='py-2 text-center border-top'>\n      <Link to='/profile' className='btn btn-color-gray-600 btn-active-color-primary'>\n        View All <KTSVG path='/media/icons/duotune/arrows/arr064.svg' className='svg-icon-5' />\n      </Link>\n    </div>\n  </div>\n)\n\nexport {QuickLinks}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {FC} from 'react'\n\nimport {Link} from 'react-router-dom'\n\n\nimport * as auth from '../../../../app/modules/auth/redux/AuthRedux'\nimport {useDispatch} from 'react-redux'\nimport {toAbsoluteUrl} from '../../../helpers'\n\nconst HeaderUserMenu: FC = () => {\n \n\n  const dispatch = useDispatch()\n  const logout = () => {\n    dispatch(auth.actions.logout())\n  }\n\n  return (\n    <div\n      className='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg menu-state-primary fw-bold py-4 fs-6 w-275px'\n      data-kt-menu='true'\n    >\n      <div className='menu-item px-3'>\n        <div className='menu-content d-flex align-items-center px-3'>\n          <div className='symbol symbol-50px me-5'>\n            <img alt='Logo' src={toAbsoluteUrl('/media/avatars/300-1.jpg')} />\n          </div>\n\n          <div className='d-flex flex-column'>\n            \n            <a href='#' className='fw-bold fs-5 text-dark pb-2'>\n              {/* {user.email} */} superadmin@admin.com\n            </a>\n            <div className='menu-item '>\n              <a onClick={logout} className='btn text-white fw-bold' style={{backgroundColor:'#03AC84'}}>\n                Đăng xuất\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='separator my-2 w-80 mx-auto' style={{background:'#CACACA'}}></div>\n      <div className='menu-item px-5 my-1'>\n        <Link to='' className='menu-link '>\n          <img alt='history' src='/media/icons/duotune/abstract/history.svg' className='pe-3'></img> Lịch sử đăng nhập\n        </Link>\n      </div>\n      <div className='menu-item px-5 my-1'>\n        <Link to='' className='menu-link '>\n        <img alt='history' src='/media/icons/duotune/abstract/setting.svg' className='pe-3'></img> Cài đặt khác\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport {HeaderUserMenu}\n","import {FC} from 'react'\nimport {format} from 'timeago.js'\nconst Notification = [\n  {\n    type: 'partner',\n    id: 'P0914481315',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'customer',\n    id: 'P0913556781',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'newfeed',\n    feedID: 'P0914481315S',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'reportedfeed',\n    feedID: 'P0914481315S',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'cancel',\n    order: '914481315',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'customer',\n    id: 'P09233454333',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'missing',\n    order: '9144813156',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'reportedfeed',\n    feedID: 'P0914235534S',\n    createdAt: Date.now(),\n  },\n  {\n    type: 'newfeed',\n    feedID: 'P09144866887F',\n    createdAt: Date.now(),\n  },\n]\nconst NofitycationRender = () => {\n  return Notification.map((NotiItem, index) => {\n    if (NotiItem.type === 'partner') {\n      return (\n        <div className='d-flex flex-row align-items-center py-3 ' key={index}>\n          <img alt='user' src='/media/noti/user.png' style={{width:'35px',height:'35px', marginRight:'10px'}} />\n          <div className='d-flex flex-column '>\n            <div style={{fontWeight:'500'}} className='fs-6'>\n              Đối tác <span style={{fontWeight:'700'}}>{NotiItem.id}</span> tạo tài khoản thành công{' '}\n            </div>\n            <div className='mb-1 ' style={{color: '#828282', fontSize: '12px'}}>\n              {format(NotiItem.createdAt)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (NotiItem.type === 'customer') {\n      return (\n        <div className='d-flex flex-row align-items-center py-3' key={index}>\n          <img alt='user' src='/media/noti/user.png' style={{width:'35px',height:'35px', marginRight:'10px'}} />\n          <div className='d-flex flex-column '>\n            <div style={{fontWeight:'500'}} className='fs-6'>\n              Người dùng  <span style={{fontWeight:'700'}}>{NotiItem.id}</span> tạo tài khoản thành công{' '}\n            </div>\n            <div className='mb-1 ' style={{color: '#828282', fontSize: '12px'}}>\n              {format(NotiItem.createdAt)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (NotiItem.type === 'newfeed') {\n      return (\n        <div className='d-flex flex-row align-items-center py-3' key={index}>\n          <img alt='user' src='/media/noti/feed.png' style={{width:'35px',height:'35px', marginRight:'10px'}} />\n          <div className='d-flex flex-column '>\n            <div style={{fontWeight:'500'}} className='fs-6'>\n              Bài đăng  <span style={{fontWeight:'700'}}>{NotiItem.feedID}</span> đã được tạo {' '}\n            </div>\n            <div className='mb-1 ' style={{color: '#828282', fontSize: '12px'}}>\n              {format(NotiItem.createdAt)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (NotiItem.type === 'reportedfeed') {\n      return (\n        <div className='d-flex flex-row align-items-center py-3' key={index}>\n          <img alt='user' src='/media/noti/reported.png' style={{width:'35px',height:'35px', marginRight:'10px'}} />\n          <div className='d-flex flex-column '>\n            <div style={{fontWeight:'500'}} className='fs-6'>\n              Bài đăng  <span style={{fontWeight:'700'}}>{NotiItem.feedID}</span> bị báo cáo vi phạm {' '}\n            </div>\n            <div className='mb-1 ' style={{color: '#828282', fontSize: '12px'}}>\n              {format(NotiItem.createdAt)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (NotiItem.type === 'cancel') {\n      return (\n        <div className='d-flex flex-row align-items-center py-3' key={index}>\n          <img alt='user' src='/media/noti/stamp.png' style={{width:'35px',height:'35px', marginRight:'10px'}} />\n          <div className='d-flex flex-column '>\n            <div style={{fontWeight:'500'}} className='fs-6'>\n              Đơn đặt <span style={{fontWeight:'700'}}>{NotiItem.order}</span> đã hủy {' '}\n            </div>\n            <div className='mb-1 ' style={{color: '#828282', fontSize: '12px'}}>\n              {format(NotiItem.createdAt)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (NotiItem.type === 'missing') {\n      return (\n        <div className='d-flex flex-row align-items-center py-3' key={index}>\n          <img alt='user' src='/media/noti/stamp.png' style={{width:'35px',height:'35px', marginRight:'10px'}} />\n          <div className='d-flex flex-column '>\n            <div style={{fontWeight:'500'}} className='fs-6'>\n              Đơn đặt <span style={{fontWeight:'700'}}>{NotiItem.order}</span> vắng mặt {' '}\n            </div>\n            <div className='mb-1 ' style={{color: '#828282', fontSize: '12px'}}>\n              {format(NotiItem.createdAt)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return false\n  })\n}\nconst HeaderNotificationsMenu: FC = () => (\n  <div\n    className='menu menu-sub menu-sub-dropdown menu-column w-475px '\n    data-kt-menu='true'\n    \n  >\n    <div className='d-flex flex-column'>\n      <div\n        className='py-6 ps-8 fs-3'\n        style={{fontWeight: '700', zIndex: '1', boxShadow: '0 4px 20px 0 rgba(0, 0, 0, 0.1)'}}\n      >\n        Thông báo\n      </div>\n      <div className='d-flex flex-column  px-8 h-500px scroll'>{NofitycationRender()}</div>\n    </div>\n  </div>\n)\n\nexport {HeaderNotificationsMenu}\n","export const ChatTimeAgo =  function(number: number, index: number): [string, string] {\n    return [\n      ['Vừa xong', 'một lúc'],\n      ['Vừa xong', 'trong %s giây'],\n      ['1 phút', 'trong 1 phút'],\n      ['%s phút', 'trong %s phút'],\n      ['1 giờ', 'trong 1 giờ'],\n      ['%s giờ', 'trong %s giờ'],\n      ['1 ngày', 'trong 1 ngày'],\n      ['%s ngày', 'trong %s ngày'],\n      ['1 tuần', 'trong 1 tuần'],\n      ['%s tuần', 'trong %s tuần'],\n      ['1 tháng', 'trong 1 tháng'],\n      ['%s tháng', 'trong %s tháng'],\n      ['1 năm', 'trong 1 năm'],\n      ['%s năm', 'trong %s năm'],\n    ][index] as [string, string];\n  }","import io from 'socket.io-client'\nimport { URL_BOOKING_STUDIO } from '../../../../setup/URL'\nexport const socket = io(`${URL_BOOKING_STUDIO?.slice(0,-4)}`)\n\n","import \"./TypingAnimation.scss\"\nexport const TypingAnimation = () => {\n    return (\n        <div className=\"geeks\">\n            <span>Đ</span>\n            <span>a</span>\n            <span>n</span>\n            <span>g</span>\n            {' '}\n            <span>n</span>\n            <span>h</span>\n            <span>ậ</span>\n            <span>p</span>\n            <span>.</span>\n            <span>.</span>\n            <span>.</span>\n            <span></span>\n        </div>\n    )\n}","import React, {useState, useRef, useEffect} from 'react'\nimport {CONVERSATION} from './DrawerMessenger'\nimport Axios, {AxiosResponse} from 'axios'\nimport {format, register} from 'timeago.js'\nimport {ChatTimeAgo} from '../../../../app/components/ChatTimeAgo/ChatTimeAgo'\nimport moment from 'moment'\nimport ScrollToBottom from 'react-scroll-to-bottom'\nimport {socket} from './ConnectSocketIo'\nimport {TypingAnimation} from '../../../../app/components/TypingAnimation/TypingAnimation'\nimport { URL_BOOKING_STUDIO } from '../../../../setup/URL'\ntype UserChat = {\n  userchat: CONVERSATION\n}\nexport interface MESSAGE {\n  id: number\n  ConversationId: number\n  createdAt: string\n  Content: string | number\n  Chatting: string\n}\nregister('my-locale', ChatTimeAgo)\nformat('2016-06-12', 'my-locale')\nexport const ChatContent = React.memo((props: UserChat) => {\n  const {userchat} = props\n  const {id} = props.userchat\n  const [messageList, setMessageList] = useState<MESSAGE[]>([])\n  const [loading, setLoading] = useState(false)\n  const [isTyping, setIsTyping] = useState(false)\n  const typingTimeOutRef = useRef<any>(null)\n  useEffect(() => {\n    const ChatList = () => {\n      setLoading(false)\n      let promise = Axios({\n        url: `${URL_BOOKING_STUDIO}chat/message?page=1&limit=6&ConversationId=${id}`,\n        method: 'GET',\n      })\n      promise.then((result: AxiosResponse<any>) => {\n        console.log('Thanh cong')\n        //Nếu gọi api thành công\n        // => set lại state\n        setMessageList(result.data.data)\n        setLoading(true)\n        /* setTotalPages(result.data.pagination.totalPages) */\n      })\n      promise.catch((err) => {\n        console.log('That bai')\n        console.log(err.response.data)\n      })\n    }\n    ChatList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const [message, setMessage] = useState('')\n  const messageEndRef = useRef<null | HTMLDivElement>(null)\n  const scrollToBottom = () => {\n    messageEndRef.current?.scrollIntoView({behavior: 'smooth'})\n  }\n\n  const onInputChange = (event: any) => {\n    setMessage(event.target.value)\n    socket.emit('typing', {\n      ConversationId: userchat.id,\n      typing: true,\n    })\n    if (typingTimeOutRef.current) {\n      clearTimeout(typingTimeOutRef.current)\n    }\n    typingTimeOutRef.current = setTimeout(() => {\n      socket.emit('typing', {\n        ConversationId: userchat.id,\n        typing: false,\n      })\n    }, 1000)\n  }\n  const onEnterPress = async (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.keyCode === 13 && e.shiftKey === false && message.trim() !== '') {\n      e.preventDefault()\n      const stringMoment = `${moment().toISOString()}`\n      const thisMoment = moment(`${stringMoment.slice(0, 23)}-07:00`)\n      const modify = `${thisMoment.toISOString()}`\n      const messageContent = {\n        id: Math.random(),\n        ConversationId: userchat.id,\n        createdAt: modify,\n        Content: message,\n        Chatting: 'Admin',\n      }\n      setMessage('')\n      await Axios({\n        url: `${URL_BOOKING_STUDIO}chat/message?page=1&limit=10&ConversationId=${id}`,\n        method: 'POST',\n        data: {ConversationId: userchat.id, Content: message, Admin: true},\n      })\n      socket.emit('send_message', messageContent)\n    }\n    scrollToBottom()\n  }\n  useEffect(() => {\n    socket.on('receive_message', (data) => {\n      if (data.ConversationId === userchat.id) {\n        setIsTyping(false)\n        setMessageList((list) => [...list, data])\n        scrollToBottom()\n      } else {\n        return false\n      }\n    })\n    scrollToBottom()\n    socket.on('isTyping', (data) => {\n      if (data.ConversationId === userchat.id && data.typing === true) {\n        setIsTyping(true)\n        scrollToBottom()\n      } else {\n        setIsTyping(false)\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket])\n  return (\n    <div style={{height: '474px', overflow: 'hidden', width: '100%', position: 'relative'}}>\n      <div className='d-flex flex-row ps-6 py-3'>\n        <img\n          alt='user'\n          src='https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp'\n          style={{width: '40px', height: '40px'}}\n        ></img>\n        <div className='d-flex flex-column w-100 justify-content-center ps-3'>\n          <div>{userchat.Chatter.PartnerName}</div>\n        </div>\n      </div>\n      {loading ? (\n        <>\n          {messageList.length === 0 ? (\n            <div className='w-100 d-flex justify-content-center align-items-center '>\n              {' '}\n              <button\n                className='start-conversation'\n                onClick={async () => {\n                  const stringMoment = `${moment().toISOString()}`\n                  const thisMoment = moment(`${stringMoment.slice(0, 23)}-07:00`)\n                  const modify = `${thisMoment.toISOString()}`\n                  const messageContent = {\n                    id: Math.random(),\n                    ConversationId: userchat.id,\n                    createdAt: modify,\n                    Content: 'Xin chào',\n                    Chatting: 'Admin',\n                  }\n                  await socket.emit('send_message', messageContent)\n                  scrollToBottom()\n                  setMessage('')\n                  await Axios({\n                    url: `${URL_BOOKING_STUDIO}chat/message?page=1&limit=10&ConversationId=${id}`,\n                    method: 'POST',\n                    data: {ConversationId: userchat.id, Content: 'Xin chào', Admin: true},\n                  })\n                }}\n              >\n                Nhấn để trò chuyện ngay !\n              </button>{' '}\n              <img\n                alt='waving'\n                src='/media/icons/duotune/communication/waving.gif'\n                width={80}\n                height={80}\n              ></img>\n            </div>\n          ) : (\n            <ScrollToBottom\n              className='scroll-smooth h-325px w-100 d-flex flex-column justify-content-between'\n              followButtonClassName='text-danger bg-danger '\n              initialScrollBehavior='smooth'\n            >\n              {messageList\n                .sort((a: MESSAGE, b: MESSAGE) => {\n                  const a1: any = new Date(a.createdAt) //sua\n                  const b1: any = new Date(b.createdAt) // sua\n                  return a1 - b1\n                })\n                .map((itm, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className={\n                          itm.Chatting === 'Admin'\n                            ? ' px-6  d-flex w-100 d-flex flex-row-reverse fw-bold align-items-end'\n                            : ' px-6 d-flex w-100 justify-content-start align-items-end'\n                        }\n                      >\n                        <div\n                          className={\n                            itm.Chatting !== 'Admin'\n                              ? 'my-2 px-4 py-3 active-tabs-user-chat chat-item-main'\n                              : 'bg-gray-primary my-2 px-4 py-3 chat-item-main'\n                          }\n                        >\n                          {itm.Content}\n                        </div>\n                        <div className='mb-2 mx-2' style={{color: '#828282', fontSize: '12px'}}>\n                          {format(itm.createdAt.slice(0, -1).concat('+07:00'), 'my-locale')}\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })}\n              {isTyping ? (\n                <div className='d-flex align-items-center ps-6'>\n                  {' '}\n                  <img\n                    src='https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp'\n                    alt='avatar'\n                    className='d-flex align-self-center'\n                    width={40}\n                  />{' '}\n                  <TypingAnimation />\n                </div>\n              ) : (\n                <></>\n              )}\n            </ScrollToBottom>\n          )}\n        </>\n      ) : (\n        <div className='w-100 d-flex justify-content-center align-items-center h-325px '>\n          <div>\n            <div>\n              <div className='spinner-grow text-success' role='status'>\n                <span className='sr-only'>Loading...</span>\n              </div>\n              <div className='spinner-grow text-danger' role='status'>\n                <span className='sr-only'>Loading...</span>\n              </div>\n              <div className='spinner-grow text-warning' role='status'>\n                <span className='sr-only'>Loading...</span>\n              </div>\n              <div className='spinner-grow text-info' role='status'>\n                <span className='sr-only'>Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <div\n        className='py-4 d-flex flex-row w-100 align-items-center '\n        style={{\n          zIndex: '1',\n          boxShadow: '0 -4px 20px 0 rgba(0, 0, 0, 0.1)',\n          bottom: '0px',\n          position: 'absolute',\n        }}\n      >\n        <div className='ms-8'>\n          <img\n            alt='logochat'\n            src='/media/logos/logo-chat.png'\n            style={{height: '40px', width: '40px'}}\n          ></img>\n        </div>\n        <textarea\n          className='form-control form-control-flush rounded-pill '\n          style={{backgroundColor: '#F4F4F4', marginLeft: '10px'}}\n          rows={1}\n          data-kt-element='input'\n          placeholder='Type a message'\n          value={message}\n          onKeyDown={onEnterPress}\n          onChange={onInputChange}\n        ></textarea>\n\n        <div className='d-flex align-items-center me-2'>\n          <button\n            className='btn btn-sm btn-icon btn-active-light-primary me-1'\n            type='button'\n            data-bs-toggle='tooltip'\n            title='Coming soon'\n          >\n            <i className='bi bi-paperclip fs-3'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, {useState, useEffect, useRef} from 'react'\nimport {MESSAGE} from './ChatContent'\nimport {CONVERSATION} from './DrawerMessenger'\nimport moment from 'moment'\nimport {socket} from './ConnectSocketIo'\ntype ChatUserProps = {\n  userInfo: CONVERSATION\n  toggleClick: any\n  toggleState: any\n}\nexport const ChatUser = React.memo((props: ChatUserProps) => {\n  const {userInfo, toggleState, toggleClick} = props\n  const [isRead, setIsRead] = useState(false)\n  const [isOnline, setIsOnline] = useState(false)\n  const initMountState = useRef(true)\n  const [lastMessage, setLastMessage] = useState<MESSAGE | null>(\n    userInfo.newestMessage\n      ? {\n          id: userInfo.newestMessage.id,\n          ConversationId: userInfo.id,\n          createdAt: userInfo.newestMessage.createdAt,\n          Content: userInfo.newestMessage.Content,\n          Chatting:\n            userInfo.newestMessage.CustomerId === -1 && userInfo.newestMessage.PartnerId === -1\n              ? 'Admin'\n              : 'Other',\n        }\n      : null\n  )\n  useEffect(() => {\n    if (initMountState.current) {\n      initMountState.current = false\n    } else if(userInfo.newestMessage) {\n      setIsRead(userInfo.newestMessage.CustomerId === -1 && userInfo.newestMessage.PartnerId === -1 ? true:false)\n      setLastMessage(\n        { \n              id: userInfo.newestMessage.id,\n              ConversationId: userInfo.id,\n              createdAt: userInfo.newestMessage.createdAt,\n              Content: userInfo.newestMessage.Content,\n              Chatting:\n                userInfo.newestMessage.CustomerId === -1 && userInfo.newestMessage.PartnerId === -1\n                  ? 'Admin'\n                  : 'Other',\n            }\n      )\n    }\n  }, [userInfo])\n  useEffect(() => {\n    socket.emit('login', {\n      userId: 100,\n      room: userInfo.id,\n    })\n    socket.on('online', (userIds: number[]) => {\n      setIsOnline(userIds.includes(userInfo.Chatter.id))\n      /*    console.log(\"Online\", userIds); */\n    })\n    socket.on('offline', (userIds: number[]) => {\n      setIsOnline(userIds.includes(userInfo.Chatter.id))\n      /*   console.log(\"offline\", userIds); */\n    })\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket, userInfo])\n  return (\n    <li\n      className={\n        toggleState === userInfo.id\n          ? 'tabs-user-chat active-tabs-user-chat d-flex align-items-center'\n          : 'tabs-user-chat'\n      }\n      onClick={() => {\n        toggleClick(userInfo.id)\n        setIsRead(true)\n      }}\n      style={{height: '56px'}}\n    >\n      <div className='d-flex flex-row w-100 px-6 align-items-center h-100'>\n        <div className='d-flex align-items-center h-100'>\n          <img\n            src='https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp'\n            alt='avatar'\n            className='d-flex align-self-center me-3'\n            width={40}\n          />\n        </div>\n        <div className='py-2 h-100 w-100 d-flex flex-column justify-content-between'>\n          <div className='d-flex justify-content-between align-items-center'>\n            <p className='fw-normal mb-0 fs-6 text-dark'>{userInfo.Chatter.PartnerName}</p>\n            {isOnline ? (\n              <span className='bullet bullet-dot bg-success h-10px w-10px'></span>\n            ) : (\n              <span className='bullet bullet-dot bg-danger h-10px w-10px'></span>\n            )}\n          </div>\n\n          {lastMessage ? (\n            lastMessage.Chatting === 'Admin' ? (\n              <div\n                className='w-100 d-flex justify-content-between'\n                style={{color: '#828282', fontSize: '13px'}}\n              >\n                <div>\n                  Bạn:{' '}\n                  {lastMessage.Content.toString().length <= 15\n                    ? lastMessage.Content\n                    : `${lastMessage.Content.toString().slice(0, 16)}...`}\n                </div>\n                <div>{moment(lastMessage.createdAt).format('HH:mm')}</div>\n              </div>\n            ) : (\n              <div\n                className='w-100 d-flex justify-content-between'\n                style={{\n                  color: isRead ? '#828282' : '#000',\n                  fontSize: '13px',\n                  fontWeight: isRead ? 500 : 700,\n                }}\n              >\n                <div>\n                  {lastMessage.Content.toString().length <= 15\n                    ? lastMessage.Content\n                    : `${lastMessage.Content.toString().slice(0, 16)}...`}\n                </div>\n                <div>{moment(lastMessage.createdAt).format('HH:mm')}</div>\n              </div>\n            )\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    </li>\n  )\n})\n","import React, {useState, FC, useEffect, useRef} from 'react'\nimport {ChatContent} from './ChatContent'\nimport {ChatUser} from './ChatUser'\nimport Axios, {AxiosResponse} from 'axios'\nimport {socket} from './ConnectSocketIo'\nimport { URL_BOOKING_STUDIO } from '../../../../setup/URL'\nexport interface CONVERSATION {\n  id: number\n  withPartner: boolean\n  Chatter: {\n    id: number\n    TenantId: any\n    PartnerName: string | null\n    RepresentativeName: string | null\n    Phone: string\n    OtherPhone: string | null\n    Email: string | null\n    ReEmail: string | null\n    BusinessRegistrationLicenseNumber: any\n    Address: string | null\n    BankBranchName: string | null\n    BankAccount: string | null\n    BankAccountOwnerName: string | null\n    AutoGeneratedPassword: string | null\n    CreationTime: string\n    CreatorUserId: any\n    LastModificationTime: string | null\n    LastModifierUserId: any\n    IsDeleted: boolean\n    DeleterUserId: any\n    DeletionTime: any\n    BusinessType: any\n    PersonalIdentity: any\n    ProvinceId: number\n  }\n  createdAt: string\n  updatedAt: string\n  newestMessage: {\n    id: number\n    ConversationId: number\n    Content: string\n    PartnerId: number\n    CustomerId: number\n    createdAt: string\n    updatedAt: string\n  } | null\n}\nexport const DrawerMessenger: FC = React.memo(() => {\n  const [toggleState, setToggleState] = useState(0)\n  const [searchTerm, setSearchTerm] = useState('')\n  const initMountState = useRef<CONVERSATION[]>([])\n  const [conversation, setConversation] = useState<CONVERSATION[]>(initMountState.current)\n  /*   const [flag, setFlag] = useState(false) */\n  useEffect(() => {\n    const ChatList = () => {\n      let promise = Axios({\n        url: `${URL_BOOKING_STUDIO}chat/conversation?page=1&limit=3&option=0`,\n        method: 'GET',\n      })\n      promise.then((result: AxiosResponse<any>) => {\n        console.log('Thanh cong')\n        //Nếu gọi api thành công\n        // => set lại state\n        initMountState.current = result.data.data\n        setConversation(result.data.data)\n        setToggleState(result.data.data[0].id)\n        console.log(\"da lay ve\");\n        /* setTotalPages(result.data.pagination.totalPages) */\n      })\n      promise.catch((err) => {\n        console.log('That bai')\n        console.log(err.response.data)\n      })\n    }\n    ChatList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  useEffect(() => {\n      socket.on('receive_message', (data) => {\n        let promise = Axios({\n          url: `${URL_BOOKING_STUDIO}chat/conversation?page=1&limit=1&option=0`,\n          method: 'GET',\n        })\n        promise.then((result: AxiosResponse<any>) => {\n          console.log('Thanh cong')\n          //Nếu gọi api thành công\n          // => set lại state\n          let newConversation = [...initMountState.current]\n          if(newConversation.findIndex((i) => i.id === result.data.data[0].id) !== -1){\n            var indexOf = newConversation.findIndex((i) => i.id === result.data.data[0].id)\n          newConversation.splice(indexOf, 1)\n          initMountState.current = [result.data.data[0], ...newConversation]\n          setConversation(initMountState.current)\n          }\n          else {\n            initMountState.current = [result.data.data[0], ...newConversation]\n          setConversation(initMountState.current)\n          }\n        })\n        promise.catch((err) => {\n          console.log('That bai')\n          console.log(err.response.data)\n        })\n      })\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket])\n  const ListUserChat = () => {\n    return conversation.filter((chat) => {\n        if (searchTerm === '') {\n          return chat\n        } else if (\n          chat.Chatter.PartnerName\n            ? chat.Chatter.PartnerName.toLowerCase().includes(searchTerm.toLowerCase())\n            : ''\n        ) {\n          return chat\n        } \n        return false\n      }).map((chat) => (\n        <ChatUser\n          userInfo={chat}\n          toggleState={toggleState}\n          toggleClick={(e: any) => setToggleState(e)}\n        />\n      ))\n  }\n  const ListChat = () => {\n    return conversation.map((chat) => (\n        <div\n          className={toggleState === chat.id ? 'content-chat  active-content-chat' : 'content-chat'}\n          key={chat.id}\n        >\n          <ChatContent userchat={chat} />\n        </div>\n      ))\n  }\n  return (\n    <div className='d-flex flex-column w-100 h-100 overflow-hidden'>\n      <div\n        className='d-flex w-100 flex-row justify-content-between '\n        style={{zIndex: '1', boxShadow: '0 4px 20px 0 rgba(0, 0, 0, 0.1)'}}\n      >\n        <div className='py-4 px-10 d-flex flex-row align-items-center'>\n          <i\n            className='fa-regular fa-comment-dots h-100 d-flex align-items-center pe-4'\n            style={{fontSize: '27px', color: '#E22828'}}\n          ></i>\n          <span style={{fontSize: '23px', color: '#E22828', fontWeight: '600'}}>Chat</span>\n        </div>\n      </div>\n      <div className='d-flex w-100 h-100'>\n        <div className='col-5'>\n          <div className=' pt-8  '>\n            <div className='px-6'>\n              <div className='input-group rounded mb-3' style={{border: '1px solid #B2B2B2'}}>\n                <span className='input-group-text border-0 bg-white' id='search-addon'>\n                  <i className='fas fa-search fs-2' />\n                </span>\n                <input\n                  type='text'\n                  className='form-control rounded fs-4'\n                  placeholder='Tìm kiếm'\n                  aria-label='Search'\n                  aria-describedby='search-addon'\n                  style={{border: 'none'}}\n                  onChange={(event) => {\n                    setSearchTerm(event.target.value)\n                  }}\n                />\n              </div>\n            </div>\n            <div style={{height: '390px', overflow: 'scroll'}}>\n              <ul className='list-unstyled mb-0 d-flex flex-column justify-content-center'>\n                {ListUserChat()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className='h-100 ' style={{borderRight: '2px solid #CACACA'}}></div>\n\n        <div className='col-7' style={{height: '474px', overflow: 'hidden'}}>\n          {ListChat()}\n        </div>\n      </div>\n    </div>\n  )\n})\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {FC, useEffect, useRef, useState} from 'react'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\nimport {Formik, Form, FormikValues, Field, ErrorMessage} from 'formik'\nimport * as Yup from 'yup'\nimport {StepperComponent} from '../../../assets/ts/components'\n\ninterface ICreateAccount {\n  appName: string\n  category: string\n  framework: string\n  dbName: string\n  dbType: string\n  nameOnCard: string\n  cardNumber: string\n  cardExpiryMonth: string\n  cardExpiryYear: string\n  cardCvv: string\n  saveCard: string\n}\n\nconst inits: ICreateAccount = {\n  appName: '',\n  category: '1',\n  framework: '1',\n  dbName: '',\n  dbType: '1',\n  nameOnCard: 'Max Doe',\n  cardNumber: '4111 1111 1111 1111',\n  cardExpiryMonth: '1',\n  cardExpiryYear: '2025',\n  cardCvv: '123',\n  saveCard: '1',\n}\n\nconst createAppSchema = [\n  Yup.object({\n    appName: Yup.string().required().label('App name'),\n    category: Yup.string().required().label('Category'),\n  }),\n  Yup.object({\n    framework: Yup.string().required().label('Framework'),\n  }),\n  Yup.object({\n    dbName: Yup.string().required().label('Database name'),\n    dbType: Yup.string().required().label('Database engine'),\n  }),\n  Yup.object({\n    nameOnCard: Yup.string().required().label('Name'),\n    cardNumber: Yup.string().required().label('Card Number'),\n    cardExpiryMonth: Yup.string().required().label('Expiration Month'),\n    cardExpiryYear: Yup.string().required().label('Expiration Year'),\n    cardCvv: Yup.string().required().label('CVV'),\n  }),\n]\n\nconst Main: FC = () => {\n  const stepperRef = useRef<HTMLDivElement | null>(null)\n  const stepper = useRef<StepperComponent | null>(null)\n  const [currentSchema, setCurrentSchema] = useState(createAppSchema[0])\n  const [initValues] = useState<ICreateAccount>(inits)\n\n  const loadStepper = () => {\n    stepper.current = StepperComponent.createInsance(stepperRef.current as HTMLDivElement)\n  }\n\n  const prevStep = () => {\n    if (!stepper.current) {\n      return\n    }\n\n    stepper.current.goPrev()\n\n    setCurrentSchema(createAppSchema[stepper.current.currentStepIndex - 1])\n  }\n\n  const submitStep = (values: ICreateAccount, actions: FormikValues) => {\n    if (!stepper.current) {\n      return\n    }\n\n    setCurrentSchema(createAppSchema[stepper.current.currentStepIndex])\n\n    if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {\n      stepper.current.goNext()\n    } else {\n      stepper.current.goto(1)\n      actions.resetForm()\n    }\n  }\n\n  useEffect(() => {\n    if (!stepperRef.current) {\n      return\n    }\n\n    loadStepper()\n  }, [stepperRef])\n\n  return (\n    <div className='modal fade' id='kt_modal_create_app' aria-hidden='true'>\n      <div className='modal-dialog modal-dialog-centered mw-900px'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <h2>Create App</h2>\n\n            <div className='btn btn-sm btn-icon btn-active-color-primary' data-bs-dismiss='modal'>\n              <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-1' />\n            </div>\n          </div>\n\n          <div className='modal-body py-lg-10 px-lg-10'>\n            <div\n              ref={stepperRef}\n              className='stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid'\n              id='kt_modal_create_app_stepper'\n            >\n              <div className='d-flex justify-content-center justify-content-xl-start flex-row-auto w-100 w-xl-300px'>\n                <div className='stepper-nav ps-lg-10'>\n                  <div className='stepper-item current' data-kt-stepper-element='nav'>\n                    <div className='stepper-line w-40px'></div>\n\n                    <div className='stepper-icon w-40px h-40px'>\n                      <i className='stepper-check fas fa-check'></i>\n                      <span className='stepper-number'>1</span>\n                    </div>\n\n                    <div className='stepper-label'>\n                      <h3 className='stepper-title'>Details</h3>\n\n                      <div className='stepper-desc'>Name your App</div>\n                    </div>\n                  </div>\n\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\n                    <div className='stepper-line w-40px'></div>\n\n                    <div className='stepper-icon w-40px h-40px'>\n                      <i className='stepper-check fas fa-check'></i>\n                      <span className='stepper-number'>2</span>\n                    </div>\n\n                    <div className='stepper-label'>\n                      <h3 className='stepper-title'>Frameworks</h3>\n\n                      <div className='stepper-desc'>Define your app framework</div>\n                    </div>\n                  </div>\n\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\n                    <div className='stepper-line w-40px'></div>\n\n                    <div className='stepper-icon w-40px h-40px'>\n                      <i className='stepper-check fas fa-check'></i>\n                      <span className='stepper-number'>3</span>\n                    </div>\n\n                    <div className='stepper-label'>\n                      <h3 className='stepper-title'>Database</h3>\n\n                      <div className='stepper-desc'>Select the app database type</div>\n                    </div>\n                  </div>\n\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\n                    <div className='stepper-line w-40px'></div>\n\n                    <div className='stepper-icon w-40px h-40px'>\n                      <i className='stepper-check fas fa-check'></i>\n                      <span className='stepper-number'>4</span>\n                    </div>\n\n                    <div className='stepper-label'>\n                      <h3 className='stepper-title'>Billing</h3>\n\n                      <div className='stepper-desc'>Provide payment details</div>\n                    </div>\n                  </div>\n\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\n                    <div className='stepper-line w-40px'></div>\n\n                    <div className='stepper-icon w-40px h-40px'>\n                      <i className='stepper-check fas fa-check'></i>\n                      <span className='stepper-number'>5</span>\n                    </div>\n\n                    <div className='stepper-label'>\n                      <h3 className='stepper-title'>Release</h3>\n\n                      <div className='stepper-desc'>Review and Submit</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='flex-row-fluid py-lg-5 px-lg-15'>\n                <Formik\n                  validationSchema={currentSchema}\n                  initialValues={initValues}\n                  onSubmit={submitStep}\n                >\n                  {() => (\n                    <Form className='form' noValidate id='kt_modal_create_app_form'>\n                      <div className='current' data-kt-stepper-element='content'>\n                        <div className='w-100'>\n                          <div className='fv-row mb-10'>\n                            <label className='d-flex align-items-center fs-5 fw-bold mb-2'>\n                              <span className='required'>App Name</span>\n                              <i\n                                className='fas fa-exclamation-circle ms-2 fs-7'\n                                data-bs-toggle='tooltip'\n                                title='Specify your unique app name'\n                              ></i>\n                            </label>\n\n                            <Field\n                              type='text'\n                              className='form-control form-control-lg form-control-solid'\n                              name='appName'\n                              placeholder=''\n                            />\n                            <div className='text-danger'>\n                              <ErrorMessage name='appName' />\n                            </div>\n                          </div>\n\n                          <div className='fv-row'>\n                            <label className='d-flex align-items-center fs-5 fw-bold mb-4'>\n                              <span className='required'>Category</span>\n\n                              <i\n                                className='fas fa-exclamation-circle ms-2 fs-7'\n                                data-bs-toggle='tooltip'\n                                title='Select your app category'\n                              ></i>\n                            </label>\n\n                            <div className='fv-row'>\n                              <label className='d-flex flex-stack mb-5 cursor-pointer'>\n                                <span className='d-flex align-items-center me-2'>\n                                  <span className='symbol symbol-50px me-6'>\n                                    <span className='symbol-label bg-light-primary'>\n                                      <KTSVG\n                                        path='/media/icons/duotune/maps/map004.svg'\n                                        className='svg-icon-1 svg-icon-primary'\n                                      />\n                                    </span>\n                                  </span>\n\n                                  <span className='d-flex flex-column'>\n                                    <span className='fw-bolder fs-6'>Quick Online Courses</span>\n\n                                    <span className='fs-7 text-muted'>\n                                      Creating a clear text structure is just one SEO\n                                    </span>\n                                  </span>\n                                </span>\n\n                                <span className='form-check form-check-custom form-check-solid'>\n                                  <Field\n                                    className='form-check-input'\n                                    type='radio'\n                                    name='category'\n                                    value='1'\n                                  />\n                                </span>\n                              </label>\n\n                              <label className='d-flex flex-stack mb-5 cursor-pointer'>\n                                <span className='d-flex align-items-center me-2'>\n                                  <span className='symbol symbol-50px me-6'>\n                                    <span className='symbol-label bg-light-danger  '>\n                                      <KTSVG\n                                        path='/media/icons/duotune/general/gen024.svg'\n                                        className='svg-icon-1 svg-icon-danger'\n                                      />\n                                    </span>\n                                  </span>\n\n                                  <span className='d-flex flex-column'>\n                                    <span className='fw-bolder fs-6'>Face to Face Discussions</span>\n\n                                    <span className='fs-7 text-muted'>\n                                      Creating a clear text structure is just one aspect\n                                    </span>\n                                  </span>\n                                </span>\n\n                                <span className='form-check form-check-custom form-check-solid'>\n                                  <Field\n                                    className='form-check-input'\n                                    type='radio'\n                                    name='category'\n                                    value='2'\n                                  />\n                                </span>\n                              </label>\n\n                              <label className='d-flex flex-stack cursor-pointer'>\n                                <span className='d-flex align-items-center me-2'>\n                                  <span className='symbol symbol-50px me-6'>\n                                    <span className='symbol-label bg-light-success'>\n                                      <KTSVG\n                                        path='/media/icons/duotune/general/gen013.svg'\n                                        className='svg-icon-1 svg-icon-success'\n                                      />\n                                    </span>\n                                  </span>\n\n                                  <span className='d-flex flex-column'>\n                                    <span className='fw-bolder fs-6'>Full Intro Training</span>\n\n                                    <span className='fs-7 text-muted'>\n                                      Creating a clear text structure copywriting\n                                    </span>\n                                  </span>\n                                </span>\n\n                                <span className='form-check form-check-custom form-check-solid'>\n                                  <Field\n                                    className='form-check-input'\n                                    type='radio'\n                                    name='category'\n                                    value='3'\n                                  />\n                                </span>\n                              </label>\n                            </div>\n\n                            <div className='text-danger'>\n                              <ErrorMessage name='category' />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div data-kt-stepper-element='content'>\n                        <div className='w-100'>\n                          <div className='fv-row'>\n                            <label className='d-flex align-items-center fs-5 fw-bold mb-4'>\n                              <span className='required'>Select Framework</span>\n                              <i\n                                className='fas fa-exclamation-circle ms-2 fs-7'\n                                data-bs-toggle='tooltip'\n                                title='Specify your apps framework'\n                              ></i>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer mb-5'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-warning'>\n                                    <i className='fab fa-html5 text-warning fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>HTML5</span>\n\n                                  <span className='fs-7 text-muted'>Base Web Projec</span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='framework'\n                                  value='1'\n                                />\n                              </span>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer mb-5'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-success'>\n                                    <i className='fab fa-react text-success fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>ReactJS</span>\n                                  <span className='fs-7 text-muted'>\n                                    Robust and flexible app framework\n                                  </span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='framework'\n                                  value='2'\n                                />\n                              </span>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer mb-5'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-danger'>\n                                    <i className='fab fa-angular text-danger fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>Angular</span>\n                                  <span className='fs-7 text-muted'>Powerful data mangement</span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='framework'\n                                  value='3'\n                                />\n                              </span>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-primary'>\n                                    <i className='fab fa-vuejs text-primary fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>Vue</span>\n                                  <span className='fs-7 text-muted'>\n                                    Lightweight and responsive framework\n                                  </span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='framework'\n                                  value='4'\n                                />\n                              </span>\n                            </label>\n                          </div>\n                          <div className='text-danger'>\n                            <ErrorMessage name='framework' />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div data-kt-stepper-element='content'>\n                        <div className='w-100'>\n                          <div className='fv-row mb-10'>\n                            <label className='required fs-5 fw-bold mb-2'>Database Name</label>\n\n                            <Field\n                              type='text'\n                              className='form-control form-control-lg form-control-solid'\n                              name='dbName'\n                              placeholder=''\n                            />\n                            <div className='text-danger'>\n                              <ErrorMessage name='dbName' />\n                            </div>\n                          </div>\n\n                          <div className='fv-row'>\n                            <label className='d-flex align-items-center fs-5 fw-bold mb-4'>\n                              <span className='required'>Select Database Engine</span>\n\n                              <i\n                                className='fas fa-exclamation-circle ms-2 fs-7'\n                                data-bs-toggle='tooltip'\n                                title='Select your app database engine'\n                              ></i>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer mb-5'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-success'>\n                                    <i className='fas fa-database text-success fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>MySQL</span>\n\n                                  <span className='fs-7 text-muted'>Basic MySQL database</span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='dbType'\n                                  value='1'\n                                />\n                              </span>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer mb-5'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-danger'>\n                                    <i className='fab fa-google text-danger fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>Firebase</span>\n\n                                  <span className='fs-7 text-muted'>\n                                    Google based app data management\n                                  </span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='dbType'\n                                  value='2'\n                                />\n                              </span>\n                            </label>\n\n                            <label className='d-flex flex-stack cursor-pointer'>\n                              <span className='d-flex align-items-center me-2'>\n                                <span className='symbol symbol-50px me-6'>\n                                  <span className='symbol-label bg-light-warning'>\n                                    <i className='fab fa-amazon text-warning fs-2x'></i>\n                                  </span>\n                                </span>\n\n                                <span className='d-flex flex-column'>\n                                  <span className='fw-bolder fs-6'>DynamoDB</span>\n\n                                  <span className='fs-7 text-muted'>\n                                    Amazon Fast NoSQL Database\n                                  </span>\n                                </span>\n                              </span>\n\n                              <span className='form-check form-check-custom form-check-solid'>\n                                <Field\n                                  className='form-check-input'\n                                  type='radio'\n                                  name='dbType'\n                                  value='3'\n                                />\n                              </span>\n                            </label>\n                          </div>\n\n                          <div className='text-danger'>\n                            <ErrorMessage name='dbType' />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div data-kt-stepper-element='content'>\n                        <div className='w-100'>\n                          <div className='pb-10 pb-lg-15'>\n                            <h2 className='fw-bolder text-dark'>Billing Details</h2>\n\n                            <div className='text-gray-400 fw-bold fs-6'>\n                              If you need more info, please check out\n                              <a href='#' className='text-primary fw-bolder'>\n                                Help Page\n                              </a>\n                              .\n                            </div>\n                          </div>\n                          <div className='d-flex flex-column mb-7 fv-row'>\n                            <label className='d-flex align-items-center fs-6 fw-bold form-label mb-2'>\n                              <span className='required'>Name On Card</span>\n                              <i\n                                className='fas fa-exclamation-circle ms-2 fs-7'\n                                data-bs-toggle='tooltip'\n                                title=\"Specify a card holder's name\"\n                              ></i>\n                            </label>\n\n                            <Field\n                              type='text'\n                              className='form-control form-control-solid'\n                              placeholder=''\n                              name='nameOnCard'\n                            />\n                            <div className='text-danger'>\n                              <ErrorMessage name='nameOnCard' />\n                            </div>\n                          </div>\n                          <div className='d-flex flex-column mb-7 fv-row'>\n                            <label className='required fs-6 fw-bold form-label mb-2'>\n                              Card Number\n                            </label>\n\n                            <div className='position-relative'>\n                              <Field\n                                type='text'\n                                className='form-control form-control-solid'\n                                placeholder='Enter card number'\n                                name='cardNumber'\n                              />\n                              <div className='text-danger'>\n                                <ErrorMessage name='cardNumber' />\n                              </div>\n\n                              <div className='position-absolute translate-middle-y top-50 end-0 me-5'>\n                                <img\n                                  src={toAbsoluteUrl('/media/svg/card-logos/visa.svg')}\n                                  alt=''\n                                  className='h-25px'\n                                />\n                                <img\n                                  src={toAbsoluteUrl('/media/svg/card-logos/mastercard.svg')}\n                                  alt=''\n                                  className='h-25px'\n                                />\n                                <img\n                                  src={toAbsoluteUrl('/media/svg/card-logos/american-express.svg')}\n                                  alt=''\n                                  className='h-25px'\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row mb-10'>\n                            <div className='col-md-8 fv-row'>\n                              <label className='required fs-6 fw-bold form-label mb-2'>\n                                Expiration Date\n                              </label>\n\n                              <div className='row fv-row'>\n                                <div className='col-6'>\n                                  <Field\n                                    as='select'\n                                    name='cardExpiryMonth'\n                                    className='form-select form-select-solid'\n                                  >\n                                    <option></option>\n                                    <option value='1'>1</option>\n                                    <option value='2'>2</option>\n                                    <option value='3'>3</option>\n                                    <option value='4'>4</option>\n                                    <option value='5'>5</option>\n                                    <option value='6'>6</option>\n                                    <option value='7'>7</option>\n                                    <option value='8'>8</option>\n                                    <option value='9'>9</option>\n                                    <option value='10'>10</option>\n                                    <option value='11'>11</option>\n                                    <option value='12'>12</option>\n                                  </Field>\n                                  <div className='text-danger'>\n                                    <ErrorMessage name='cardExpiryMonth' />\n                                  </div>\n                                </div>\n\n                                <div className='col-6'>\n                                  <Field\n                                    as='select'\n                                    name='cardExpiryYear'\n                                    className='form-select form-select-solid'\n                                  >\n                                    <option></option>\n                                    <option value='2021'>2021</option>\n                                    <option value='2022'>2022</option>\n                                    <option value='2023'>2023</option>\n                                    <option value='2024'>2024</option>\n                                    <option value='2025'>2025</option>\n                                    <option value='2026'>2026</option>\n                                    <option value='2027'>2027</option>\n                                    <option value='2028'>2028</option>\n                                    <option value='2029'>2029</option>\n                                    <option value='2030'>2030</option>\n                                    <option value='2031'>2031</option>\n                                  </Field>\n                                  <div className='text-danger'>\n                                    <ErrorMessage name='cardExpiryYear' />\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className='col-md-4 fv-row'>\n                              <label className='d-flex align-items-center fs-6 fw-bold form-label mb-2'>\n                                <span className='required'>CVV</span>\n                                <i\n                                  className='fas fa-exclamation-circle ms-2 fs-7'\n                                  data-bs-toggle='tooltip'\n                                  title='Enter a card CVV code'\n                                ></i>\n                              </label>\n\n                              <div className='position-relative'>\n                                <Field\n                                  type='text'\n                                  className='form-control form-control-solid'\n                                  placeholder='CVV'\n                                  name='cardCvv'\n                                />\n                                <div className='text-danger'>\n                                  <ErrorMessage name='cardCvv' />\n                                </div>\n\n                                <div className='position-absolute translate-middle-y top-50 end-0 me-3'>\n                                  <KTSVG\n                                    path='/media/icons/duotune/finance/fin002.svg'\n                                    className='svg-icon-2hx'\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='d-flex flex-stack'>\n                            <div className='me-5'>\n                              <label className='fs-6 fw-bold form-label'>\n                                Save Card for further billing?\n                              </label>\n                              <div className='fs-7 fw-bold text-gray-400'>\n                                If you need more info, please check budget planning\n                              </div>\n                            </div>\n\n                            <label className='form-check form-switch form-check-custom form-check-solid'>\n                              <Field className='form-check-input' type='checkbox' />\n                              <span className='form-check-label fw-bold text-gray-400'>\n                                Save Card\n                              </span>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div data-kt-stepper-element='content'>\n                        <div className='w-100 text-center'>\n                          <h1 className='fw-bolder text-dark mb-3'>Release!</h1>\n\n                          <div className='text-muted fw-bold fs-3'>\n                            Submit your app to kickstart your project.\n                          </div>\n\n                          <div className='text-center px-4 py-15'>\n                            <img\n                              src={toAbsoluteUrl('/media/illustrations/sketchy-1/9.png')}\n                              alt=''\n                              className='w-100 mh-300px'\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='d-flex flex-stack pt-10'>\n                        <div className='me-2'>\n                          <button\n                            onClick={prevStep}\n                            type='button'\n                            className='btn btn-lg btn-light-primary me-3'\n                            data-kt-stepper-action='previous'\n                          >\n                            <KTSVG\n                              path='/media/icons/duotune/arrows/arr063.svg'\n                              className='svg-icon-4 me-1'\n                            />\n                            Back\n                          </button>\n                        </div>\n\n                        <div>\n                          <button type='submit' className='btn btn-lg btn-primary me-3'>\n                            <span className='indicator-label'>\n                              {stepper.current?.currentStepIndex !==\n                                stepper.current?.totatStepsNumber! - 1 && 'Continue'}\n                              {stepper.current?.currentStepIndex ===\n                                stepper.current?.totatStepsNumber! - 1 && 'Submit'}\n                              <KTSVG\n                                path='/media/icons/duotune/arrows/arr064.svg'\n                                className='svg-icon-3 ms-2 me-0'\n                              />\n                            </span>\n                          </button>\n                        </div>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Main}\n","import clsx from 'clsx'\nimport React, {FC} from 'react'\nimport {toAbsoluteUrl} from '../../../helpers'\nimport {HeaderNotificationsMenu, HeaderUserMenu} from '../../../partials'\n\nconst toolbarButtonMarginClass = 'ms-1 ms-lg-3',\n  toolbarButtonHeightClass = 'w-30px h-30px w-md-40px h-md-40px',\n  toolbarUserAvatarHeightClass = 'symbol-30px symbol-md-40px'\n\nconst Topbar: FC = () => {\n  return (\n    <div className='d-flex align-items-stretch flex-shrink-0 header_topbar'>\n      {/* NOTIFICATIONS */}\n      <div\n        className={clsx('d-flex align-items-center', toolbarButtonMarginClass)}\n        style={{paddingRight: '30px'}}\n      >\n        {/* begin::Menu- wrapper */}\n        <div\n          className={clsx(\n            'btn btn-icon btn-custom',\n            toolbarButtonHeightClass,\n            'header_topbar_nofi'\n          )}\n          data-kt-menu-trigger='click'\n          data-kt-menu-attach='parent'\n          data-kt-menu-placement='bottom-end'\n          data-kt-menu-flip='bottom'\n        >\n          <img\n            src='/media/icons/duotune/general/nofitication.png'\n            alt='nofi'\n            // style={{height: '25px'}}\n          />\n        </div>\n        <HeaderNotificationsMenu />\n        {/* end::Menu wrapper */}\n      </div>\n\n      {/* begin::User */}\n      <div\n        className={clsx('d-flex align-items-center', toolbarButtonMarginClass)}\n        id='kt_header_user_menu_toggle'\n      >\n        {/* begin::Toggle */}\n        <div\n          className={clsx('cursor-pointer symbol', toolbarUserAvatarHeightClass)}\n          data-kt-menu-trigger='click'\n          data-kt-menu-attach='parent'\n          data-kt-menu-placement='bottom-end'\n          data-kt-menu-flip='bottom'\n        >\n          <img\n            src={toAbsoluteUrl('/media/avatars/userAdmin.png')}\n            alt='Admin'\n            className='header_topbar_account'\n          />\n        </div>\n        <HeaderUserMenu />\n        {/* end::Toggle */}\n      </div>\n      {/* end::User */}\n    </div>\n  )\n}\n\nexport {Topbar}\n","import {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Topbar} from './Topbar'\nexport const MasterHeader = () => {\n  const [dateString, setDateString] = useState('')\n  useEffect(() => {\n    const date = new Date()\n    const month = date.getMonth() + 1 //months from 1-12\n    const day = date.getDate()\n    const year = date.getFullYear()\n    const dateOfWeek = date.getDay()\n    const thu = ['Chủ nhật', 'Thứ hai', 'Thứ ba', 'Thứ tư', ' Thứ năm', 'Thứ sáu', 'Thứ bảy']\n    const newDate = thu[dateOfWeek] + ', ngày ' + day + ' tháng ' + month + ' năm ' + year\n    setDateString(newDate)\n  }, [])\n  return (\n    <div className={'d-flex w-100 position-fixed flex-row justify-content-between header'}>\n      {/* logo */}\n      <Link to='/profile/partner'>\n        <div className='d-flex align-items-center header_logo'>\n          <img alt='Logo' src={'/media/logos/logo-booking.png'} className='w-100 h-100' />\n        </div>\n      </Link>\n      {/* Date */}\n      <div className='d-flex align-items-center header_text'>{dateString}</div>\n      {/* nofitication */}\n      <div>\n        <Topbar />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport {useLocation} from 'react-router'\nimport {checkIsActive, KTSVG} from '../../../helpers'\nimport {useLayout} from '../../core'\ntype Props = {\n  to: string\n  title: string\n  icon?: string\n  fontIcon?: string\n  hasBullet?: boolean\n}\nconst AsideMenuItemWithSub: React.FC<Props> = ({\n  children,\n  to,\n  title,\n  icon,\n  fontIcon,\n  hasBullet,\n}) => {\n  const {pathname} = useLocation()\n  const isActive = checkIsActive(pathname, to)\n  const {config} = useLayout()\n  const {aside} = config\n  return (\n    <div\n      className={clsx(\n        'menu-item ps-3',\n        {'here show ': isActive},\n        'menu-accordion',\n        'p-2',\n        'aside_item_drop'\n      )}\n      data-kt-menu-trigger='click'\n      style={{paddingLeft: '10px'}}\n    >\n      <span className={clsx('menu-link', 'menu-accordion', 'py-3')}>\n        {hasBullet && (\n          <span className='menu-bullet'>\n            <span className='bullet bullet-dot'></span>\n          </span>\n        )}\n        {icon && aside.menuIcon === 'svg' && (\n          <span className='menu-icon'>\n            <KTSVG path={icon} className='svg-icon-2 aside_item_drop-title' />\n          </span>\n        )}\n        {fontIcon && aside.menuIcon === 'font' && <i className={clsx('bi fs-3', fontIcon)}></i>}\n        <span className={clsx('menu-title fs-3 aside_item_drop-title')} style={{fontWeight: '600'}}>\n          {title}\n        </span>\n      </span>\n      <div className={clsx('menu-sub menu-sub-accordion ', {'menu-active-bg': isActive})}>\n        {children}\n      </div>\n    </div>\n  )\n}\nexport {AsideMenuItemWithSub}\n","import React from 'react'\nimport clsx from 'clsx'\nimport {Link} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport {checkIsActive, KTSVG} from '../../../helpers'\nimport {useLayout} from '../../core'\ntype Props = {\n  to: string\n  title: string\n  icon?: string\n  fontIcon?: string\n  hasBullet?: boolean\n}\nconst AsideMenuItem: React.FC<Props> = ({\n  children,\n  to,\n  title,\n  icon,\n  fontIcon,\n  hasBullet = false,\n}) => {\n  const {pathname} = useLocation()\n  const isActive = checkIsActive(pathname, to)\n  const {config} = useLayout()\n  const {aside} = config\n  const location = useLocation()\n  return (\n    <div className='menu-item py-4' style={{paddingLeft: '10px'}}>\n      <Link\n        className={clsx(\n          'menu-link without-sub aside_item',\n          {active: isActive},\n          location.pathname === to && 'menu-active-custom'\n        )}\n        to={to}\n      >\n        {icon && aside.menuIcon === 'svg' && (\n          <span className='menu-icon'>\n            <KTSVG path={icon} className='svg-icon-2' />\n          </span>\n        )}\n        {fontIcon && aside.menuIcon === 'font' && <i className={clsx('bi fs-3', fontIcon)}></i>}\n        <span className={clsx('menu-title fs-3 aside_item_title')} style={{fontWeight: '600'}}>\n          {title}\n        </span>\n      </Link>\n      {children}\n    </div>\n  )\n}\n\nexport {AsideMenuItem}\n","/* eslint-disable react/jsx-no-target-blank */\n\nimport {AsideMenuItemWithSub} from './AsideMenuItemWithSub'\nimport {AsideMenuItem} from './AsideMenuItem'\nimport {useIntl} from 'react-intl'\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../setup';\nexport function AsideMenuMain() {\n  const isAuthorized:any = useSelector<RootState>(({auth}) => auth.user)\n  const intl = useIntl()\n  const superAdmin = () => {\n    if (isAuthorized.username ===\"superadmin@admin.com\") {\n      return (\n        <AsideMenuItemWithSub\n          to='/admin/settings'\n          title='Settings'\n          fontIcon='bi-chat-left'\n          icon='/media/icons/duotune/abstract/setting.svg'\n        >\n          <AsideMenuItem to='/admin-settings/provinces' title='Tỉnh/Thành phố' />\n          <AsideMenuItem to='/admin-settings/districts' title='Quận/Huyện/Thị xã' />\n          <AsideMenuItem to='/admin-settings/sub-districts' title='Phường/Xã' />\n          <AsideMenuItem to='/admin-settings/settingWebHook' title='WebHook' />\n        <AsideMenuItem to='/admin-settings/customCSS' title='Custom CSS' />\n        <AsideMenuItem to='/admin-settings/settingSMTP' title='SMTP' />\n        </AsideMenuItemWithSub>\n      )\n    } else {\n      return <></>\n    }\n  }\n  return (\n    <>\n      {/* quản lý tài khoản */}\n      <div className='aside_pt ' ></div>\n      <AsideMenuItemWithSub\n        to='/profile'\n        title={intl.formatMessage({id: 'MENU.DASHBOARD'})}\n        fontIcon='bi-archive'\n        icon='/media/icons/duotune/general/quanlytaikhoan.svg'\n      >\n        <AsideMenuItem to='/profile/partner' title='Đối tác' hasBullet={true} />\n        <AsideMenuItem to='/profile/customer' title='Khách hàng' hasBullet={true} />\n      </AsideMenuItemWithSub>\n      {/* quản lý bài đăng */}\n      <AsideMenuItem\n        to='/admin-manager/managerfeed'\n        title='Quản lý bài đăng'\n        fontIcon='bi-person'\n        icon='/media/icons/duotune/general/quanlybaidang.svg'\n      />\n      {/* xếp hạng- báo cáo */}\n      <AsideMenuItem\n        to='/admin-manager/rating-and-report'\n        title='Xếp hạng - Báo cáo'\n        fontIcon='bi-sticky'\n        icon='/media/icons/duotune/general/xephangbaocao.svg'\n      />\n      {/* Quản lý đơn đặt */}\n      <AsideMenuItem\n        to='/admin-manager/managerorder'\n        title='Quản lý đơn đặt'\n        icon='/media/icons/duotune/general/quanlydondat.svg'\n        fontIcon='bi-layers'\n      />\n      {/* Data Export */}\n\n      <AsideMenuItem\n        to='/admin-manager/data-export'\n        title='Data Export'\n        fontIcon='bi-chat-left'\n        icon='/media/icons/duotune/general/dataexport.svg'\n      />\n      {/* Chính sách */}\n\n      <AsideMenuItem\n        to='/admin-manager/policy'\n        title='Chính sách'\n        fontIcon='bi-chat-left'\n        icon='/media/icons/duotune/general/chinhsach.svg'\n      />\n      {/* Dạo */}\n\n      <AsideMenuItem\n        to='/admin-manager/dao'\n        title='Dạo'\n        fontIcon='bi-chat-left'\n        icon='/media/icons/duotune/general/dao.svg'\n      />\n      {/* Thông báo */}\n      <AsideMenuItemWithSub\n        to='/apps/chat'\n        title='Thông báo'\n        fontIcon='bi-chat-left'\n        icon='/media/icons/duotune/general/thongbao.svg'\n      >\n        <AsideMenuItem to='/notifications/partner' title='Đối tác' />\n        <AsideMenuItem to='/notifications/user' title='Khách hàng' />\n        <AsideMenuItem  to='/notifications/edit' title='Tạo thông báo' />\n        <AsideMenuItem to='/notifications/setting' title='Notification Setting' />\n      </AsideMenuItemWithSub>\n      {/* setting */}\n      {superAdmin()}\n      \n    </>\n  )\n}\n","import {useEffect} from 'react'\nimport Scrollbar from 'smooth-scrollbar'\ntype PropsType = {\n  element: any\n  onClick?: boolean\n}\nexport const SmoothScroll = ({element}: PropsType) => {\n  useEffect(() => {\n    if (element) {\n      //const scrollElement = Scrollbar.init(element, options)\n      // Scrollbar.infiniteScroll(() => {\n      //   console.log('scrollbar')\n      // }, 100)\n      // console.log(scrollElement.getSize())\n    }\n    return () => {\n      if (Scrollbar) {\n        Scrollbar.destroy(element)\n      }\n    }\n  }, [element])\n  return <></>\n}\n","import React, {useRef, useEffect, useState} from 'react'\nimport {useLocation} from 'react-router'\nimport clsx from 'clsx'\nimport {AsideMenuMain} from './AsideMenuMain'\nimport {DrawerComponent, ScrollComponent, ToggleComponent} from '../../../assets/ts/components'\nimport {SmoothScroll} from '../../../../app/components/SmoothScroll/SmoothScroll'\n\ntype Props = {\n  asideMenuCSSClasses: string[]\n}\n\nconst AsideMenu: React.FC<Props> = ({asideMenuCSSClasses}) => {\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n  const [scroll, setScroll] = useState<boolean>(false)\n  const {pathname} = useLocation()\n\n  useEffect(() => {\n    setTimeout(() => {\n      DrawerComponent.reinitialization()\n      ToggleComponent.reinitialization()\n      ScrollComponent.reinitialization()\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = 0\n      }\n    }, 50)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname])\n\n  useEffect(() => {\n    setScroll(!scroll)\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scrollRef])\n\n  return (\n    <>\n      <div\n        id='kt_aside_menu_wrapper'\n        ref={scrollRef}\n        className='hover-scroll-overlay-y my-5 my-lg-5 h-100'\n        data-kt-scroll='true'\n        data-kt-scroll-activate='{default: false, lg: true}'\n        data-kt-scroll-height='auto'\n        data-kt-scroll-dependencies='#kt_aside_logo, #kt_aside_footer'\n        data-kt-scroll-wrappers='#kt_aside_menu'\n        data-kt-scroll-offset='0'\n      >\n        {scrollRef && <SmoothScroll element={scrollRef.current} />}\n        <div\n          id='#kt_aside_menu'\n          data-kt-menu='true'\n          className={clsx(\n            'menu menu-column menu-title-gray-800 menu-state-title-primary menu-state-icon-primary menu-state-bullet-primary menu-arrow-gray-500 ',\n            asideMenuCSSClasses.join(' ')\n          )}\n          style={{height:'100vh'}}\n        >\n          <AsideMenuMain />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport {AsideMenu}\n","import {useLayout} from '../../core'\nimport {AsideMenu} from './AsideMenu'\n\nexport const MasterAside = () => {\n  const {classes} = useLayout()\n  return (\n    <div className='aside'>\n      <AsideMenu asideMenuCSSClasses={classes.asideMenu} />\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport {DrawerMessenger} from './DrawerMessenger'\nimport './ChatPageAdmin.scss'\nimport clsx from 'clsx'\nimport { socket } from './ConnectSocketIo'\nexport const ChatPageAdmin = () => {\n  const [countUnRead, setCountUnRead] = useState(0) ////// sau nay goi api\n  const toolbarButtonHeightClass = 'w-30px h-30px w-md-40px h-md-40px'\n  useEffect(() => {\n    socket.on('receive_message', (data) => {\n      if (data.Chatting !== 'Admin') {\n        setCountUnRead((pre) => pre + 1)\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket])\n  return (\n    <>\n      <div className='chat-page-admin-button shadow' onClick={() => setCountUnRead(0)}>\n        <div\n          className={clsx(\n            'btn btn-icon btn-active-light-primary btn-custom position-relative',\n            toolbarButtonHeightClass\n          )}\n          id='kt_drawer_chat_toggle'\n        >\n          <i className='fa-regular fa-comment-dots' style={{fontSize: '27px', color: '#E22828'}} />\n          {countUnRead === 0 ? (\n            <></>\n          ) : (\n            <>\n              {countUnRead > 0 && countUnRead <= 10 ? (\n                <div className='chat-page-admin-unRead'>{countUnRead}</div>\n              ) : (\n                <div className='chat-page-admin-unRead-plus'>\n                  10<span style={{transform: 'translateY(-3px)', fontSize: '7px'}}>+</span>\n                </div>\n              )}\n            </>\n          )}\n          <span className='bullet bullet-dot bg-success h-6px w-6px position-absolute translate-middle top-0 start-50 animation-blink'></span>\n        </div>\n      </div>\n      <div\n        id='kt_drawer_chat'\n        className='bg-white rounded chat-page-admin-container'\n        data-kt-drawer='true'\n        data-kt-drawer-name='chat'\n        data-kt-drawer-activate='true'\n        data-kt-drawer-overlay='true'\n        data-kt-drawer-direction='custom-chat'\n        data-kt-drawer-toggle='#kt_drawer_chat_toggle'\n        data-kt-drawer-close='#kt_drawer_chat_close'\n      >\n        <DrawerMessenger />\n      </div>\n    </>\n  )\n}\n","import {useEffect} from 'react'\nimport {Outlet} from 'react-router-dom'\nimport {PageDataProvider} from './core'\nimport {useLocation} from 'react-router-dom'\nimport {MenuComponent} from '../assets/ts/components'\nimport {MasterHeader} from './components/header/MasterHeader'\nimport {MasterAside} from './components/aside/MasterAside'\nimport { ChatPageAdmin } from '../partials/layout/drawer-messenger/ChatPageAdmin'\nconst MasterLayout = () => {\n  const location = useLocation()\n  useEffect(() => {\n    setTimeout(() => {\n      MenuComponent.reinitialization()\n    }, 500)\n  }, [])\n  useEffect(() => {\n    setTimeout(() => {\n      MenuComponent.reinitialization()\n    }, 500)\n  }, [location.key])\n  return (\n    <PageDataProvider>\n      <div\n        className='d-flex flex-column overflow-hidden w-100 h-100 '\n        style={{backgroundColor: '#F6F6F6'}}\n      >\n        {/* Header Master */}\n        <MasterHeader />\n        {/* info */}\n        <div className='d-flex flex-row  justify-content-end w-100 h-100'>\n          <MasterAside />\n          {/* content */}\n          <div\n            style={{\n              backgroundColor: '#F6F6F6',\n              width: 'calc(100% - 256px)',\n              height: '100%',\n              marginTop: 'auto',\n              marginBottom: 'auto',\n            }}\n          >\n            <div style={{height: '8%'}}></div>\n            <Outlet />\n            <ChatPageAdmin />\n          </div>\n        </div>\n      </div>\n    </PageDataProvider>\n  )\n}\nexport {MasterLayout}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport {KTSVG} from '../../../helpers'\n\ntype Props = {\n  className: string\n  color: string\n  svgIcon: string\n  iconColor: string\n  title: string\n  description: string\n}\n\nconst StatisticsWidget5: React.FC<Props> = ({\n  className,\n  color,\n  svgIcon,\n  iconColor,\n  title,\n  description,\n}) => {\n  return (\n    <a href='#' className={`card bg-${color} hoverable ${className}`}>\n      {/* begin::Body */}\n      <div className='card-body'>\n        <KTSVG path={svgIcon} className={`svg-icon-${iconColor} svg-icon-3x ms-n1`} />\n\n        <div className={`text-inverse-${color} fw-bolder fs-2 mb-2 mt-5`}>{title}</div>\n\n        <div className={`fw-bold text-inverse-${color} fs-7`}>{description}</div>\n      </div>\n      {/* end::Body */}\n    </a>\n  )\n}\n\nexport {StatisticsWidget5}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\n\ntype Props = {\n  className: string\n}\n\nconst TablesWidget5: React.FC<Props> = ({className}) => {\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className='card-header border-0 pt-5'>\n        <h3 className='card-title align-items-start flex-column'>\n          <span className='card-label fw-bolder fs-3 mb-1'>Latest Products</span>\n          <span className='text-muted mt-1 fw-bold fs-7'>More than 400 new products</span>\n        </h3>\n        <div className='card-toolbar'>\n          <ul className='nav'>\n            <li className='nav-item'>\n              <a\n                className='nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary active fw-bolder px-4 me-1'\n                data-bs-toggle='tab'\n                href='#kt_table_widget_5_tab_1'\n              >\n                Month\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bolder px-4 me-1'\n                data-bs-toggle='tab'\n                href='#kt_table_widget_5_tab_2'\n              >\n                Week\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bolder px-4'\n                data-bs-toggle='tab'\n                href='#kt_table_widget_5_tab_3'\n              >\n                Day\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        <div className='tab-content'>\n          {/* begin::Tap pane */}\n          <div className='tab-pane fade show active' id='kt_table_widget_5_tab_1'>\n            {/* begin::Table container */}\n            <div className='table-responsive'>\n              {/* begin::Table */}\n              <table className='table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4'>\n                {/* begin::Table head */}\n                <thead>\n                  <tr className='border-0'>\n                    <th className='p-0 w-50px'></th>\n                    <th className='p-0 min-w-150px'></th>\n                    <th className='p-0 min-w-140px'></th>\n                    <th className='p-0 min-w-110px'></th>\n                    <th className='p-0 min-w-50px'></th>\n                  </tr>\n                </thead>\n                {/* end::Table head */}\n                {/* begin::Table body */}\n                <tbody>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/plurk.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Brad Simmons\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Movie Creator</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>React, HTML</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-success'>Approved</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/telegram.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Popular Authors\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Most Successful</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>Python, MySQL</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-warning'>In Progress</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/vimeo.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        New Users\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Awesome Users</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>Laravel,Metronic</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-primary'>Success</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/bebo.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Active Customers\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Movie Creator</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>AngularJS, C#</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-danger'>Rejected</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/kickstarter.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Bestseller Theme\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Best Customers</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>ReactJS, Ruby</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-warning'>In Progress</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n                {/* end::Table body */}\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n          {/* begin::Tap pane */}\n          <div className='tab-pane fade' id='kt_table_widget_5_tab_2'>\n            {/* begin::Table container */}\n            <div className='table-responsive'>\n              {/* begin::Table */}\n              <table className='table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4'>\n                {/* begin::Table head */}\n                <thead>\n                  <tr className='border-0'>\n                    <th className='p-0 w-50px'></th>\n                    <th className='p-0 min-w-150px'></th>\n                    <th className='p-0 min-w-140px'></th>\n                    <th className='p-0 min-w-110px'></th>\n                    <th className='p-0 min-w-50px'></th>\n                  </tr>\n                </thead>\n                {/* end::Table head */}\n                {/* begin::Table body */}\n                <tbody>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/plurk.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Brad Simmons\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Movie Creator</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>React, HTML</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-success'>Approved</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/telegram.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Popular Authors\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Most Successful</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>Python, MySQL</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-warning'>In Progress</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/bebo.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Active Customers\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Movie Creator</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>AngularJS, C#</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-danger'>Rejected</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n                {/* end::Table body */}\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n          {/* begin::Tap pane */}\n          <div className='tab-pane fade' id='kt_table_widget_5_tab_3'>\n            {/* begin::Table container */}\n            <div className='table-responsive'>\n              {/* begin::Table */}\n              <table className='table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4'>\n                {/* begin::Table head */}\n                <thead>\n                  <tr className='border-0'>\n                    <th className='p-0 w-50px'></th>\n                    <th className='p-0 min-w-150px'></th>\n                    <th className='p-0 min-w-140px'></th>\n                    <th className='p-0 min-w-110px'></th>\n                    <th className='p-0 min-w-50px'></th>\n                  </tr>\n                </thead>\n                {/* end::Table head */}\n                {/* begin::Table body */}\n                <tbody>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/kickstarter.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Bestseller Theme\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Best Customers</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>ReactJS, Ruby</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-warning'>In Progress</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/bebo.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Active Customers\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Movie Creator</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>AngularJS, C#</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-danger'>Rejected</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/vimeo.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        New Users\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Awesome Users</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>Laravel,Metronic</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-primary'>Success</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className='symbol symbol-45px me-2'>\n                        <span className='symbol-label'>\n                          <img\n                            src={toAbsoluteUrl('/media/svg/brand-logos/telegram.svg')}\n                            className='h-50 align-self-center'\n                            alt=''\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\n                        Popular Authors\n                      </a>\n                      <span className='text-muted fw-bold d-block'>Most Successful</span>\n                    </td>\n                    <td className='text-end text-muted fw-bold'>Python, MySQL</td>\n                    <td className='text-end'>\n                      <span className='badge badge-light-warning'>In Progress</span>\n                    </td>\n                    <td className='text-end'>\n                      <a\n                        href='#'\n                        className='btn btn-sm btn-icon btn-bg-light btn-active-color-primary'\n                      >\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-2'\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n                {/* end::Table body */}\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n        </div>\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\nexport {TablesWidget5}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport {KTSVG} from '../../../helpers'\n\ntype Props = {\n  className: string\n  innerPadding?: string\n}\n\nconst StatsWidget3: React.FC<Props> = ({className, innerPadding = ''}) => {\n  return (\n    <div className={`card bg-danger ${className}`}>\n      {/* begin::Body */}\n      <div className={`card-body ${innerPadding}`}>\n        {/* begin::Section */}\n        <div className='d-flex align-items-center'>\n          {/* begin::Symbol */}\n          <div className='symbol symbol-50px me-5'>\n            <span className='symbol-label bg-white bg-opacity-10'>\n              <KTSVG\n                className='svg-icon-2x svg-icon-white'\n                path='/media/icons/duotune/communication/com012.svg'\n              />\n            </span>\n          </div>\n          {/* end::Symbol */}\n\n          {/* begin::Title */}\n          <div>\n            <a href='#' className='fs-4 text-white text-hover-primary fw-bolder'>\n              Chat Application\n            </a>\n            <div className='fs-7 text-white opacity-75 fw-bold mt-1'>HTML, Django</div>\n          </div>\n          {/* end::Title */}\n        </div>\n        {/* end::Section */}\n\n        {/* begin::Info */}\n        <div className='fw-bolder text-white pt-7'>\n          <span className='d-block'>26 Authors</span>\n          <span className='d-block pt-2'>140 Comments</span>\n        </div>\n        {/* end::Info */}\n\n        {/* begin::Progress */}\n        <div className='progress h-6px mt-7 bg-white bg-opacity-10'>\n          <div\n            className='progress-bar bg-white'\n            role='progressbar'\n            style={{width: '70%'}}\n            aria-valuenow={50}\n            aria-valuemin={0}\n            aria-valuemax={100}\n          ></div>\n        </div>\n        {/* end::Progress */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\nexport {StatsWidget3}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {FC} from 'react'\nimport {useIntl} from 'react-intl'\nimport {PageTitle} from '../../../_metronic/layout/core'\nimport {\n\n  TablesWidget5,\n\n} from '../../../_metronic/partials/widgets'\n\nconst DashboardPage: FC = () => (\n  <>\n    <div className='row g-5 gx-xxl-8'>\n      <div className='col-xxl-8'>\n        <TablesWidget5 className='card-xxl-stretch mb-5 mb-xxl-8' />\n      </div>\n    </div>\n  </>\n)\nconst DashboardWrapper: FC = () => {\n  const intl = useIntl()\n  return (\n    <>\n      <PageTitle breadcrumbs={[]}>{intl.formatMessage({id: 'MENU.DASHBOARD'})}</PageTitle>\n      <DashboardPage />\n    </>\n  )\n}\n\nexport {DashboardWrapper}\n","import {lazy, FC, Suspense} from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport {MasterLayout} from '../../_metronic/layout/MasterLayout'\nimport TopBarProgress from 'react-topbar-progress-indicator'\nimport {DashboardWrapper} from '../pages/dashboard/DashboardWrapper'\nimport {getCSSVariableValue} from '../../_metronic/assets/ts/_utils'\n\nconst PrivateRoutes = () => {/* \n  const BuilderPageWrapper = lazy(() => import('../pages/layout-builder/BuilderPageWrapper')) */\n  const ProfilePage = lazy(() => import('../modules/profile/ProfilePage'))\n  const AdminManage = lazy(() => import('../modules/widgets/AdminManage'))\n  const NotiPage = lazy(() => import('../modules/notifications/NotiPage'))\n  const SettingPage = lazy(()=> import('../modules/settings/SettingPage'))\n  return (\n    <Routes>\n      <Route element={<MasterLayout />}>\n        {/* Redirect to Dashboard after success login/registartion */}\n        <Route path='auth/*' element={<Navigate to='/profile/partner' />} />\n        {/* Pages */}\n        <Route path='dashboard' element={<DashboardWrapper />} />\n        {/* Lazy Modules */}\n        <Route\n          path='profile/*'\n          element={\n            <SuspensedView>\n              <ProfilePage />\n            </SuspensedView>\n          }\n        />\n       \n        <Route\n          path='admin-manager/*'\n          element={\n            <SuspensedView>\n              <AdminManage />\n            </SuspensedView>\n          }\n        />\n      \n        <Route\n          path='notifications/*'\n          element={\n            <SuspensedView>\n              <NotiPage />\n            </SuspensedView>\n          }\n        />\n        \n        <Route\n          path='admin-settings/*'\n          element={\n            <SuspensedView>\n              <SettingPage />\n            </SuspensedView>\n          }\n        />\n        {/* Page Not Found */}\n        <Route path='*' element={<Navigate to='/profile/partner' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nconst SuspensedView: FC = ({children}) => {\n  const baseColor = getCSSVariableValue('--bs-primary')\n  TopBarProgress.config({\n    barColors: {\n      '0': baseColor,\n    },\n    barThickness: 1,\n    shadowBlur: 5,\n  })\n  return <Suspense fallback={<TopBarProgress />}>{children}</Suspense>\n}\n\nexport {PrivateRoutes}\n","import {FC} from 'react'\nimport {useLang} from './Metronici18n'\nimport {IntlProvider} from 'react-intl'\nimport '@formatjs/intl-relativetimeformat/polyfill'\nimport '@formatjs/intl-relativetimeformat/locale-data/en'\nimport '@formatjs/intl-relativetimeformat/locale-data/de'\nimport '@formatjs/intl-relativetimeformat/locale-data/es'\nimport '@formatjs/intl-relativetimeformat/locale-data/fr'\nimport '@formatjs/intl-relativetimeformat/locale-data/ja'\nimport '@formatjs/intl-relativetimeformat/locale-data/zh'\n\nimport deMessages from './messages/de.json'\nimport enMessages from './messages/en.json'\nimport esMessages from './messages/es.json'\nimport frMessages from './messages/fr.json'\nimport jaMessages from './messages/ja.json'\nimport zhMessages from './messages/zh.json'\n\nconst allMessages = {\n  de: deMessages,\n  en: enMessages,\n  es: esMessages,\n  fr: frMessages,\n  ja: jaMessages,\n  zh: zhMessages,\n}\n\nconst I18nProvider: FC = ({children}) => {\n  const locale = useLang()\n  const messages = allMessages[locale]\n\n  return (\n    <IntlProvider locale={locale} messages={messages}>\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport {I18nProvider}\n","import {useEffect, useRef} from 'react'\nimport {\n  MenuComponent,\n  DrawerComponent,\n  ScrollComponent,\n  ScrollTopComponent,\n  StickyComponent,\n  ToggleComponent,\n  SwapperComponent,\n} from '../assets/ts/components'\n\nimport {useLayout} from './core'\n\nexport function MasterInit() {\n  const {config} = useLayout()\n  const isFirstRun = useRef(true)\n  const pluginsInitialization = () => {\n    isFirstRun.current = false\n    setTimeout(() => {\n      ToggleComponent.bootstrap()\n      ScrollTopComponent.bootstrap()\n      DrawerComponent.bootstrap()\n      StickyComponent.bootstrap()\n      MenuComponent.bootstrap()\n      ScrollComponent.bootstrap()\n      SwapperComponent.bootstrap()\n    }, 500)\n  }\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false\n      pluginsInitialization()\n    }\n  }, [config])\n\n  return <></>\n}\n","import {useEffect, useState} from 'react'\nimport {Suspense} from 'react'\nimport {Outlet} from 'react-router-dom'\nimport {I18nProvider} from '../_metronic/i18n/i18nProvider'\nimport {getLayout, ILayout, LayoutProvider, LayoutSplashScreen} from '../_metronic/layout/core'\nimport {MasterInit} from '../_metronic/layout/MasterInit'\nimport AuthInit from './modules/auth/redux/AuthInit'\n\nconst App = () => {\n  const [config] = useState<ILayout>(getLayout())\n  useEffect(() => {\n    const head = document.getElementsByTagName('head')[0]\n    const link = document.createElement('link')\n    link.rel = 'stylesheet'\n    link.type = 'text/css'\n    link.href = config.theme\n    head.appendChild(link)\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <Suspense fallback={<LayoutSplashScreen />}>\n      <I18nProvider>\n        <LayoutProvider>\n          <AuthInit>\n            <Outlet />\n            <MasterInit />\n          </AuthInit>\n        </LayoutProvider>\n      </I18nProvider>\n    </Suspense>\n  )\n}\n\nexport {App}\n","/**\n * High level router.\n *\n * Note: It's recommended to compose related routes in internal router\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\n */\n\n import {FC} from 'react'\n import {Routes, Route, BrowserRouter, Navigate} from 'react-router-dom'\n import {shallowEqual, useSelector} from 'react-redux'\n import {PrivateRoutes} from './PrivateRoutes'\n import {Logout, AuthPage} from '../modules/auth'\n import {RootState} from '../../setup'\n import {App} from '../App'\n \n /**\n  * Base URL of the website.\n  *\n  * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\n  */\n const {PUBLIC_URL} = process.env\n const AppRoutes: FC = () => {\n   const isAuthorized = useSelector<RootState>(({auth}) => auth.user, shallowEqual)\n   return (\n     <BrowserRouter basename={PUBLIC_URL}>\n       <Routes>\n         <Route element={<App />}>\n           {isAuthorized ? (\n             <>\n               <Route path='*' element={<PrivateRoutes />} />\n               <Route path='/' element={<PrivateRoutes />} />\n               <Route index element={<Navigate to='/profile/partner' />} />\n               <Route path='logout' element={<Logout />} />\n             </>\n           ) : (\n             <>\n               <Route path='auth/*' element={<AuthPage />} />\n               <Route path='*' element={<Navigate to='/auth' />} />\n             </>\n           )}\n         </Route>\n       </Routes>\n     </BrowserRouter>\n   )\n }\n \n export {AppRoutes}\n ","export default function setupAxios(axios: any, store: any) {\n  axios.defaults.headers.Accept = 'application/json'\n  axios.interceptors.request.use(\n    (config: any) => {\n      const {\n        auth: {accessToken},\n      } = store.getState()\n\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`\n      }\n\n      return config\n    },\n    (err: any) => Promise.reject(err)\n  )\n}\n","import ReactDOM from 'react-dom'\n// Redux\n// https://github.com/rt2zz/redux-persist\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {Provider} from 'react-redux'\nimport * as _redux from './setup'\nimport store, {persistor} from './setup/redux/Store'\n// Axios\nimport axios from 'axios'\nimport {Chart, registerables} from 'chart.js'\nimport {QueryClient, QueryClientProvider} from 'react-query'\n\n// Apps\nimport {MetronicI18nProvider} from './_metronic/i18n/Metronici18n'\n/**\n * TIP: Replace this style import with dark styles to enable dark mode\n *\n * import './_metronic/assets/sass/style.dark.scss'\n *\n * TIP: Replace this style import with rtl styles to enable rtl mode\n *\n * import './_metronic/assets/css/style.rtl.css'\n **/\nimport './_metronic/assets/sass/style.scss'\nimport '../src/app/modules/settings/component/SettingCustomCSS/SettingCustomCSS.scss'\nimport './_metronic/assets/sass/style.react.scss'\nimport {AppRoutes} from './app/routing/AppRoutes'\n/**\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\n * basic Metronic mocks and returns it.\n *\n * @see https://github.com/ctimmerm/axios-mock-adapter\n */\n\n/**\n * Inject Metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n_redux.setupAxios(axios, store)\n\nChart.register(...registerables)\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <MetronicI18nProvider>\n      <Provider store={store}>\n        {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\n        <PersistGate persistor={persistor} loading={<div>Loading...</div>}>\n          <AppRoutes />\n        </PersistGate>\n      </Provider>\n    </MetronicI18nProvider>\n  </QueryClientProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}